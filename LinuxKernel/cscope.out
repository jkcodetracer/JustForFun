cscope 15 $HOME/linux -q 0000006661 0000654467
	@fs/bitmap.c

9 
	~<°rög.h
>

11 
	~<löux/sched.h
>

13 
	~<löux/kî√l.h
>

17 
	#˛ór_block
(
addr
) \

18 
	`__asm__
( "cld\n\t" \

20 "°o¶"::"a" (0), "c" (
BLOCK_SIZE
 / 4), "D" ((Ë(
addr
)):"cx", "di")

	)

23 
	#£t_bô
(
ƒ
,
addr
) ({\

24 
ªs
 
	`__asm__
( "ax"); \

25 
__asm__
 
	`__vﬁ©ûe__
( "btsl %2,%3\n\tsetb %%al": \

26 "˜" (
ªs
): "" (0), "r" (
ƒ
), "m" (*(
addr
))); \

27 
ªs
;})

	)

30 
	#˛ór_bô
(
ƒ
,
addr
) ({\

31 
ªs
 
	`__asm__
( "ax"); \

32 
__asm__
 
	`__vﬁ©ûe__
( "btrl %2,%3\n\tsetnb %%al": \

33 "˜" (
ªs
): "" (0), "r" (
ƒ
), "m" (*(
addr
))); \

34 
ªs
;})

	)

38 
	#föd_fú°_zîo
(
addr
) ({ \

39 
__ªs
; \

40 
	`__asm__
( "cld\n" \

51 : "=c" (
__ªs
): "c" (0), "S" (
addr
):"ax", "dx", "si");

	)

52 
	g__ªs
;

59 
	$‰ì_block
 (
dev
, 
block
)

61 
su≥r_block
 *
sb
;

62 
buf„r_hód
 *
bh
;

65 i‡(!(
sb
 = 
	`gë_su≥r
 (
dev
)))

66 
	`∑nic
 ("tryingÅo free block onÇonexistent device");

68 i‡(
block
 < 
sb
->
s_fú°d©az⁄e
 || block >sb->
s_nz⁄es
)

69 
	`∑nic
 ("tryingÅo free blockÇot in datazone");

72 
bh
 = 
	`gë_hash_èbÀ
 (
dev
, 
block
);

73 i‡(
bh
)

75 i‡(
bh
->
b_cou¡
 != 1)

77 
	`¥ötk
 ("tryingÅo free block (%04x:%d), count=%d\n",

78 
dev
, 
block
, 
bh
->
b_cou¡
);

81 
bh
->
b_dút
 = 0;

82 
bh
->
b_u±od©e
 = 0;

83 
	`bªl£
 (
bh
);

87 
block
 -
sb
->
s_fú°d©az⁄e
 - 1;

88 i‡(
	`˛ór_bô
 (
block
 & 8191, 
sb
->
s_zm≠
[block / 8192]->
b_d©a
))

90 
	`¥ötk
 ("block (%04x:%dË", 
dev
, 
block
 + 
sb
->
s_fú°d©az⁄e
 - 1);

91 
	`∑nic
 ("free_block: bitálready cleared");

94 
sb
->
s_zm≠
[
block
 / 8192]->
b_dút
 = 1;

95 
	}
}

99 
	$√w_block
 (
dev
)

101 
buf„r_hód
 *
bh
;

102 
su≥r_block
 *
sb
;

103 
i
, 
j
;

106 i‡(!(
sb
 = 
	`gë_su≥r
 (
dev
)))

107 
	`∑nic
 ("tryingÅo getÇew block fromÇonexistant device");

109 
j
 = 8192;

110 
i
 = 0; i < 8; i++)

111 i‡(
bh
 = 
sb
->
s_zm≠
[
i
])

112 i‡((
j
 = 
	`föd_fú°_zîo
 (
bh
->
b_d©a
)) < 8192)

116 i‡(
i
 >8 || !
bh
 || 
j
 >= 8192)

119 i‡(
	`£t_bô
 (
j
, 
bh
->
b_d©a
))

120 
	`∑nic
 ("new_block: bitálready set");

123 
bh
->
b_dút
 = 1;

124 
j
 +
i
 * 8192 + 
sb
->
s_fú°d©az⁄e
 - 1;

125 i‡(
j
 >
sb
->
s_nz⁄es
)

128 i‡(!(
bh
 = 
	`gëblk
 (
dev
, 
j
)))

129 
	`∑nic
 ("new_block: cannot get block");

131 i‡(
bh
->
b_cou¡
 != 1)

132 
	`∑nic
 ("new block: count is != 1");

134 
	`˛ór_block
 (
bh
->
b_d©a
);

135 
bh
->
b_u±od©e
 = 1;

136 
bh
->
b_dút
 = 1;

137 
	`bªl£
 (
bh
);

138  
j
;

139 
	}
}

143 
	$‰ì_öode
 (
m_öode
 *
öode
)

145 
su≥r_block
 *
sb
;

146 
buf„r_hód
 *
bh
;

149 i‡(!
öode
)

152 i‡(!
öode
->
i_dev
)

154 
	`mem£t
 (
öode
, 0,  (*inode));

158 i‡(
öode
->
i_cou¡
 > 1)

160 
	`¥ötk
 ("åyögÅÿ‰ì inodêwôh cou¡=%d\n", 
öode
->
i_cou¡
);

161 
	`∑nic
 ("free_inode");

164 i‡(
öode
->
i_∆öks
)

165 
	`∑nic
 ("tryingÅo free inode withÜinks");

167 i‡(!(
sb
 = 
	`gë_su≥r
 (
öode
->
i_dev
)))

168 
	`∑nic
 ("tryingÅo free inode onÇonexistent device");

170 i‡(
öode
->
i_num
 < 1 || inode->i_num > 
sb
->
s_nöodes
)

171 
	`∑nic
 ("tryingÅo free inode 0 orÇonexistant inode");

173 i‡(!(
bh
 = 
sb
->
s_im≠
[
öode
->
i_num
 >> 13]))

174 
	`∑nic
 ("nonexistent imap in superblock");

176 i‡(
	`˛ór_bô
 (
öode
->
i_num
 & 8191, 
bh
->
b_d©a
))

177 
	`¥ötk
 ("free_inode: bitálready cleared.\n\r");

179 
bh
->
b_dút
 = 1;

180 
	`mem£t
 (
öode
, 0,  (*inode));

181 
	}
}

185 
m_öode
 *
	$√w_öode
 (
dev
)

187 
m_öode
 *
öode
;

188 
su≥r_block
 *
sb
;

189 
buf„r_hód
 *
bh
;

190 
i
, 
j
;

193 i‡(!(
öode
 = 
	`gë_em±y_öode
 ()))

194  
NULL
;

196 i‡(!(
sb
 = 
	`gë_su≥r
 (
dev
)))

197 
	`∑nic
 ("new_inode with unknown device");

199 
j
 = 8192;

200 
i
 = 0; i < 8; i++)

201 i‡(
bh
 = 
sb
->
s_im≠
[
i
])

202 i‡((
j
 = 
	`föd_fú°_zîo
 (
bh
->
b_d©a
)) < 8192)

205 i‡(!
bh
 || 
j
 >8192 || j + 
i
 * 8192 > 
sb
->
s_nöodes
)

207 
	`ùut
 (
öode
);

208  
NULL
;

211 i‡(
	`£t_bô
 (
j
, 
bh
->
b_d©a
))

212 
	`∑nic
 ("new_inode: bitálready set");

214 
bh
->
b_dút
 = 1;

216 
öode
->
i_cou¡
 = 1;

217 
öode
->
i_∆öks
 = 1;

218 
öode
->
i_dev
 = 
dev
;

219 
öode
->
i_uid
 = 
cuºít
->
euid
;

220 
öode
->
i_gid
 = 
cuºít
->
egid
;

221 
öode
->
i_dút
 = 1;

222 
öode
->
i_num
 = 
j
 + 
i
 * 8192;

223 
öode
->
i_mtime
 = inode->
i_©ime
 = inode->
i_˘ime
 = 
CURRENT_TIME
;

224  
öode
;

225 
	}
}

	@fs/block_dev.c

7 
	~<î∫o.h
>

9 
	~<löux/sched.h
>

11 
	~<löux/kî√l.h
>

12 
	~<asm/£gmít.h
>

13 
	~<asm/sy°em.h
>

23 
	$block_wrôe
 (
dev
, *
pos
, *
buf
, 
cou¡
)

26 
block
 = *
pos
 >> 
BLOCK_SIZE_BITS
;

27 
off£t
 = *
pos
 & (
BLOCK_SIZE
 - 1);

28 
ch¨s
;

29 
wrôãn
 = 0;

30 
buf„r_hód
 *
bh
;

31 *
p
;

34 
cou¡
 > 0)

37 
ch¨s
 = 
BLOCK_SIZE
 - 
off£t
;

38 i‡(
ch¨s
 > 
cou¡
)

39 
ch¨s
 = 
cou¡
;

42 i‡(
ch¨s
 =
BLOCK_SIZE
)

43 
bh
 = 
	`gëblk
 (
dev
, 
block
);

45 
bh
 = 
	`bªada
 (
dev
, 
block
, block + 1, block + 2, -1);

46 
block
++;

48 i‡(!
bh
)

49  
wrôãn
 ? wrôã¿: -
EIO
;

52 
p
 = 
off£t
 + 
bh
->
b_d©a
;

53 
off£t
 = 0;

55 *
pos
 +
ch¨s
;

56 
wrôãn
 +
ch¨s
;

57 
cou¡
 -
ch¨s
;

59 
ch¨s
-- > 0)

60 *(
p
++Ë
	`gë_fs_byã
 (
buf
++);

62 
bh
->
b_dút
 = 1;

63 
	`bªl£
 (
bh
);

65  
wrôãn
;

66 
	}
}

70 
	$block_ªad
 (
dev
, *
pos
, *
buf
, 
cou¡
)

73 
block
 = *
pos
 >> 
BLOCK_SIZE_BITS
;

74 
off£t
 = *
pos
 & (
BLOCK_SIZE
 - 1);

75 
ch¨s
;

76 
ªad
 = 0;

77 
buf„r_hód
 *
bh
;

78 *
p
;

81 
cou¡
 > 0)

84 
ch¨s
 = 
BLOCK_SIZE
 - 
off£t
;

85 i‡(
ch¨s
 > 
cou¡
)

86 
ch¨s
 = 
cou¡
;

89 i‡(!(
bh
 = 
	`bªada
 (
dev
, 
block
, block + 1, block + 2, -1)))

90  
ªad
 ?Ñód : -
EIO
;

91 
block
++;

94 
p
 = 
off£t
 + 
bh
->
b_d©a
;

95 
off£t
 = 0;

97 *
pos
 +
ch¨s
;

98 
ªad
 +
ch¨s
;

99 
cou¡
 -
ch¨s
;

101 
ch¨s
-- > 0)

102 
	`put_fs_byã
 (*(
p
++), 
buf
++);

103 
	`bªl£
 (
bh
);

105  
ªad
;

106 
	}
}

	@fs/buffer.c

44 
	~<°d¨g.h
>

48 
	~<löux/c⁄fig.h
>

49 
	~<löux/sched.h
>

51 
	~<löux/kî√l.h
>

52 
	~<asm/sy°em.h
>

53 
	~<asm/io.h
>

55 
íd
;

56 
buf„r_hód
 *
	g°¨t_buf„r
 = (buf„r_hód *Ë&
íd
;

57 
buf„r_hód
 *
	ghash_èbÀ
[
NR_HASH
];

58 
buf„r_hód
 *
	g‰ì_li°
;

59 
èsk_°ru˘
 *
	gbuf„r_waô
 = 
NULL
;

60 
	gNR_BUFFERS
 = 0;

63 
ölöe
 

64 
	$waô_⁄_buf„r
 (
buf„r_hód
 *
bh
)

66 
	`˛i
 ();

67 
bh
->
b_lock
)

68 
	`¶ìp_⁄
 (&
bh
->
b_waô
);

69 
	`°i
 ();

70 
	}
}

74 
	$sys_sync
 ()

76 
i
;

77 
buf„r_hód
 *
bh
;

79 
	`sync_öodes
 ();

81 
bh
 = 
°¨t_buf„r
;

82 
i
 = 0; i < 
NR_BUFFERS
; i++, 
bh
++)

84 
	`waô_⁄_buf„r
 (
bh
);

85 i‡(
bh
->
b_dút
)

86 
	`Œ_rw_block
 (
WRITE
, 
bh
);

89 
	}
}

93 
	$sync_dev
 (
dev
)

95 
i
;

96 
buf„r_hód
 *
bh
;

98 
bh
 = 
°¨t_buf„r
;

99 
i
 = 0; i < 
NR_BUFFERS
; i++, 
bh
++)

101 i‡(
bh
->
b_dev
 !
dev
)

103 
	`waô_⁄_buf„r
 (
bh
);

104 i‡(
bh
->
b_dev
 =
dev
 && bh->
b_dút
)

105 
	`Œ_rw_block
 (
WRITE
, 
bh
);

107 
	`sync_öodes
 ();

108 
bh
 = 
°¨t_buf„r
;

109 
i
 = 0; i < 
NR_BUFFERS
; i++, 
bh
++)

111 i‡(
bh
->
b_dev
 !
dev
)

113 
	`waô_⁄_buf„r
 (
bh
);

114 i‡(
bh
->
b_dev
 =
dev
 && bh->
b_dút
)

115 
	`Œ_rw_block
 (
WRITE
, 
bh
);

118 
	}
}

122 
ölöe


123 
	$övÆid©e_buf„rs
 (
dev
)

125 
i
;

126 
buf„r_hód
 *
bh
;

128 
bh
 = 
°¨t_buf„r
;

129 
i
 = 0; i < 
NR_BUFFERS
; i++, 
bh
++)

131 i‡(
bh
->
b_dev
 !
dev
)

133 
	`waô_⁄_buf„r
 (
bh
);

135 i‡(
bh
->
b_dev
 =
dev
)

136 
bh
->
b_u±od©e
 = bh->
b_dút
 = 0;

138 
	}
}

165 
	$check_disk_ch™ge
 (
dev
)

167 
i
;

170 i‡(
	`MAJOR
 (
dev
) != 2)

173 i‡(!
	`Ê›py_ch™ge
 (
dev
 & 0x03))

177 
i
 = 0; i < 
NR_SUPER
; i++)

178 i‡(
su≥r_block
[
i
].
s_dev
 =
dev
)

179 
	`put_su≥r
 (
su≥r_block
[
i
].
s_dev
);

180 
	`övÆid©e_öodes
 (
dev
);

181 
	`övÆid©e_buf„rs
 (
dev
);

182 
	}
}

185 
	#_hash‚
(
dev
,
block
Ë((()(dev^block))%
NR_HASH
)

	)

186 
	#hash
(
dev
,
block
Ë
hash_èbÀ
[
	`_hash‚
(dev,block)]

	)

189 
ölöe
 

190 
	$ªmove_‰om_queues
 (
buf„r_hód
 *
bh
)

194 i‡(
bh
->
b_√xt
)

195 
bh
->
b_√xt
->
b_¥ev
 = bh->b_prev;

196 i‡(
bh
->
b_¥ev
)

197 
bh
->
b_¥ev
->
b_√xt
 = bh->b_next;

199 i‡(
	`hash
 (
bh
->
b_dev
, bh->
b_blockƒ
) == bh)

200 
	`hash
 (
bh
->
b_dev
, bh->
b_blockƒ
Ëbh->
b_√xt
;

203 i‡(!(
bh
->
b_¥ev_‰ì
Ë|| !(bh->
b_√xt_‰ì
))

204 
	`∑nic
 ("Free blockÜist corrupted");

205 
bh
->
b_¥ev_‰ì
->
b_√xt_‰ì
 = bh->b_next_free;

206 
bh
->
b_√xt_‰ì
->
b_¥ev_‰ì
 = bh->b_prev_free;

208 i‡(
‰ì_li°
 =
bh
)

209 
‰ì_li°
 = 
bh
->
b_√xt_‰ì
;

210 
	}
}

213 
ölöe
 

214 
	$ö£π_öto_queues
 (
buf„r_hód
 *
bh
)

218 
bh
->
b_√xt_‰ì
 = 
‰ì_li°
;

219 
bh
->
b_¥ev_‰ì
 = 
‰ì_li°
->b_prev_free;

220 
‰ì_li°
->
b_¥ev_‰ì
->
b_√xt_‰ì
 = 
bh
;

221 
‰ì_li°
->
b_¥ev_‰ì
 = 
bh
;

224 
bh
->
b_¥ev
 = 
NULL
;

225 
bh
->
b_√xt
 = 
NULL
;

226 i‡(!
bh
->
b_dev
)

228 
bh
->
b_√xt
 = 
	`hash
 (bh->
b_dev
, bh->
b_blockƒ
);

229 
	`hash
 (
bh
->
b_dev
, bh->
b_blockƒ
) = bh;

230 
bh
->
b_√xt
->
b_¥ev
 = bh;

231 
	}
}

235 
buf„r_hód
 *

236 
	$föd_buf„r
 (
dev
, 
block
)

238 
buf„r_hód
 *
tmp
;

240 
tmp
 = 
	`hash
 (
dev
, 
block
);Åm∞!
NULL
;Åm∞tmp->
b_√xt
)

241 i‡(
tmp
->
b_dev
 =
dev
 &&Åmp->
b_blockƒ
 =
block
)

242  
tmp
;

243  
NULL
;

244 
	}
}

260 
buf„r_hód
 *

261 
	$gë_hash_èbÀ
 (
dev
, 
block
)

263 
buf„r_hód
 *
bh
;

268 i‡(!(
bh
 = 
	`föd_buf„r
 (
dev
, 
block
)))

269  
NULL
;

271 
bh
->
b_cou¡
++;

272 
	`waô_⁄_buf„r
 (
bh
);

274 i‡(
bh
->
b_dev
 =
dev
 && bh->
b_blockƒ
 =
block
)

275  
bh
;

277 
bh
->
b_cou¡
--;

279 
	}
}

296 
	#BADNESS
(
bh
Ë(((bh)->
b_dút
<<1)+(bh)->
b_lock
)

	)

300 
buf„r_hód
 *

301 
	$gëblk
 (
dev
, 
block
)

303 
buf„r_hód
 *
tmp
, *
bh
;

305 
ª≥©
:

307 i‡(
bh
 = 
	`gë_hash_èbÀ
 (
dev
, 
block
))

308  
bh
;

311 
tmp
 = 
‰ì_li°
;

315 i‡(
tmp
->
b_cou¡
)

320 i‡(!
bh
 || 
	`BADNESS
 (
tmp
) < BADNESS (bh))

322 
bh
 = 
tmp
;

323 i‡(!
	`BADNESS
 (
tmp
))

328 (
tmp
 =Åmp->
b_√xt_‰ì
Ë!
‰ì_li°
);

330 i‡(!
bh
)

332 
	`¶ìp_⁄
 (&
buf„r_waô
);

333 
ª≥©
;

336 
	`waô_⁄_buf„r
 (
bh
);

338 i‡(
bh
->
b_cou¡
)

339 
ª≥©
;

342 
bh
->
b_dút
)

344 
	`sync_dev
 (
bh
->
b_dev
);

345 
	`waô_⁄_buf„r
 (
bh
);

346 i‡(
bh
->
b_cou¡
)

347 
ª≥©
;

355 i‡(
	`föd_buf„r
 (
dev
, 
block
))

356 
ª≥©
;

362 
bh
->
b_cou¡
 = 1;

363 
bh
->
b_dút
 = 0;

364 
bh
->
b_u±od©e
 = 0;

366 
	`ªmove_‰om_queues
 (
bh
);

367 
bh
->
b_dev
 = 
dev
;

368 
bh
->
b_blockƒ
 = 
block
;

370 
	`ö£π_öto_queues
 (
bh
);

371  
bh
;

372 
	}
}

377 
	$bªl£
 (
buf„r_hód
 *
buf
)

379 i‡(!
buf
)

381 
	`waô_⁄_buf„r
 (
buf
);

382 i‡(!(
buf
->
b_cou¡
--))

383 
	`∑nic
 ("TryingÅo free free buffer");

384 
	`wake_up
 (&
buf„r_waô
);

385 
	}
}

396 
buf„r_hód
 *

397 
	$bªad
 (
dev
, 
block
)

399 
buf„r_hód
 *
bh
;

402 i‡(!(
bh
 = 
	`gëblk
 (
dev
, 
block
)))

403 
	`∑nic
 ("bread: getblkÑeturned NULL\n");

405 i‡(
bh
->
b_u±od©e
)

406  
bh
;

408 
	`Œ_rw_block
 (
READ
, 
bh
);

409 
	`waô_⁄_buf„r
 (
bh
);

411 i‡(
bh
->
b_u±od©e
)

412  
bh
;

414 
	`bªl£
 (
bh
);

415  
NULL
;

416 
	}
}

420 
	#COPYBLK
(
‰om
,
to
) \

421 
	`__asm__
( "cld\n\t" \

424 :: "c" (
BLOCK_SIZE
/4), "S" (
‰om
), "D" (
to
) \

425 : "cx", "di", "si")

	)

439 
	$bªad_∑ge
 (
addªss
, 
dev
, 
b
[4])

441 
buf„r_hód
 *
bh
[4];

442 
i
;

445 
i
 = 0; i < 4; i++)

446 i‡(
b
[
i
])

449 i‡(
bh
[
i
] = 
	`gëblk
 (
dev
, 
b
[i]))

450 i‡(!
bh
[
i
]->
b_u±od©e
)

451 
	`Œ_rw_block
 (
READ
, 
bh
[
i
]);

454 
bh
[
i
] = 
NULL
;

456 
i
 = 0; i < 4; i++, 
addªss
 +
BLOCK_SIZE
)

457 i‡(
bh
[
i
])

459 
	`waô_⁄_buf„r
 (
bh
[
i
]);

460 i‡(
bh
[
i
]->
b_u±od©e
)

461 
	`COPYBLK
 ((Ë
bh
[
i
]->
b_d©a
, 
addªss
);

462 
	`bªl£
 (
bh
[
i
]);

464 
	}
}

477 
buf„r_hód
 *

478 
	$bªada
 (
dev
, 
fú°
, ...)

480 
va_li°
 
¨gs
;

481 
buf„r_hód
 *
bh
, *
tmp
;

484 
	`va_°¨t
 (
¨gs
, 
fú°
);

486 i‡(!(
bh
 = 
	`gëblk
 (
dev
, 
fú°
)))

487 
	`∑nic
 ("bread: getblkÑeturned NULL\n");

488 i‡(!
bh
->
b_u±od©e
)

489 
	`Œ_rw_block
 (
READ
, 
bh
);

491 (
fú°
 = 
	`va_¨g
 (
¨gs
, )) >= 0)

493 
tmp
 = 
	`gëblk
 (
dev
, 
fú°
);

494 i‡(
tmp
)

496 i‡(!
tmp
->
b_u±od©e
)

497 
	`Œ_rw_block
 (
READA
, 
bh
);

498 
tmp
->
b_cou¡
--;

502 
	`va_íd
 (
¨gs
);

503 
	`waô_⁄_buf„r
 (
bh
);

505 i‡(
bh
->
b_u±od©e
)

506  
bh
;

507 
	`bªl£
 (
bh
);

508  (
NULL
);

509 
	}
}

515 
	$buf„r_öô
 (
buf„r_íd
)

517 
buf„r_hód
 *
h
 = 
°¨t_buf„r
;

518 *
b
;

519 
i
;

523 i‡(
buf„r_íd
 == 1 << 20)

524 
b
 = (*) (640 * 1024);

526 
b
 = (*Ë
buf„r_íd
;

533 (
b
 -
BLOCK_SIZE
Ë>((*Ë(
h
 + 1)))

535 
h
->
b_dev
 = 0;

536 
h
->
b_dút
 = 0;

537 
h
->
b_cou¡
 = 0;

538 
h
->
b_lock
 = 0;

539 
h
->
b_u±od©e
 = 0;

540 
h
->
b_waô
 = 
NULL
;

541 
h
->
b_√xt
 = 
NULL
;

542 
h
->
b_¥ev
 = 
NULL
;

543 
h
->
b_d©a
 = (*Ë
b
;

544 
h
->
b_¥ev_‰ì
 = h - 1;

545 
h
->
b_√xt_‰ì
 = h + 1;

546 
h
++;

547 
NR_BUFFERS
++;

548 i‡(
b
 == (*) 0x100000)

549 
b
 = (*) 0xA0000;

551 
h
--;

552 
‰ì_li°
 = 
°¨t_buf„r
;

553 
‰ì_li°
->
b_¥ev_‰ì
 = 
h
;

554 
h
->
b_√xt_‰ì
 = 
‰ì_li°
;

556 
i
 = 0; i < 
NR_HASH
; i++)

557 
hash_èbÀ
[
i
] = 
NULL
;

558 
	}
}

	@fs/char_dev.c

7 
	~<î∫o.h
>

8 
	~<sys/ty≥s.h
>

10 
	~<löux/sched.h
>

12 
	~<löux/kî√l.h
>

14 
	~<asm/£gmít.h
>

15 
	~<asm/io.h
>

17 
ây_ªad
 (
mö‹
, *
buf
, 
cou¡
);

18 
ây_wrôe
 (
mö‹
, *
buf
, 
cou¡
);

21 (*
¸w_±r
Ë(
	trw
, 
	tmö‹
, *
	tbuf
, 
	tcou¡
,

22 
	toff_t
 * 
	tpos
);

29 
	$rw_âyx
 (
rw
, 
mö‹
, *
buf
, 
cou¡
, 
off_t
 * 
pos
)

31  ((
rw
 =
READ
Ë? 
	`ây_ªad
 (
mö‹
, 
buf
, 
cou¡
) :

32 
	`ây_wrôe
 (
mö‹
, 
buf
, 
cou¡
));

33 
	}
}

38 
	$rw_ây
 (
rw
, 
mö‹
, *
buf
, 
cou¡
, 
off_t
 * 
pos
)

41 i‡(
cuºít
->
ây
 < 0)

42  -
EPERM
;

44  
	`rw_âyx
 (
rw
, 
cuºít
->
ây
, 
buf
, 
cou¡
, 
pos
);

45 
	}
}

49 
	$rw_øm
 (
rw
, *
buf
, 
cou¡
, 
off_t
 * 
pos
)

51  -
EIO
;

52 
	}
}

56 
	$rw_mem
 (
rw
, *
buf
, 
cou¡
, 
off_t
 * 
pos
)

58  -
EIO
;

59 
	}
}

63 
	$rw_kmem
 (
rw
, *
buf
, 
cou¡
, 
off_t
 * 
pos
)

65  -
EIO
;

66 
	}
}

72 
	$rw_p‹t
 (
rw
, *
buf
, 
cou¡
, 
off_t
 * 
pos
)

74 
i
 = *
pos
;

77 
cou¡
-- > 0 && 
i
 < 65536)

80 i‡(
rw
 =
READ
)

81 
	`put_fs_byã
 (
	`öb
 (
i
), 
buf
++);

84 
	`outb
 (
	`gë_fs_byã
 (
buf
++), 
i
);

86 
i
++;

89 
i
 -*
pos
;

90 *
pos
 +
i
;

92  
i
;

93 
	}
}

97 
	$rw_mem‹y
 (
rw
, 
mö‹
, *
buf
, 
cou¡
, 
off_t
 * 
pos
)

100 
mö‹
)

103  
	`rw_øm
 (
rw
, 
buf
, 
cou¡
, 
pos
);

105  
	`rw_mem
 (
rw
, 
buf
, 
cou¡
, 
pos
);

107  
	`rw_kmem
 (
rw
, 
buf
, 
cou¡
, 
pos
);

109  (
rw
 =
READ
Ë? 0 : 
cou¡
;

111  
	`rw_p‹t
 (
rw
, 
buf
, 
cou¡
, 
pos
);

113  -
EIO
;

115 
	}
}

118 
	#NRDEVS
 (( (
¸w_èbÀ
))/( (
¸w_±r
)))

	)

121 
¸w_±r
 
	g¸w_èbÀ
[] = {

122 
NULL
,

123 
rw_mem‹y
,

124 
NULL
,

125 
NULL
,

126 
rw_âyx
,

127 
rw_ây
,

128 
NULL
,

129 
NULL


136 
	$rw_ch¨
 (
rw
, 
dev
, *
buf
, 
cou¡
, 
off_t
 * 
pos
)

138 
¸w_±r
 
ˇŒ_addr
;

141 i‡(
	`MAJOR
 (
dev
Ë>
NRDEVS
)

142  -
ENODEV
;

144 i‡(!(
ˇŒ_addr
 = 
¸w_èbÀ
[
	`MAJOR
 (
dev
)]))

145  -
ENODEV
;

147  
	`ˇŒ_addr
 (
rw
, 
	`MINOR
 (
dev
), 
buf
, 
cou¡
, 
pos
);

148 
	}
}

	@fs/exec.c

31 
	~<î∫o.h
>

32 
	~<°rög.h
>

33 
	~<sys/°©.h
>

34 
	~<a.out.h
>

36 
	~<löux/fs.h
>

37 
	~<löux/sched.h
>

39 
	~<löux/kî√l.h
>

40 
	~<löux/mm.h
>

41 
	~<asm/£gmít.h
>

43 
sys_exô
 (
exô_code
);

44 
sys_˛o£
 (
fd
);

55 
	#MAX_ARG_PAGES
 32

	)

70 
	$¸óã_èbÀs
 (*
p
, 
¨gc
, 
ívc
)

72 *
¨gv
, *
ívp
;

73 *
•
;

76 
•
 = (*Ë(0xfffffff¯& (Ë
p
);

78 
•
 -
ívc
 + 1;

79 
ívp
 = 
•
;

82 
•
 -
¨gc
 + 1;

83 
¨gv
 = 
•
;

85 
	`put_fs_l⁄g
 ((Ë
ívp
, --
•
);

86 
	`put_fs_l⁄g
 ((Ë
¨gv
, --
•
);

87 
	`put_fs_l⁄g
 ((Ë
¨gc
, --
•
);

89 
¨gc
-- > 0)

91 
	`put_fs_l⁄g
 ((Ë
p
, 
¨gv
++);

92 
	`gë_fs_byã
 (
p
++)) ;

94 
	`put_fs_l⁄g
 (0, 
¨gv
);

96 
ívc
-- > 0)

98 
	`put_fs_l⁄g
 ((Ë
p
, 
ívp
++);

99 
	`gë_fs_byã
 (
p
++)) ;

101 
	`put_fs_l⁄g
 (0, 
ívp
);

102  
•
;

103 
	}
}

115 
	$cou¡
 (**
¨gv
)

117 
i
 = 0;

118 **
tmp
;

120 i‡(
tmp
 = 
¨gv
)

121 
	`gë_fs_l⁄g
 ((*Ë(
tmp
++)))

122 
i
++;

124  
i
;

125 
	}
}

166 
	$c›y_°rögs
 (
¨gc
, **
¨gv
, *
∑ge
,

167 
p
, 
‰om_kmem
)

169 *
tmp
, *
∑g
;

170 
Àn
, 
off£t
 = 0;

171 
ﬁd_fs
, 
√w_fs
;

173 i‡(!
p
)

176 
√w_fs
 = 
	`gë_ds
 ();

177 
ﬁd_fs
 = 
	`gë_fs
 ();

179 i‡(
‰om_kmem
 == 2)

180 
	`£t_fs
 (
√w_fs
);

182 
¨gc
-- > 0)

185 i‡(
‰om_kmem
 == 1)

186 
	`£t_fs
 (
√w_fs
);

188 i‡(!(
tmp
 = (*Ë
	`gë_fs_l⁄g
 (((*Ë
¨gv
Ë+ 
¨gc
)))

189 
	`∑nic
 ("argc is wrong");

191 i‡(
‰om_kmem
 == 1)

192 
	`£t_fs
 (
ﬁd_fs
);

194 
Àn
 = 0;

197 
Àn
++;

199 
	`gë_fs_byã
 (
tmp
++));

201 i‡(
p
 - 
Àn
 < 0)

203 
	`£t_fs
 (
ﬁd_fs
);

207 
Àn
)

209 --
p
;

210 --
tmp
;

211 --
Àn
;

214 i‡(--
off£t
 < 0)

216 
off£t
 = 
p
 % 
PAGE_SIZE
;

218 i‡(
‰om_kmem
 == 2)

219 
	`£t_fs
 (
ﬁd_fs
);

223 i‡(!(
∑g
 = (*Ë
∑ge
[
p
 / 
PAGE_SIZE
]) &&

224 !(
∑g
 = (*Ë
∑ge
[
p
 / 
PAGE_SIZE
] =

225 (*Ë
	`gë_‰ì_∑ge
 ()))

228 i‡(
‰om_kmem
 == 2)

229 
	`£t_fs
 (
√w_fs
);

233 *(
∑g
 + 
off£t
Ë
	`gë_fs_byã
 (
tmp
);

237 i‡(
‰om_kmem
 == 2)

238 
	`£t_fs
 (
ﬁd_fs
);

240  
p
;

241 
	}
}

248 
	$ch™ge_ldt
 (
ãxt_size
, *
∑ge
)

250 
code_limô
, 
d©a_limô
, 
code_ba£
, 
d©a_ba£
;

251 
i
;

254 
code_limô
 = 
ãxt_size
 + 
PAGE_SIZE
 - 1;

255 
code_limô
 &= 0xFFFFF000;

256 
d©a_limô
 = 0x4000000;

258 
code_ba£
 = 
	`gë_ba£
 (
cuºít
->
ldt
[1]);

259 
d©a_ba£
 = 
code_ba£
;

261 
	`£t_ba£
 (
cuºít
->
ldt
[1], 
code_ba£
);

262 
	`£t_limô
 (
cuºít
->
ldt
[1], 
code_limô
);

263 
	`£t_ba£
 (
cuºít
->
ldt
[2], 
d©a_ba£
);

264 
	`£t_limô
 (
cuºít
->
ldt
[2], 
d©a_limô
);

268 
	`__asm__
 ("pushl $0x17\n\tpop %%fs"::);

271 
d©a_ba£
 +
d©a_limô
;

272 
i
 = 
MAX_ARG_PAGES
 - 1; i >= 0; i--)

274 
d©a_ba£
 -
PAGE_SIZE
;

275 i‡(
∑ge
[
i
])

276 
	`put_∑ge
 (
∑ge
[
i
], 
d©a_ba£
);

278  
d©a_limô
;

279 
	}
}

294 
	$do_execve
 (*
eù
, 
tmp
, *
fûíame
,

295 **
¨gv
, **
ívp
)

297 
m_öode
 *
öode
;

298 
buf„r_hód
 *
bh
;

299 
exec
 
ex
;

300 
∑ge
[
MAX_ARG_PAGES
];

301 
i
, 
¨gc
, 
ívc
;

302 
e_uid
, 
e_gid
;

303 
ªtvÆ
;

304 
sh_b™g
 = 0;

306 
p
 = 
PAGE_SIZE
 * 
MAX_ARG_PAGES
 - 4;

309 i‡((0xfff‡& 
eù
[1]) != 0x000f)

310 
	`∑nic
 ("execve called from supervisor mode");

312 
i
 = 0; i < 
MAX_ARG_PAGES
; i++)

313 
∑ge
[
i
] = 0;

315 i‡(!(
öode
 = 
	`«mei
 (
fûíame
)))

316  -
ENOENT
;

318 
¨gc
 = 
	`cou¡
 (
¨gv
);

319 
ívc
 = 
	`cou¡
 (
ívp
);

322 
ª°¨t_öãΩ
:

323 i‡(!
	`S_ISREG
 (
öode
->
i_mode
))

325 
ªtvÆ
 = -
EACCES
;

326 
exec_îr‹2
;

329 
i
 = 
öode
->
i_mode
;

330 
e_uid
 = (
i
 & 
S_ISUID
Ë? 
öode
->
i_uid
 : 
cuºít
->
euid
;

331 
e_gid
 = (
i
 & 
S_ISGID
Ë? 
öode
->
i_gid
 : 
cuºít
->
egid
;

332 i‡(
cuºít
->
euid
 =
öode
->
i_uid
)

333 
i
 >>= 6;

334 i‡(
cuºít
->
egid
 =
öode
->
i_gid
)

335 
i
 >>= 3;

336 i‡(!(
i
 & 1Ë&& !((
öode
->
i_mode
 & 0111Ë&& 
	`su£r
 ()))

338 
ªtvÆ
 = -
ENOEXEC
;

339 
exec_îr‹2
;

342 i‡(!(
bh
 = 
	`bªad
 (
öode
->
i_dev
, inode->
i_z⁄e
[0])))

344 
ªtvÆ
 = -
EACCES
;

345 
exec_îr‹2
;

348 
ex
 = *((
exec
 *Ë
bh
->
b_d©a
);

350 i‡((
bh
->
b_d©a
[0] ='#'Ë&& (bh->b_d©a[1] ='!'Ë&& (!
sh_b™g
))

360 
buf
[1023], *
˝
, *
öãΩ
, *
i_«me
, *
i_¨g
;

361 
ﬁd_fs
;

364 
	`°∫˝y
 (
buf
, 
bh
->
b_d©a
 + 2, 1022);

366 
	`bªl£
 (
bh
);

367 
	`ùut
 (
öode
);

369 
buf
[1022] = '\0';

370 i‡(
˝
 = 
	`°rchr
 (
buf
, '\n'))

372 *
˝
 = '\0';

373 
˝
 = 
buf
; (*cp == ' ') || (*cp == '\t'); cp++);

376 i‡(!
˝
 || *cp == '\0')

378 
ªtvÆ
 = -
ENOEXEC
;

379 
exec_îr‹1
;

382 
öãΩ
 = 
i_«me
 = 
˝
;

384 
i_¨g
 = 0;

385 ; *
˝
 && (*cp != ' ') && (*cp != '\t'); cp++)

387 i‡(*
˝
 == '/')

388 
i_«me
 = 
˝
 + 1;

391 i‡(*
˝
)

393 *
˝
++ = '\0';

394 
i_¨g
 = 
˝
;

404 i‡(
sh_b™g
++ == 0)

406 
p
 = 
	`c›y_°rögs
 (
ívc
, 
ívp
, 
∑ge
,Ö, 0);

407 
p
 = 
	`c›y_°rögs
 (--
¨gc
, 
¨gv
 + 1, 
∑ge
,Ö, 0);

425 
p
 = 
	`c›y_°rögs
 (1, &
fûíame
, 
∑ge
,Ö, 1);

427 
¨gc
++;

428 i‡(
i_¨g
)

430 
p
 = 
	`c›y_°rögs
 (1, &
i_¨g
, 
∑ge
,Ö, 2);

431 
¨gc
++;

434 
p
 = 
	`c›y_°rögs
 (1, &
i_«me
, 
∑ge
,Ö, 2);

435 
¨gc
++;

436 i‡(!
p
)

438 
ªtvÆ
 = -
ENOMEM
;

439 
exec_îr‹1
;

448 
ﬁd_fs
 = 
	`gë_fs
 ();

449 
	`£t_fs
 (
	`gë_ds
 ());

451 i‡(!(
öode
 = 
	`«mei
 (
öãΩ
)))

453 
	`£t_fs
 (
ﬁd_fs
);

454 
ªtvÆ
 = -
ENOENT
;

455 
exec_îr‹1
;

457 
	`£t_fs
 (
ﬁd_fs
);

458 
ª°¨t_öãΩ
;

461 
	`bªl£
 (
bh
);

466 i‡(
	`N_MAGIC
 (
ex
Ë!
ZMAGIC
 ||Éx.
a_åsize
 ||Éx.
a_drsize
 ||

467 
ex
.
a_ãxt
 +Éx.
a_d©a
 +Éx.
a_bss
 > 0x3000000 ||

468 
öode
->
i_size
 < 
ex
.
a_ãxt
 +Éx.
a_d©a
 +Éx.
a_syms
 + 
	`N_TXTOFF
 (ex))

470 
ªtvÆ
 = -
ENOEXEC
;

471 
exec_îr‹2
;

474 i‡(
	`N_TXTOFF
 (
ex
Ë!
BLOCK_SIZE
)

476 
	`¥ötk
 ("%s: N_TXTOFF !BLOCK_SIZE. Sìá.out.h.", 
fûíame
);

477 
ªtvÆ
 = -
ENOEXEC
;

478 
exec_îr‹2
;

482 i‡(!
sh_b™g
)

484 
p
 = 
	`c›y_°rögs
 (
ívc
, 
ívp
, 
∑ge
,Ö, 0);

485 
p
 = 
	`c›y_°rögs
 (
¨gc
, 
¨gv
, 
∑ge
,Ö, 0);

487 i‡(!
p
)

489 
ªtvÆ
 = -
ENOMEM
;

490 
exec_îr‹2
;

496 i‡(
cuºít
->
execuèbÀ
)

497 
	`ùut
 (
cuºít
->
execuèbÀ
);

498 
cuºít
->
execuèbÀ
 = 
öode
;

501 
i
 = 0; i < 32; i++)

502 
cuºít
->
siga˘i⁄
[
i
].
ß_h™dÀr
 = 
NULL
;

504 
i
 = 0; i < 
NR_OPEN
; i++)

505 i‡((
cuºít
->
˛o£_⁄_exec
 >> 
i
) & 1)

506 
	`sys_˛o£
 (
i
);

507 
cuºít
->
˛o£_⁄_exec
 = 0;

509 
	`‰ì_∑ge_èbÀs
 (
	`gë_ba£
 (
cuºít
->
ldt
[1]), 
	`gë_limô
 (0x0f));

510 
	`‰ì_∑ge_èbÀs
 (
	`gë_ba£
 (
cuºít
->
ldt
[2]), 
	`gë_limô
 (0x17));

512 i‡(
œ°_èsk_u£d_m©h
 =
cuºít
)

513 
œ°_èsk_u£d_m©h
 = 
NULL
;

514 
cuºít
->
u£d_m©h
 = 0;

518 
p
 +
	`ch™ge_ldt
 (
ex
.
a_ãxt
, 
∑ge
Ë- 
MAX_ARG_PAGES
 * 
PAGE_SIZE
;

520 
p
 = (Ë
	`¸óã_èbÀs
 ((*Ëp, 
¨gc
, 
ívc
);

523 
cuºít
->
brk
 = 
ex
.
a_bss
 +

524 (
cuºít
->
íd_d©a
 = 
ex
.
a_d©a
 + (cuºít->
íd_code
 =Éx.
a_ãxt
));

526 
cuºít
->
°¨t_°ack
 = 
p
 & 0xfffff000;

527 
cuºít
->
euid
 = 
e_uid
;

528 
cuºít
->
egid
 = 
e_gid
;

530 
i
 = 
ex
.
a_ãxt
 +Éx.
a_d©a
;

531 
i
 & 0xfff)

532 
	`put_fs_byã
 (0, (*Ë(
i
++));

536 
eù
[0] = 
ex
.
a_íåy
;

537 
eù
[3] = 
p
;

539 
exec_îr‹2
:

540 
	`ùut
 (
öode
);

541 
exec_îr‹1
:

542 
i
 = 0; i < 
MAX_ARG_PAGES
; i++)

543 
	`‰ì_∑ge
 (
∑ge
[
i
]);

544  (
ªtvÆ
);

545 
	}
}

	@fs/fcntl.c

7 
	~<°rög.h
>

8 
	~<î∫o.h
>

9 
	~<löux/sched.h
>

11 
	~<löux/kî√l.h
>

12 
	~<asm/£gmít.h
>

14 
	~<f˙é.h
>

15 
	~<sys/°©.h
>

17 
sys_˛o£
 (
fd
);

23 
	$dupfd
 (
fd
, 
¨g
)

27 i‡(
fd
 >
NR_OPEN
 || !
cuºít
->
fûp
[fd])

28  -
EBADF
;

30 i‡(
¨g
 >
NR_OPEN
)

31  -
EINVAL
;

33 
¨g
 < 
NR_OPEN
)

34 i‡(
cuºít
->
fûp
[
¨g
])

35 
¨g
++;

39 i‡(
¨g
 >
NR_OPEN
)

40  -
EMFILE
;

42 
cuºít
->
˛o£_⁄_exec
 &~(1 << 
¨g
);

44 (
cuºít
->
fûp
[
¨g
] = cuºít->fûp[
fd
])->
f_cou¡
++;

45  
¨g
;

46 
	}
}

51 
	$sys_dup2
 (
ﬁdfd
, 
√wfd
)

53 
	`sys_˛o£
 (
√wfd
);

54  
	`dupfd
 (
ﬁdfd
, 
√wfd
);

55 
	}
}

60 
	$sys_dup
 (
fûdes
)

62  
	`dupfd
 (
fûdes
, 0);

63 
	}
}

68 
	$sys_f˙é
 (
fd
, 
cmd
, 
¨g
)

70 
fûe
 *
fûp
;

74 i‡(
fd
 >
NR_OPEN
 || !(
fûp
 = 
cuºít
->filp[fd]))

75  -
EBADF
;

77 
cmd
)

79 
F_DUPFD
:

80  
	`dupfd
 (
fd
, 
¨g
);

81 
F_GETFD
:

82  (
cuºít
->
˛o£_⁄_exec
 >> 
fd
) & 1;

83 
F_SETFD
:

84 i‡(
¨g
 & 1)

85 
cuºít
->
˛o£_⁄_exec
 |(1 << 
fd
);

87 
cuºít
->
˛o£_⁄_exec
 &~(1 << 
fd
);

89 
F_GETFL
:

90  
fûp
->
f_Êags
;

91 
F_SETFL
:

92 
fûp
->
f_Êags
 &~(
O_APPEND
 | 
O_NONBLOCK
);

93 
fûp
->
f_Êags
 |
¨g
 & (
O_APPEND
 | 
O_NONBLOCK
);

95 
F_GETLK
:

96 
F_SETLK
:

97 
F_SETLKW
:

102 
	}
}

	@fs/file_dev.c

7 
	~<î∫o.h
>

8 
	~<f˙é.h
>

10 
	~<löux/sched.h
>

12 
	~<löux/kî√l.h
>

13 
	~<asm/£gmít.h
>

15 
	#MIN
(
a
,
b
) (((a)<(b))?(a):(b))

16 
	#MAX
(
a
,
b
) (((a)>(b))?(a):(b))

17 

	)

22 
	$fûe_ªad
 (
m_öode
 *
öode
, 
fûe
 *
fûp
, *
buf
, 
cou¡
)

24 
À·
, 
ch¨s
, 
ƒ
;

25 
buf„r_hód
 *
bh
;

28 i‡((
À·
 = 
cou¡
) <= 0)

31 
À·
)

36 i‡(
ƒ
 = 
	`bm≠
 (
öode
, (
fûp
->
f_pos
Ë/ 
BLOCK_SIZE
))

38 i‡(!(
bh
 = 
	`bªad
 (
öode
->
i_dev
, 
ƒ
)))

42 
bh
 = 
NULL
;

46 
ƒ
 = 
fûp
->
f_pos
 % 
BLOCK_SIZE
;

47 
ch¨s
 = 
	`MIN
 (
BLOCK_SIZE
 - 
ƒ
, 
À·
);

49 
fûp
->
f_pos
 +
ch¨s
;

50 
À·
 -
ch¨s
;

53 i‡(
bh
)

55 *
p
 = 
ƒ
 + 
bh
->
b_d©a
;

56 
ch¨s
-- > 0)

57 
	`put_fs_byã
 (*(
p
++), 
buf
++);

58 
	`bªl£
 (
bh
);

62 
ch¨s
-- > 0)

63 
	`put_fs_byã
 (0, 
buf
++);

67 
öode
->
i_©ime
 = 
CURRENT_TIME
;

68  (
cou¡
 - 
À·
Ë? (cou¡ -Üe·Ë: -
ERROR
;

69 
	}
}

75 
	$fûe_wrôe
 (
m_öode
 *
öode
, 
fûe
 *
fûp
, *
buf
, 
cou¡
)

77 
off_t
 
pos
;

78 
block
, 
c
;

79 
buf„r_hód
 *
bh
;

80 *
p
;

81 
i
 = 0;

92 i‡(
fûp
->
f_Êags
 & 
O_APPEND
)

93 
pos
 = 
öode
->
i_size
;

95 
pos
 = 
fûp
->
f_pos
;

97 
i
 < 
cou¡
)

101 i‡(!(
block
 = 
	`¸óã_block
 (
öode
, 
pos
 / 
BLOCK_SIZE
)))

104 i‡(!(
bh
 = 
	`bªad
 (
öode
->
i_dev
, 
block
)))

108 
c
 = 
pos
 % 
BLOCK_SIZE
;

109 
p
 = 
c
 + 
bh
->
b_d©a
;

110 
bh
->
b_dút
 = 1;

113 
c
 = 
BLOCK_SIZE
 - c;

114 i‡(
c
 > 
cou¡
 - 
i
)

115 
c
 = 
cou¡
 - 
i
;

118 
pos
 +
c
;

119 i‡(
pos
 > 
öode
->
i_size
)

121 
öode
->
i_size
 = 
pos
;

122 
öode
->
i_dút
 = 1;

126 
i
 +
c
;

127 
c
-- > 0)

128 *(
p
++Ë
	`gë_fs_byã
 (
buf
++);

129 
	`bªl£
 (
bh
);

132 
öode
->
i_mtime
 = 
CURRENT_TIME
;

135 i‡(!(
fûp
->
f_Êags
 & 
O_APPEND
))

137 
fûp
->
f_pos
 = 
pos
;

138 
öode
->
i_˘ime
 = 
CURRENT_TIME
;

141  (
i
 ? i : -1);

142 
	}
}

	@fs/file_table.c

7 
	~<löux/fs.h
>

9 
fûe
 
	gfûe_èbÀ
[
NR_FILE
];

	@fs/inode.c

7 
	~<°rög.h
>

8 
	~<sys/°©.h
>

10 
	~<löux/sched.h
>

12 
	~<löux/kî√l.h
>

13 
	~<löux/mm.h
>

14 
	~<asm/sy°em.h
>

16 
m_öode
 
	göode_èbÀ
[
NR_INODE
] = { {0,}, };

18 
ªad_öode
 (
m_öode
 *
öode
);

19 
wrôe_öode
 (
m_öode
 *
öode
);

23 
ölöe
 

24 
	$waô_⁄_öode
 (
m_öode
 *
öode
)

26 
	`˛i
 ();

27 
öode
->
i_lock
)

28 
	`¶ìp_⁄
 (&
öode
->
i_waô
);

29 
	`°i
 ();

30 
	}
}

34 
ölöe
 

35 
	$lock_öode
 (
m_öode
 *
öode
)

37 
	`˛i
 ();

38 
öode
->
i_lock
)

39 
	`¶ìp_⁄
 (&
öode
->
i_waô
);

40 
öode
->
i_lock
 = 1;

41 
	`°i
 ();

42 
	}
}

46 
ölöe
 

47 
	$u∆ock_öode
 (
m_öode
 *
öode
)

49 
öode
->
i_lock
 = 0;

50 
	`wake_up
 (&
öode
->
i_waô
);

51 
	}
}

56 
	$övÆid©e_öodes
 (
dev
)

58 
i
;

59 
m_öode
 *
öode
;

61 
öode
 = 0 + 
öode_èbÀ
;

62 
i
 = 0; i < 
NR_INODE
; i++, 
öode
++)

64 
	`waô_⁄_öode
 (
öode
);

65 i‡(
öode
->
i_dev
 =
dev
)

67 i‡(
öode
->
i_cou¡
)

68 
	`¥ötk
 ("inode in use onÑemoved disk\n\r");

69 
öode
->
i_dev
 = inode->
i_dút
 = 0;

72 
	}
}

77 
	$sync_öodes
 ()

79 
i
;

80 
m_öode
 *
öode
;

82 
öode
 = 0 + 
öode_èbÀ
;

83 
i
 = 0; i < 
NR_INODE
; i++, 
öode
++)

85 
	`waô_⁄_öode
 (
öode
);

86 i‡(
öode
->
i_dút
 && !öode->
i_pùe
)

87 
	`wrôe_öode
 (
öode
);

89 
	}
}

96 
	$_bm≠
 (
m_öode
 *
öode
, 
block
, 
¸óã
)

98 
buf„r_hód
 *
bh
;

99 
i
;

102 i‡(
block
 < 0)

103 
	`∑nic
 ("_bmap: block<0");

105 i‡(
block
 >= 7 + 512 + 512 * 512)

106 
	`∑nic
 ("_bmap: block>big");

108 i‡(
block
 < 7)

113 i‡(
¸óã
 && !
öode
->
i_z⁄e
[
block
])

114 i‡(
öode
->
i_z⁄e
[
block
] = 
	`√w_block
 (öode->
i_dev
))

116 
öode
->
i_˘ime
 = 
CURRENT_TIME
;

117 
öode
->
i_dút
 = 1;

119  
öode
->
i_z⁄e
[
block
];

122 
block
 -= 7;

123 i‡(
block
 < 512)

128 i‡(
¸óã
 && !
öode
->
i_z⁄e
[7])

129 i‡(
öode
->
i_z⁄e
[7] = 
	`√w_block
 (öode->
i_dev
))

131 
öode
->
i_dút
 = 1;

132 
öode
->
i_˘ime
 = 
CURRENT_TIME
;

135 i‡(!
öode
->
i_z⁄e
[7])

138 i‡(!(
bh
 = 
	`bªad
 (
öode
->
i_dev
, inode->
i_z⁄e
[7])))

141 
i
 = ((*Ë(
bh
->
b_d©a
))[
block
];

144 i‡(
¸óã
 && !
i
)

145 i‡(
i
 = 
	`√w_block
 (
öode
->
i_dev
))

147 ((*Ë(
bh
->
b_d©a
))[
block
] = 
i
;

148 
bh
->
b_dút
 = 1;

151 
	`bªl£
 (
bh
);

152  
i
;

156 
block
 -= 512;

159 i‡(
¸óã
 && !
öode
->
i_z⁄e
[8])

160 i‡(
öode
->
i_z⁄e
[8] = 
	`√w_block
 (öode->
i_dev
))

162 
öode
->
i_dút
 = 1;

163 
öode
->
i_˘ime
 = 
CURRENT_TIME
;

166 i‡(!
öode
->
i_z⁄e
[8])

169 i‡(!(
bh
 = 
	`bªad
 (
öode
->
i_dev
, inode->
i_z⁄e
[8])))

172 
i
 = ((*Ë
bh
->
b_d©a
)[
block
 >> 9];

176 i‡(
¸óã
 && !
i
)

177 i‡(
i
 = 
	`√w_block
 (
öode
->
i_dev
))

179 ((*Ë(
bh
->
b_d©a
))[
block
 >> 9] = 
i
;

180 
bh
->
b_dút
 = 1;

182 
	`bªl£
 (
bh
);

184 i‡(!
i
)

187 i‡(!(
bh
 = 
	`bªad
 (
öode
->
i_dev
, 
i
)))

190 
i
 = ((*Ë
bh
->
b_d©a
)[
block
 & 511];

194 i‡(
¸óã
 && !
i
)

195 i‡(
i
 = 
	`√w_block
 (
öode
->
i_dev
))

197 ((*Ë(
bh
->
b_d©a
))[
block
 & 511] = 
i
;

198 
bh
->
b_dút
 = 1;

201 
	`bªl£
 (
bh
);

202  
i
;

203 
	}
}

207 
	$bm≠
 (
m_öode
 *
öode
, 
block
)

209  
	`_bm≠
 (
öode
, 
block
, 0);

210 
	}
}

214 
	$¸óã_block
 (
m_öode
 *
öode
, 
block
)

216  
	`_bm≠
 (
öode
, 
block
, 1);

217 
	}
}

221 
	$ùut
 (
m_öode
 *
öode
)

223 i‡(!
öode
)

225 
	`waô_⁄_öode
 (
öode
);

226 i‡(!
öode
->
i_cou¡
)

227 
	`∑nic
 ("iput:ÅryingÅo free free inode");

231 i‡(
öode
->
i_pùe
)

233 
	`wake_up
 (&
öode
->
i_waô
);

234 i‡(--
öode
->
i_cou¡
)

236 
	`‰ì_∑ge
 (
öode
->
i_size
);

237 
öode
->
i_cou¡
 = 0;

238 
öode
->
i_dút
 = 0;

239 
öode
->
i_pùe
 = 0;

243 i‡(!
öode
->
i_dev
)

245 
öode
->
i_cou¡
--;

249 i‡(
	`S_ISBLK
 (
öode
->
i_mode
))

251 
	`sync_dev
 (
öode
->
i_z⁄e
[0]);

252 
	`waô_⁄_öode
 (
öode
);

254 
ª≥©
:

256 i‡(
öode
->
i_cou¡
 > 1)

258 
öode
->
i_cou¡
--;

262 i‡(!
öode
->
i_∆öks
)

264 
	`åunˇã
 (
öode
);

265 
	`‰ì_öode
 (
öode
);

269 i‡(
öode
->
i_dút
)

271 
	`wrôe_öode
 (
öode
);

272 
	`waô_⁄_öode
 (
öode
);

273 
ª≥©
;

276 
öode
->
i_cou¡
--;

278 
	}
}

282 
m_öode
 *

283 
	$gë_em±y_öode
 ()

285 
m_öode
 *
öode
;

286 
m_öode
 *
œ°_öode
 = 
öode_èbÀ
;

287 
i
;

292 
öode
 = 
NULL
;

293 
i
 = 
NR_INODE
; i; i--)

296 i‡(++
œ°_öode
 >
öode_èbÀ
 + 
NR_INODE
)

297 
œ°_öode
 = 
öode_èbÀ
;

300 i‡(!
œ°_öode
->
i_cou¡
)

302 
öode
 = 
œ°_öode
;

303 i‡(!
öode
->
i_dút
 && !öode->
i_lock
)

308 i‡(!
öode
)

310 
i
 = 0; i < 
NR_INODE
; i++)

311 
	`¥ötk
 ("%04x: %6d\t", 
öode_èbÀ
[
i
].
i_dev
,

312 
öode_èbÀ
[
i
].
i_num
);

313 
	`∑nic
 ("No free inodes in mem");

316 
	`waô_⁄_öode
 (
öode
);

318 
öode
->
i_dút
)

320 
	`wrôe_öode
 (
öode
);

321 
	`waô_⁄_öode
 (
öode
);

324 
öode
->
i_cou¡
);

326 
	`mem£t
 (
öode
, 0,  (*inode));

327 
öode
->
i_cou¡
 = 1;

328  
öode
;

329 
	}
}

334 
m_öode
 *

335 
	$gë_pùe_öode
 ()

337 
m_öode
 *
öode
;

339 i‡(!(
öode
 = 
	`gë_em±y_öode
 ()))

340  
NULL
;

341 i‡(!(
öode
->
i_size
 = 
	`gë_‰ì_∑ge
 ()))

343 
öode
->
i_cou¡
 = 0;

344  
NULL
;

346 
öode
->
i_cou¡
 = 2;

347 
	`PIPE_HEAD
 (*
öode
Ë
	`PIPE_TAIL
 (*inode) = 0;

348 
öode
->
i_pùe
 = 1;

349  
öode
;

350 
	}
}

354 
m_öode
 *

355 
	$igë
 (
dev
, 
ƒ
)

357 
m_öode
 *
öode
, *
em±y
;

359 i‡(!
dev
)

360 
	`∑nic
 ("iget with dev==0");

362 
em±y
 = 
	`gë_em±y_öode
 ();

364 
öode
 = 
öode_èbÀ
;

365 
öode
 < 
NR_INODE
 + 
öode_èbÀ
)

368 i‡(
öode
->
i_dev
 !
dev
 || inode->
i_num
 !
ƒ
)

370 
öode
++;

374 
	`waô_⁄_öode
 (
öode
);

377 i‡(
öode
->
i_dev
 !
dev
 || inode->
i_num
 !
ƒ
)

379 
öode
 = 
öode_èbÀ
;

383 
öode
->
i_cou¡
++;

384 i‡(
öode
->
i_mou¡
)

386 
i
;

390 
i
 = 0; i < 
NR_SUPER
; i++)

391 i‡(
su≥r_block
[
i
].
s_imou¡
 =
öode
)

393 i‡(
i
 >
NR_SUPER
)

395 
	`¥ötk
 ("Mounted inode hasn't got sb\n");

396 i‡(
em±y
)

397 
	`ùut
 (
em±y
);

398  
öode
;

402 
	`ùut
 (
öode
);

403 
dev
 = 
su≥r_block
[
i
].
s_dev
;

404 
ƒ
 = 
ROOT_INO
;

405 
öode
 = 
öode_èbÀ
;

409 i‡(
em±y
)

410 
	`ùut
 (
em±y
);

411  
öode
;

415 i‡(!
em±y
)

416  (
NULL
);

417 
öode
 = 
em±y
;

418 
öode
->
i_dev
 = 
dev
;

419 
öode
->
i_num
 = 
ƒ
;

420 
	`ªad_öode
 (
öode
);

421  
öode
;

422 
	}
}

426 
	$ªad_öode
 (
m_öode
 *
öode
)

428 
su≥r_block
 *
sb
;

429 
buf„r_hód
 *
bh
;

430 
block
;

433 
	`lock_öode
 (
öode
);

434 i‡(!(
sb
 = 
	`gë_su≥r
 (
öode
->
i_dev
)))

435 
	`∑nic
 ("tryingÅoÑead inode without dev");

438 
block
 = 2 + 
sb
->
s_im≠_blocks
 + sb->
s_zm≠_blocks
 +

439 (
öode
->
i_num
 - 1Ë/ 
INODES_PER_BLOCK
;

441 i‡(!(
bh
 = 
	`bªad
 (
öode
->
i_dev
, 
block
)))

442 
	`∑nic
 ("unableÅoÑead i-node block");

443 *(
d_öode
 *Ë
öode
 =

444 ((
d_öode
 *Ë
bh
->
b_d©a
)[(
öode
->
i_num
 - 1Ë% 
INODES_PER_BLOCK
];

446 
	`bªl£
 (
bh
);

447 
	`u∆ock_öode
 (
öode
);

448 
	}
}

452 
	$wrôe_öode
 (
m_öode
 *
öode
)

454 
su≥r_block
 *
sb
;

455 
buf„r_hód
 *
bh
;

456 
block
;

460 
	`lock_öode
 (
öode
);

461 i‡(!
öode
->
i_dút
 || !öode->
i_dev
)

463 
	`u∆ock_öode
 (
öode
);

467 i‡(!(
sb
 = 
	`gë_su≥r
 (
öode
->
i_dev
)))

468 
	`∑nic
 ("tryingÅo write inode without device");

471 
block
 = 2 + 
sb
->
s_im≠_blocks
 + sb->
s_zm≠_blocks
 +

472 (
öode
->
i_num
 - 1Ë/ 
INODES_PER_BLOCK
;

474 i‡(!(
bh
 = 
	`bªad
 (
öode
->
i_dev
, 
block
)))

475 
	`∑nic
 ("unableÅoÑead i-node block");

477 ((
d_öode
 *Ë
bh
->
b_d©a
)

478 [(
öode
->
i_num
 - 1Ë% 
INODES_PER_BLOCK
] = *(
d_öode
 *) inode;

480 
bh
->
b_dút
 = 1;

481 
öode
->
i_dút
 = 0;

482 
	`bªl£
 (
bh
);

483 
	`u∆ock_öode
 (
öode
);

484 
	}
}

	@fs/ioctl.c

7 
	~<°rög.h
>

8 
	~<î∫o.h
>

9 
	~<sys/°©.h
>

11 
	~<löux/sched.h
>

14 
ây_io˘l
 (
dev
, 
cmd
, 
¨g
);

17 (*
	tio˘l_±r
Ë(
	tdev
, 
	tcmd
, 
	t¨g
);

20 
	#NRDEVS
 (( (
io˘l_èbÀ
))/( (
io˘l_±r
)))

	)

23 
io˘l_±r
 
io˘l_èbÀ
[] = {

24 
NULL
,

25 
NULL
,

26 
NULL
,

27 
NULL
,

28 
ây_io˘l
,

29 
ây_io˘l
,

30 
NULL
,

31 
NULL


32 
	}
};

39 
	$sys_io˘l
 (
fd
, 
cmd
, 
¨g
)

41 
fûe
 *
fûp
;

42 
dev
, 
mode
;

45 i‡(
fd
 >
NR_OPEN
 || !(
fûp
 = 
cuºít
->filp[fd]))

46  -
EBADF
;

48 
mode
 = 
fûp
->
f_öode
->
i_mode
;

49 i‡(!
	`S_ISCHR
 (
mode
Ë&& !
	`S_ISBLK
 (mode))

50  -
EINVAL
;

52 
dev
 = 
fûp
->
f_öode
->
i_z⁄e
[0];

53 i‡(
	`MAJOR
 (
dev
Ë>
NRDEVS
)

54  -
ENODEV
;

56 i‡(!
io˘l_èbÀ
[
	`MAJOR
 (
dev
)])

57  -
ENOTTY
;

59  
io˘l_èbÀ
[
	`MAJOR
 (
dev
)] (dev, 
cmd
, 
¨g
);

60 
	}
}

	@fs/namei.c

14 
	~<löux/sched.h
>

16 
	~<löux/kî√l.h
>

17 
	~<asm/£gmít.h
>

19 
	~<°rög.h
>

20 
	~<f˙é.h
>

21 
	~<î∫o.h
>

22 
	~<c⁄°.h
>

23 
	~<sys/°©.h
>

27 
	#ACC_MODE
(
x
Ë–"\004\002\006\377"[(x)&
O_ACCMODE
])

	)

38 
	#MAY_EXEC
 1

39 
	#MAY_WRITE
 2

40 
	#MAY_READ
 4

41 

	)

58 
	$≥rmissi⁄
 (
m_öode
 *
öode
, 
mask
)

60 
mode
 = 
öode
->
i_mode
;

65 i‡(
öode
->
i_dev
 && !öode->
i_∆öks
)

68 i‡(
cuºít
->
euid
 =
öode
->
i_uid
)

69 
mode
 >>= 6;

71 i‡(
cuºít
->
egid
 =
öode
->
i_gid
)

72 
mode
 >>= 3;

74 i‡(((
mode
 & 
mask
 & 0007Ë=maskË|| 
	`su£r
 ())

77 
	}
}

96 
	$m©ch
 (
Àn
, c⁄° *
«me
, 
dú_íåy
 *
de
)

98 
ßme
 
	`__asm__
 ("ax");

101 i‡(!
de
 || !de->
öode
 || 
Àn
 > 
NAME_LEN
)

104 i‡(
Àn
 < 
NAME_LEN
 && 
de
->
«me
[len])

109 
	`__asm__
 ("cld\n\t"

112 : "˜" (
ßme
): "" (0), "S" ((Ë
«me
), "D" ((Ë
de
->«me), "c" (
Àn
):"cx", "di",

114  
ßme
;

115 
	}
}

140 
buf„r_hód
 *

141 
	$föd_íåy
 (
m_öode
 **
dú
,

142 c⁄° *
«me
, 
«mñí
, 
dú_íåy
 **
ªs_dú
)

144 
íåõs
;

145 
block
, 
i
;

146 
buf„r_hód
 *
bh
;

147 
dú_íåy
 *
de
;

148 
su≥r_block
 *
sb
;

151 #ifde‡
NO_TRUNCATE


152 i‡(
«mñí
 > 
NAME_LEN
)

153  
NULL
;

156 i‡(
«mñí
 > 
NAME_LEN
)

157 
«mñí
 = 
NAME_LEN
;

160 
íåõs
 = (*
dú
)->
i_size
 / ( (
dú_íåy
));

161 *
ªs_dú
 = 
NULL
;

163 i‡(!
«mñí
)

164  
NULL
;

167 i‡(
«mñí
 =2 && 
	`gë_fs_byã
 (
«me
) == '.'

168 && 
	`gë_fs_byã
 (
«me
 + 1) == '.')

173 i‡((*
dú
Ë=
cuºít
->
roŸ
)

174 
«mñí
 = 1;

176 i‡((*
dú
)->
i_num
 =
ROOT_INO
)

182 
sb
 = 
	`gë_su≥r
 ((*
dú
)->
i_dev
);

185 i‡(
sb
->
s_imou¡
)

187 
	`ùut
 (*
dú
);

188 (*
dú
Ë
sb
->
s_imou¡
;

189 (*
dú
)->
i_cou¡
++;

194 i‡(!(
block
 = (*
dú
)->
i_z⁄e
[0]))

195  
NULL
;

197 i‡(!(
bh
 = 
	`bªad
 ((*
dú
)->
i_dev
, 
block
)))

198  
NULL
;

201 
i
 = 0;

202 
de
 = (
dú_íåy
 *Ë
bh
->
b_d©a
;

203 
i
 < 
íåõs
)

206 i‡((*Ë
de
 >
BLOCK_SIZE
 + 
bh
->
b_d©a
)

208 
	`bªl£
 (
bh
);

209 
bh
 = 
NULL
;

212 i‡(!(
block
 = 
	`bm≠
 (*
dú
, 
i
 / 
DIR_ENTRIES_PER_BLOCK
)) ||

213 !(
bh
 = 
	`bªad
 ((*
dú
)->
i_dev
, 
block
)))

215 
i
 +
DIR_ENTRIES_PER_BLOCK
;

218 
de
 = (
dú_íåy
 *Ë
bh
->
b_d©a
;

221 i‡(
	`m©ch
 (
«mñí
, 
«me
, 
de
))

223 *
ªs_dú
 = 
de
;

224  
bh
;

227 
de
++;

228 
i
++;

231 
	`bªl£
 (
bh
);

232  
NULL
;

233 
	}
}

257 
buf„r_hód
 *

258 
	$add_íåy
 (
m_öode
 *
dú
,

259 c⁄° *
«me
, 
«mñí
, 
dú_íåy
 **
ªs_dú
)

261 
block
, 
i
;

262 
buf„r_hód
 *
bh
;

263 
dú_íåy
 *
de
;

265 *
ªs_dú
 = 
NULL
;

267 #ifde‡
NO_TRUNCATE


268 i‡(
«mñí
 > 
NAME_LEN
)

269  
NULL
;

272 i‡(
«mñí
 > 
NAME_LEN
)

273 
«mñí
 = 
NAME_LEN
;

276 i‡(!
«mñí
)

277  
NULL
;

279 i‡(!(
block
 = 
dú
->
i_z⁄e
[0]))

280  
NULL
;

282 i‡(!(
bh
 = 
	`bªad
 (
dú
->
i_dev
, 
block
)))

283  
NULL
;

286 
i
 = 0;

287 
de
 = (
dú_íåy
 *Ë
bh
->
b_d©a
;

292 i‡((*Ë
de
 >
BLOCK_SIZE
 + 
bh
->
b_d©a
)

294 
	`bªl£
 (
bh
);

295 
bh
 = 
NULL
;

296 
block
 = 
	`¸óã_block
 (
dú
, 
i
 / 
DIR_ENTRIES_PER_BLOCK
);

297 i‡(!
block
)

298  
NULL
;

300 i‡(!(
bh
 = 
	`bªad
 (
dú
->
i_dev
, 
block
)))

302 
i
 +
DIR_ENTRIES_PER_BLOCK
;

306 
de
 = (
dú_íåy
 *Ë
bh
->
b_d©a
;

312 i‡(
i
 *  (
dú_íåy
Ë>
dú
->
i_size
)

314 
de
->
öode
 = 0;

315 
dú
->
i_size
 = (
i
 + 1Ë*  (
dú_íåy
);

316 
dú
->
i_dút
 = 1;

317 
dú
->
i_˘ime
 = 
CURRENT_TIME
;

322 i‡(!
de
->
öode
)

324 
dú
->
i_mtime
 = 
CURRENT_TIME
;

325 
i
 = 0; i < 
NAME_LEN
; i++)

326 
de
->
«me
[
i
] = (ò< 
«mñí
Ë? 
	`gë_fs_byã
 (name + i) : 0;

327 
bh
->
b_dút
 = 1;

328 *
ªs_dú
 = 
de
;

329  
bh
;

332 
de
++;

333 
i
++;

336 
	`bªl£
 (
bh
);

337  
NULL
;

338 
	}
}

354 
m_öode
 *

355 
	$gë_dú
 (c⁄° *
∑th«me
)

357 
c
;

358 c⁄° *
thi¢ame
;

359 
m_öode
 *
öode
;

360 
buf„r_hód
 *
bh
;

361 
«mñí
, 
ör
, 
idev
;

362 
dú_íåy
 *
de
;

365 i‡(!
cuºít
->
roŸ
 || !cuºít->roŸ->
i_cou¡
)

366 
	`∑nic
 ("NoÑoot inode");

368 i‡(!
cuºít
->
pwd
 || !cuºít->pwd->
i_cou¡
)

369 
	`∑nic
 ("No cwd inode");

371 i‡((
c
 = 
	`gë_fs_byã
 (
∑th«me
)) == '/')

373 
öode
 = 
cuºít
->
roŸ
;

374 
∑th«me
++;

378 i‡(
c
)

379 
öode
 = 
cuºít
->
pwd
;

382  
NULL
;

384 
öode
->
i_cou¡
++;

388 
thi¢ame
 = 
∑th«me
;

389 i‡(!
	`S_ISDIR
 (
öode
->
i_mode
Ë|| !
	`≥rmissi⁄
 (öode, 
MAY_EXEC
))

391 
	`ùut
 (
öode
);

392  
NULL
;

397 
«mñí
 = 0; (
c
 = 
	`gë_fs_byã
 (
∑th«me
++)) && (c != '/');

398 
«mñí
++)

401 i‡(!
c
)

402  
öode
;

405 i‡(!(
bh
 = 
	`föd_íåy
 (&
öode
, 
thi¢ame
, 
«mñí
, &
de
)))

407 
	`ùut
 (
öode
);

408  
NULL
;

411 
ör
 = 
de
->
öode
;

412 
idev
 = 
öode
->
i_dev
;

413 
	`bªl£
 (
bh
);

414 
	`ùut
 (
öode
);

416 i‡(!(
öode
 = 
	`igë
 (
idev
, 
ör
)))

417  
NULL
;

419 
	}
}

433 
m_öode
 *

434 
	$dú_«mei
 (c⁄° *
∑th«me
, *
«mñí
, c⁄° **
«me
)

436 
c
;

437 c⁄° *
ba£«me
;

438 
m_öode
 *
dú
;

441 i‡(!(
dú
 = 
	`gë_dú
 (
∑th«me
)))

442  
NULL
;

445 
ba£«me
 = 
∑th«me
;

446 
c
 = 
	`gë_fs_byã
 (
∑th«me
++))

447 i‡(
c
 == '/')

448 
ba£«me
 = 
∑th«me
;

449 *
«mñí
 = 
∑th«me
 - 
ba£«me
 - 1;

450 *
«me
 = 
ba£«me
;

451  
dú
;

452 
	}
}

469 
m_öode
 *

470 
	$«mei
 (c⁄° *
∑th«me
)

472 c⁄° *
ba£«me
;

473 
ör
, 
dev
, 
«mñí
;

474 
m_öode
 *
dú
;

475 
buf„r_hód
 *
bh
;

476 
dú_íåy
 *
de
;

479 i‡(!(
dú
 = 
	`dú_«mei
 (
∑th«me
, &
«mñí
, &
ba£«me
)))

480  
NULL
;

482 i‡(!
«mñí
)

483  
dú
;

488 
bh
 = 
	`föd_íåy
 (&
dú
, 
ba£«me
, 
«mñí
, &
de
);

489 i‡(!
bh
)

491 
	`ùut
 (
dú
);

492  
NULL
;

495 
ör
 = 
de
->
öode
;

496 
dev
 = 
dú
->
i_dev
;

497 
	`bªl£
 (
bh
);

498 
	`ùut
 (
dú
);

500 
dú
 = 
	`igë
 (
dev
, 
ör
);

501 i‡(
dú
)

503 
dú
->
i_©ime
 = 
CURRENT_TIME
;

504 
dú
->
i_dút
 = 1;

506  
dú
;

507 
	}
}

522 
	$›í_«mei
 (c⁄° *
∑th«me
, 
Êag
, 
mode
,

523 
m_öode
 **
ªs_öode
)

525 c⁄° *
ba£«me
;

526 
ör
, 
dev
, 
«mñí
;

527 
m_öode
 *
dú
, *
öode
;

528 
buf„r_hód
 *
bh
;

529 
dú_íåy
 *
de
;

532 i‡((
Êag
 & 
O_TRUNC
Ë&& !(Êag & 
O_ACCMODE
))

533 
Êag
 |
O_WRONLY
;

535 
mode
 &0777 & ~
cuºít
->
umask
;

536 
mode
 |
I_REGULAR
;

538 i‡(!(
dú
 = 
	`dú_«mei
 (
∑th«me
, &
«mñí
, &
ba£«me
)))

539  -
ENOENT
;

542 i‡(!
«mñí
)

544 i‡(!(
Êag
 & (
O_ACCMODE
 | 
O_CREAT
 | 
O_TRUNC
)))

546 *
ªs_öode
 = 
dú
;

550 
	`ùut
 (
dú
);

551  -
EISDIR
;

554 
bh
 = 
	`föd_íåy
 (&
dú
, 
ba£«me
, 
«mñí
, &
de
);

556 i‡(!
bh
)

559 i‡(!(
Êag
 & 
O_CREAT
))

561 
	`ùut
 (
dú
);

562  -
ENOENT
;

565 i‡(!
	`≥rmissi⁄
 (
dú
, 
MAY_WRITE
))

567 
	`ùut
 (
dú
);

568  -
EACCES
;

571 
öode
 = 
	`√w_öode
 (
dú
->
i_dev
);

572 i‡(!
öode
)

574 
	`ùut
 (
dú
);

575  -
ENOSPC
;

578 
öode
->
i_uid
 = 
cuºít
->
euid
;

579 
öode
->
i_mode
 = 
mode
;

580 
öode
->
i_dút
 = 1;

582 
bh
 = 
	`add_íåy
 (
dú
, 
ba£«me
, 
«mñí
, &
de
);

585 i‡(!
bh
)

587 
öode
->
i_∆öks
--;

588 
	`ùut
 (
öode
);

589 
	`ùut
 (
dú
);

590  -
ENOSPC
;

594 
de
->
öode
 = inode->
i_num
;

595 
bh
->
b_dút
 = 1;

596 
	`bªl£
 (
bh
);

597 
	`ùut
 (
dú
);

598 *
ªs_öode
 = 
öode
;

603 
ör
 = 
de
->
öode
;

604 
dev
 = 
dú
->
i_dev
;

605 
	`bªl£
 (
bh
);

606 
	`ùut
 (
dú
);

608 i‡(
Êag
 & 
O_EXCL
)

609  -
EEXIST
;

611 i‡(!(
öode
 = 
	`igë
 (
dev
, 
ör
)))

612  -
EACCES
;

615 i‡((
	`S_ISDIR
 (
öode
->
i_mode
Ë&& (
Êag
 & 
O_ACCMODE
)) ||

616 !
	`≥rmissi⁄
 (
öode
, 
	`ACC_MODE
 (
Êag
)))

618 
	`ùut
 (
öode
);

619  -
EPERM
;

622 
öode
->
i_©ime
 = 
CURRENT_TIME
;

624 i‡(
Êag
 & 
O_TRUNC
)

625 
	`åunˇã
 (
öode
);

627 *
ªs_öode
 = 
öode
;

629 
	}
}

636 
	$sys_mknod
 (c⁄° *
fûíame
, 
mode
, 
dev
)

638 c⁄° *
ba£«me
;

639 
«mñí
;

640 
m_öode
 *
dú
, *
öode
;

641 
buf„r_hód
 *
bh
;

642 
dú_íåy
 *
de
;

645 i‡(!
	`su£r
 ())

646  -
EPERM
;

648 i‡(!(
dú
 = 
	`dú_«mei
 (
fûíame
, &
«mñí
, &
ba£«me
)))

649  -
ENOENT
;

652 i‡(!
«mñí
)

654 
	`ùut
 (
dú
);

655  -
ENOENT
;

658 i‡(!
	`≥rmissi⁄
 (
dú
, 
MAY_WRITE
))

660 
	`ùut
 (
dú
);

661  -
EPERM
;

665 
bh
 = 
	`föd_íåy
 (&
dú
, 
ba£«me
, 
«mñí
, &
de
);

666 i‡(
bh
)

668 
	`bªl£
 (
bh
);

669 
	`ùut
 (
dú
);

670  -
EEXIST
;

673 
öode
 = 
	`√w_öode
 (
dú
->
i_dev
);

674 i‡(!
öode
)

676 
	`ùut
 (
dú
);

677  -
ENOSPC
;

681 
öode
->
i_mode
 = 
mode
;

682 i‡(
	`S_ISBLK
 (
mode
Ë|| 
	`S_ISCHR
 (mode))

683 
öode
->
i_z⁄e
[0] = 
dev
;

685 
öode
->
i_mtime
 = inode->
i_©ime
 = 
CURRENT_TIME
;

686 
öode
->
i_dút
 = 1;

689 
bh
 = 
	`add_íåy
 (
dú
, 
ba£«me
, 
«mñí
, &
de
);

690 i‡(!
bh
)

692 
	`ùut
 (
dú
);

693 
öode
->
i_∆öks
 = 0;

694 
	`ùut
 (
öode
);

695  -
ENOSPC
;

699 
de
->
öode
 = inode->
i_num
;

700 
bh
->
b_dút
 = 1;

701 
	`ùut
 (
dú
);

702 
	`ùut
 (
öode
);

703 
	`bªl£
 (
bh
);

705 
	}
}

711 
	$sys_mkdú
 (c⁄° *
∑th«me
, 
mode
)

713 c⁄° *
ba£«me
;

714 
«mñí
;

715 
m_öode
 *
dú
, *
öode
;

716 
buf„r_hód
 *
bh
, *
dú_block
;

717 
dú_íåy
 *
de
;

720 i‡(!
	`su£r
 ())

721  -
EPERM
;

723 i‡(!(
dú
 = 
	`dú_«mei
 (
∑th«me
, &
«mñí
, &
ba£«me
)))

724  -
ENOENT
;

727 i‡(!
«mñí
)

729 
	`ùut
 (
dú
);

730  -
ENOENT
;

733 i‡(!
	`≥rmissi⁄
 (
dú
, 
MAY_WRITE
))

735 
	`ùut
 (
dú
);

736  -
EPERM
;

740 
bh
 = 
	`föd_íåy
 (&
dú
, 
ba£«me
, 
«mñí
, &
de
);

741 i‡(
bh
)

743 
	`bªl£
 (
bh
);

744 
	`ùut
 (
dú
);

745  -
EEXIST
;

748 
öode
 = 
	`√w_öode
 (
dú
->
i_dev
);

749 i‡(!
öode
)

751 
	`ùut
 (
dú
);

752  -
ENOSPC
;

756 
öode
->
i_size
 = 32;

757 
öode
->
i_dút
 = 1;

758 
öode
->
i_mtime
 = inode->
i_©ime
 = 
CURRENT_TIME
;

761 i‡(!(
öode
->
i_z⁄e
[0] = 
	`√w_block
 (öode->
i_dev
)))

763 
	`ùut
 (
dú
);

764 
öode
->
i_∆öks
--;

765 
	`ùut
 (
öode
);

766  -
ENOSPC
;

769 
öode
->
i_dút
 = 1;

772 i‡(!(
dú_block
 = 
	`bªad
 (
öode
->
i_dev
, inode->
i_z⁄e
[0])))

774 
	`ùut
 (
dú
);

775 
	`‰ì_block
 (
öode
->
i_dev
, inode->
i_z⁄e
[0]);

776 
öode
->
i_∆öks
--;

777 
	`ùut
 (
öode
);

778  -
ERROR
;

781 
de
 = (
dú_íåy
 *Ë
dú_block
->
b_d©a
;

782 
de
->
öode
 = inode->
i_num
;

783 
	`°r˝y
 (
de
->
«me
, ".");

785 
de
++;

786 
de
->
öode
 = 
dú
->
i_num
;

787 
	`°r˝y
 (
de
->
«me
, "..");

788 
öode
->
i_∆öks
 = 2;

790 
dú_block
->
b_dút
 = 1;

791 
	`bªl£
 (
dú_block
);

793 
öode
->
i_mode
 = 
I_DIRECTORY
 | (
mode
 & 0777 & ~
cuºít
->
umask
);

794 
öode
->
i_dút
 = 1;

797 
bh
 = 
	`add_íåy
 (
dú
, 
ba£«me
, 
«mñí
, &
de
);

798 i‡(!
bh
)

800 
	`ùut
 (
dú
);

801 
	`‰ì_block
 (
öode
->
i_dev
, inode->
i_z⁄e
[0]);

802 
öode
->
i_∆öks
 = 0;

803 
	`ùut
 (
öode
);

804  -
ENOSPC
;

808 
de
->
öode
 = inode->
i_num
;

809 
bh
->
b_dút
 = 1;

810 
dú
->
i_∆öks
++;

811 
dú
->
i_dút
 = 1;

812 
	`ùut
 (
dú
);

813 
	`ùut
 (
öode
);

814 
	`bªl£
 (
bh
);

816 
	}
}

828 
	$em±y_dú
 (
m_öode
 *
öode
)

830 
ƒ
, 
block
;

831 
Àn
;

832 
buf„r_hód
 *
bh
;

833 
dú_íåy
 *
de
;

836 
Àn
 = 
öode
->
i_size
 /  (
dú_íåy
);

839 i‡(
Àn
 < 2 || !
öode
->
i_z⁄e
[0] ||

840 !(
bh
 = 
	`bªad
 (
öode
->
i_dev
, inode->
i_z⁄e
[0])))

842 
	`¥ötk
 ("w¨nög - bad dúe˘‹y o¿dev %04x\n", 
öode
->
i_dev
);

846 
de
 = (
dú_íåy
 *Ë
bh
->
b_d©a
;

850 i‡(
de
[0].
öode
 !öode->
i_num
 || !de[1].inode ||

851 
	`°rcmp
 (".", 
de
[0].
«me
) || strcmp ("..", de[1].name))

853 
	`¥ötk
 ("w¨nög - bad dúe˘‹y o¿dev %04x\n", 
öode
->
i_dev
);

857 
ƒ
 = 2;

858 
de
 += 2;

860 
ƒ
 < 
Àn
)

865 i‡((*Ë
de
 >(*Ë(
bh
->
b_d©a
 + 
BLOCK_SIZE
))

867 
	`bªl£
 (
bh
);

868 
block
 = 
	`bm≠
 (
öode
, 
ƒ
 / 
DIR_ENTRIES_PER_BLOCK
);

869 i‡(!
block
)

871 
ƒ
 +
DIR_ENTRIES_PER_BLOCK
;

874 i‡(!(
bh
 = 
	`bªad
 (
öode
->
i_dev
, 
block
)))

876 
de
 = (
dú_íåy
 *Ë
bh
->
b_d©a
;

880 i‡(
de
->
öode
)

882 
	`bªl£
 (
bh
);

886 
de
++;

887 
ƒ
++;

890 
	`bªl£
 (
bh
);

892 
	}
}

898 
	$sys_rmdú
 (c⁄° *
«me
)

900 c⁄° *
ba£«me
;

901 
«mñí
;

902 
m_öode
 *
dú
, *
öode
;

903 
buf„r_hód
 *
bh
;

904 
dú_íåy
 *
de
;

907 i‡(!
	`su£r
 ())

908  -
EPERM
;

910 i‡(!(
dú
 = 
	`dú_«mei
 (
«me
, &
«mñí
, &
ba£«me
)))

911  -
ENOENT
;

914 i‡(!
«mñí
)

916 
	`ùut
 (
dú
);

917  -
ENOENT
;

920 i‡(!
	`≥rmissi⁄
 (
dú
, 
MAY_WRITE
))

922 
	`ùut
 (
dú
);

923  -
EPERM
;

928 
bh
 = 
	`föd_íåy
 (&
dú
, 
ba£«me
, 
«mñí
, &
de
);

929 i‡(!
bh
)

931 
	`ùut
 (
dú
);

932  -
ENOENT
;

936 i‡(!(
öode
 = 
	`igë
 (
dú
->
i_dev
, 
de
->inode)))

938 
	`ùut
 (
dú
);

939 
	`bªl£
 (
bh
);

940  -
EPERM
;

945 i‡((
dú
->
i_mode
 & 
S_ISVTX
Ë&& 
cuºít
->
euid
 &&

946 
öode
->
i_uid
 !
cuºít
->
euid
)

948 
	`ùut
 (
dú
);

949 
	`ùut
 (
öode
);

950 
	`bªl£
 (
bh
);

951  -
EPERM
;

956 i‡(
öode
->
i_dev
 !
dú
->i_dev || inode->
i_cou¡
 > 1)

958 
	`ùut
 (
dú
);

959 
	`ùut
 (
öode
);

960 
	`bªl£
 (
bh
);

961  -
EPERM
;

966 i‡(
öode
 =
dú
)

968 
	`ùut
 (
öode
);

969 
	`ùut
 (
dú
);

970 
	`bªl£
 (
bh
);

971  -
EPERM
;

975 i‡(!
	`S_ISDIR
 (
öode
->
i_mode
))

977 
	`ùut
 (
öode
);

978 
	`ùut
 (
dú
);

979 
	`bªl£
 (
bh
);

980  -
ENOTDIR
;

984 i‡(!
	`em±y_dú
 (
öode
))

986 
	`ùut
 (
öode
);

987 
	`ùut
 (
dú
);

988 
	`bªl£
 (
bh
);

989  -
ENOTEMPTY
;

992 i‡(
öode
->
i_∆öks
 != 2)

993 
	`¥ötk
 ("em±y dúe˘‹y ha†∆ök!=2 (%d)", 
öode
->
i_∆öks
);

996 
de
->
öode
 = 0;

997 
bh
->
b_dút
 = 1;

998 
	`bªl£
 (
bh
);

1000 
öode
->
i_∆öks
 = 0;

1001 
öode
->
i_dút
 = 1;

1004 
dú
->
i_∆öks
--;

1005 
dú
->
i_˘ime
 = dú->
i_mtime
 = 
CURRENT_TIME
;

1006 
dú
->
i_dút
 = 1;

1008 
	`ùut
 (
dú
);

1009 
	`ùut
 (
öode
);

1011 
	}
}

1019 
	$sys_u∆ök
 (c⁄° *
«me
)

1021 c⁄° *
ba£«me
;

1022 
«mñí
;

1023 
m_öode
 *
dú
, *
öode
;

1024 
buf„r_hód
 *
bh
;

1025 
dú_íåy
 *
de
;

1028 i‡(!(
dú
 = 
	`dú_«mei
 (
«me
, &
«mñí
, &
ba£«me
)))

1029  -
ENOENT
;

1032 i‡(!
«mñí
)

1034 
	`ùut
 (
dú
);

1035  -
ENOENT
;

1038 i‡(!
	`≥rmissi⁄
 (
dú
, 
MAY_WRITE
))

1040 
	`ùut
 (
dú
);

1041  -
EPERM
;

1046 
bh
 = 
	`föd_íåy
 (&
dú
, 
ba£«me
, 
«mñí
, &
de
);

1047 i‡(!
bh
)

1049 
	`ùut
 (
dú
);

1050  -
ENOENT
;

1054 i‡(!(
öode
 = 
	`igë
 (
dú
->
i_dev
, 
de
->inode)))

1056 
	`ùut
 (
dú
);

1057 
	`bªl£
 (
bh
);

1058  -
ENOENT
;

1063 i‡((
dú
->
i_mode
 & 
S_ISVTX
Ë&& !
	`su£r
 () &&

1064 
cuºít
->
euid
 !
öode
->
i_uid
 && cuºít->euid !
dú
->i_uid)

1066 
	`ùut
 (
dú
);

1067 
	`ùut
 (
öode
);

1068 
	`bªl£
 (
bh
);

1069  -
EPERM
;

1073 i‡(
	`S_ISDIR
 (
öode
->
i_mode
))

1075 
	`ùut
 (
öode
);

1076 
	`ùut
 (
dú
);

1077 
	`bªl£
 (
bh
);

1078  -
EPERM
;

1081 i‡(!
öode
->
i_∆öks
)

1083 
	`¥ötk
 ("DeletingÇonexistent file (%04x:%d), %d\n",

1084 
öode
->
i_dev
, inode->
i_num
, inode->
i_∆öks
);

1085 
öode
->
i_∆öks
 = 1;

1089 
de
->
öode
 = 0;

1090 
bh
->
b_dút
 = 1;

1091 
	`bªl£
 (
bh
);

1094 
öode
->
i_∆öks
--;

1095 
öode
->
i_dút
 = 1;

1096 
öode
->
i_˘ime
 = 
CURRENT_TIME
;

1097 
	`ùut
 (
öode
);

1098 
	`ùut
 (
dú
);

1100 
	}
}

1107 
	$sys_lök
 (c⁄° *
ﬁd«me
, c⁄° *
√w«me
)

1109 
dú_íåy
 *
de
;

1110 
m_öode
 *
ﬁdöode
, *
dú
;

1111 
buf„r_hód
 *
bh
;

1112 c⁄° *
ba£«me
;

1113 
«mñí
;

1116 
ﬁdöode
 = 
	`«mei
 (
ﬁd«me
);

1117 i‡(!
ﬁdöode
)

1118  -
ENOENT
;

1120 i‡(
	`S_ISDIR
 (
ﬁdöode
->
i_mode
))

1122 
	`ùut
 (
ﬁdöode
);

1123  -
EPERM
;

1127 
dú
 = 
	`dú_«mei
 (
√w«me
, &
«mñí
, &
ba£«me
);

1128 i‡(!
dú
)

1130 
	`ùut
 (
ﬁdöode
);

1131  -
EACCES
;

1134 i‡(!
«mñí
)

1136 
	`ùut
 (
ﬁdöode
);

1137 
	`ùut
 (
dú
);

1138  -
EPERM
;

1142 i‡(
dú
->
i_dev
 !
ﬁdöode
->i_dev)

1144 
	`ùut
 (
dú
);

1145 
	`ùut
 (
ﬁdöode
);

1146  -
EXDEV
;

1150 i‡(!
	`≥rmissi⁄
 (
dú
, 
MAY_WRITE
))

1152 
	`ùut
 (
dú
);

1153 
	`ùut
 (
ﬁdöode
);

1154  -
EACCES
;

1158 
bh
 = 
	`föd_íåy
 (&
dú
, 
ba£«me
, 
«mñí
, &
de
);

1159 i‡(
bh
)

1161 
	`bªl£
 (
bh
);

1162 
	`ùut
 (
dú
);

1163 
	`ùut
 (
ﬁdöode
);

1164  -
EEXIST
;

1167 
bh
 = 
	`add_íåy
 (
dú
, 
ba£«me
, 
«mñí
, &
de
);

1168 i‡(!
bh
)

1170 
	`ùut
 (
dú
);

1171 
	`ùut
 (
ﬁdöode
);

1172  -
ENOSPC
;

1176 
de
->
öode
 = 
ﬁdöode
->
i_num
;

1177 
bh
->
b_dút
 = 1;

1178 
	`bªl£
 (
bh
);

1179 
	`ùut
 (
dú
);

1182 
ﬁdöode
->
i_∆öks
++;

1183 
ﬁdöode
->
i_˘ime
 = 
CURRENT_TIME
;

1184 
ﬁdöode
->
i_dút
 = 1;

1185 
	`ùut
 (
ﬁdöode
);

1187 
	}
}

	@fs/open.c

7 
	~<°rög.h
>

8 
	~<î∫o.h
>

9 
	~<f˙é.h
>

10 
	~<sys/ty≥s.h
>

11 
	~<utime.h
>

12 
	~<sys/°©.h
>

14 
	~<löux/sched.h
>

16 
	~<löux/ây.h
>

17 
	~<löux/kî√l.h
>

18 
	~<asm/£gmít.h
>

22 
	$sys_u°©
 (
dev
, 
u°©
 *
ubuf
)

24  -
ENOSYS
;

25 
	}
}

32 
	$sys_utime
 (*
fûíame
, 
utimbuf
 *
times
)

34 
m_öode
 *
öode
;

35 
a˘ime
, 
modtime
;

38 i‡(!(
öode
 = 
	`«mei
 (
fûíame
)))

39  -
ENOENT
;

41 i‡(
times
)

43 
a˘ime
 = 
	`gë_fs_l⁄g
 ((*Ë&
times
->actime);

44 
modtime
 = 
	`gë_fs_l⁄g
 ((*Ë&
times
->modtime);

48 
a˘ime
 = 
modtime
 = 
CURRENT_TIME
;

50 
öode
->
i_©ime
 = 
a˘ime
;

51 
öode
->
i_mtime
 = 
modtime
;

53 
öode
->
i_dút
 = 1;

54 
	`ùut
 (
öode
);

56 
	}
}

70 
	$sys_ac˚ss
 (c⁄° *
fûíame
, 
mode
)

72 
m_öode
 *
öode
;

73 
ªs
, 
i_mode
;

76 
mode
 &= 0007;

78 i‡(!(
öode
 = 
	`«mei
 (
fûíame
)))

79  -
EACCES
;

81 
i_mode
 = 
ªs
 = 
öode
->i_mode & 0777;

82 
	`ùut
 (
öode
);

84 i‡(
cuºít
->
uid
 =
öode
->
i_uid
)

85 
ªs
 >>= 6;

87 i‡(
cuºít
->
gid
 =
öode
->
i_gid
)

88 
ªs
 >>= 6;

90 i‡((
ªs
 & 0007 & 
mode
) == mode)

104 i‡((!
cuºít
->
uid
Ë&& (!(
mode
 & 1Ë|| (
i_mode
 & 0111)))

107  -
EACCES
;

108 
	}
}

114 
	$sys_chdú
 (c⁄° *
fûíame
)

116 
m_öode
 *
öode
;

119 i‡(!(
öode
 = 
	`«mei
 (
fûíame
)))

120  -
ENOENT
;

122 i‡(!
	`S_ISDIR
 (
öode
->
i_mode
))

124 
	`ùut
 (
öode
);

125  -
ENOTDIR
;

128 
	`ùut
 (
cuºít
->
pwd
);

129 
cuºít
->
pwd
 = 
öode
;

131 
	}
}

137 
	$sys_chroŸ
 (c⁄° *
fûíame
)

139 
m_öode
 *
öode
;

142 i‡(!(
öode
 = 
	`«mei
 (
fûíame
)))

143  -
ENOENT
;

145 i‡(!
	`S_ISDIR
 (
öode
->
i_mode
))

147 
	`ùut
 (
öode
);

148  -
ENOTDIR
;

151 
	`ùut
 (
cuºít
->
roŸ
);

152 
cuºít
->
roŸ
 = 
öode
;

154 
	}
}

160 
	$sys_chmod
 (c⁄° *
fûíame
, 
mode
)

162 
m_öode
 *
öode
;

165 i‡(!(
öode
 = 
	`«mei
 (
fûíame
)))

166  -
ENOENT
;

169 i‡((
cuºít
->
euid
 !
öode
->
i_uid
Ë&& !
	`su£r
 ())

171 
	`ùut
 (
öode
);

172  -
EACCES
;

175 
öode
->
i_mode
 = (
mode
 & 07777) | (inode->i_mode & ~07777);

176 
öode
->
i_dút
 = 1;

177 
	`ùut
 (
öode
);

179 
	}
}

185 
	$sys_chown
 (c⁄° *
fûíame
, 
uid
, 
gid
)

187 
m_öode
 *
öode
;

190 i‡(!(
öode
 = 
	`«mei
 (
fûíame
)))

191  -
ENOENT
;

193 i‡(!
	`su£r
 ())

195 
	`ùut
 (
öode
);

196  -
EACCES
;

199 
öode
->
i_uid
 = 
uid
;

200 
öode
->
i_gid
 = 
gid
;

201 
öode
->
i_dút
 = 1;

202 
	`ùut
 (
öode
);

204 
	}
}

214 
	$sys_›í
 (c⁄° *
fûíame
, 
Êag
, 
mode
)

216 
m_öode
 *
öode
;

217 
fûe
 *
f
;

218 
i
, 
fd
;

221 
mode
 &0777 & ~
cuºít
->
umask
;

223 
fd
 = 0; fd < 
NR_OPEN
; fd++)

224 i‡(!
cuºít
->
fûp
[
fd
])

226 i‡(
fd
 >
NR_OPEN
)

227  -
EINVAL
;

229 
cuºít
->
˛o£_⁄_exec
 &~(1 << 
fd
);

232 
f
 = 0 + 
fûe_èbÀ
;

233 
i
 = 0; i < 
NR_FILE
; i++, 
f
++)

234 i‡(!
f
->
f_cou¡
)

236 i‡(
i
 >
NR_FILE
)

237  -
EINVAL
;

239 (
cuºít
->
fûp
[
fd
] = 
f
)->
f_cou¡
++;

241 i‡((
i
 = 
	`›í_«mei
 (
fûíame
, 
Êag
, 
mode
, &
öode
)) < 0)

243 
cuºít
->
fûp
[
fd
] = 
NULL
;

244 
f
->
f_cou¡
 = 0;

245  
i
;

251 i‡(
	`S_ISCHR
 (
öode
->
i_mode
))

252 i‡(
	`MAJOR
 (
öode
->
i_z⁄e
[0]) == 4)

254 i‡(
cuºít
->
Àadî
 && cuºít->
ây
 < 0)

256 
cuºít
->
ây
 = 
	`MINOR
 (
öode
->
i_z⁄e
[0]);

257 
ây_èbÀ
[
cuºít
->
ây
].
pgΩ
 = current->pgrp;

262 i‡(
	`MAJOR
 (
öode
->
i_z⁄e
[0]) == 5)

263 i‡(
cuºít
->
ây
 < 0)

265 
	`ùut
 (
öode
);

266 
cuºít
->
fûp
[
fd
] = 
NULL
;

267 
f
->
f_cou¡
 = 0;

268  -
EPERM
;

274 i‡(
	`S_ISBLK
 (
öode
->
i_mode
))

275 
	`check_disk_ch™ge
 (
öode
->
i_z⁄e
[0]);

278 
f
->
f_mode
 = 
öode
->
i_mode
;

279 
f
->
f_Êags
 = 
Êag
;

280 
f
->
f_cou¡
 = 1;

281 
f
->
f_öode
 = 
öode
;

282 
f
->
f_pos
 = 0;

283  (
fd
);

284 
	}
}

290 
	$sys_¸ót
 (c⁄° *
∑th«me
, 
mode
)

292  
	`sys_›í
 (
∑th«me
, 
O_CREAT
 | 
O_TRUNC
, 
mode
);

293 
	}
}

299 
	$sys_˛o£
 (
fd
)

301 
fûe
 *
fûp
;

304 i‡(
fd
 >
NR_OPEN
)

305  -
EINVAL
;

307 
cuºít
->
˛o£_⁄_exec
 &~(1 << 
fd
);

309 i‡(!(
fûp
 = 
cuºít
->fûp[
fd
]))

310  -
EINVAL
;

312 
cuºít
->
fûp
[
fd
] = 
NULL
;

314 i‡(
fûp
->
f_cou¡
 == 0)

315 
	`∑nic
 ("Close: file count is 0");

318 i‡(--
fûp
->
f_cou¡
)

320 
	`ùut
 (
fûp
->
f_öode
);

322 
	}
}

	@fs/pipe.c

7 
	~<sig«l.h
>

9 
	~<löux/sched.h
>

11 
	~<löux/mm.h
>

13 
	~<asm/£gmít.h
>

18 
	$ªad_pùe
 (
m_öode
 *
öode
, *
buf
, 
cou¡
)

20 
ch¨s
, 
size
, 
ªad
 = 0;

23 
cou¡
 > 0)

27 !(
size
 = 
	`PIPE_SIZE
 (*
öode
)))

29 
	`wake_up
 (&
öode
->
i_waô
);

30 π‹µ¿ª∫≥Â«¯≥§∂»(
PAGE_SIZE
Ëπ ‹µ¿ ˝æ›≥§∂»(
PIPE_SIZE
ËŒ ≤÷∏’Î
	`èû
 (
i_z⁄e
[1]ËÕ ∑÷∏’Î
	`hód
 (i_z⁄e[0]Ëª ∫≥Â«¯÷∏’Î(
i_size
Ëi‡(
öode
->
i_cou¡
 != 2)

31  
ªad
;

32 
	`¶ìp_⁄
 (&
öode
->
i_waô
);

36 
ch¨s
 = 
PAGE_SIZE
 - 
	`PIPE_TAIL
 (*
öode
);

37 i‡(
ch¨s
 > 
cou¡
)

38 
ch¨s
 = 
cou¡
;

39 i‡(
ch¨s
 > 
size
)

40 
ch¨s
 = 
size
;

42 
cou¡
 -
ch¨s
;

43 
ªad
 +
ch¨s
;

45 
size
 = 
	`PIPE_TAIL
 (*
öode
);

46 
	`PIPE_TAIL
 (*
öode
Ë+
ch¨s
;

47 
	`PIPE_TAIL
 (*
öode
Ë&(
PAGE_SIZE
 - 1);

49 
ch¨s
-- > 0)

50 
	`put_fs_byã
 (((*Ë
öode
->
i_size
)[
size
++], 
buf
++);

53 
	`wake_up
 (&
öode
->
i_waô
);

54  
ªad
;

55 
	}
}

60 
	$wrôe_pùe
 (
m_öode
 *
öode
, *
buf
, 
cou¡
)

62 
ch¨s
, 
size
, 
wrôãn
 = 0;

65 
cou¡
 > 0)

70 !(
size
 = (
PAGE_SIZE
 - 1Ë- 
	`PIPE_SIZE
 (*
öode
)))

72 
	`wake_up
 (&
öode
->
i_waô
);

73 i‡(
öode
->
i_cou¡
 != 2)

75 
cuºít
->
sig«l
 |(1 << (
SIGPIPE
 - 1));

76  
wrôãn
 ? written : -1;

78 
	`¶ìp_⁄
 (&
öode
->
i_waô
);

82 
ch¨s
 = 
PAGE_SIZE
 - 
	`PIPE_HEAD
 (*
öode
);

83 i‡(
ch¨s
 > 
cou¡
)

84 
ch¨s
 = 
cou¡
;

85 i‡(
ch¨s
 > 
size
)

86 
ch¨s
 = 
size
;

88 
cou¡
 -
ch¨s
;

89 
wrôãn
 +
ch¨s
;

91 
size
 = 
	`PIPE_HEAD
 (*
öode
);

92 
	`PIPE_HEAD
 (*
öode
Ë+
ch¨s
;

93 
	`PIPE_HEAD
 (*
öode
Ë&(
PAGE_SIZE
 - 1);

95 
ch¨s
-- > 0)

96 ((*Ë
öode
->
i_size
)[
size
++] = 
	`gë_fs_byã
 (
buf
++);

99 
	`wake_up
 (&
öode
->
i_waô
);

100  
wrôãn
;

101 
	}
}

108 
	$sys_pùe
 (*
fûdes
)

110 
m_öode
 *
öode
;

111 
fûe
 *
f
[2];

112 
fd
[2];

113 
i
, 
j
;

116 
j
 = 0;

117 
i
 = 0; 
j
 < 2 && i < 
NR_FILE
; i++)

118 i‡(!
fûe_èbÀ
[
i
].
f_cou¡
)

119 (
f
[
j
++] = 
i
 + 
fûe_èbÀ
)->
f_cou¡
++;

121 i‡(
j
 == 1)

122 
f
[0]->
f_cou¡
 = 0;

124 i‡(
j
 < 2)

128 
j
 = 0;

129 
i
 = 0; 
j
 < 2 && i < 
NR_OPEN
; i++)

130 i‡(!
cuºít
->
fûp
[
i
])

132 
cuºít
->
fûp
[
fd
[
j
] = 
i
] = 
f
[j];

133 
j
++;

136 i‡(
j
 == 1)

137 
cuºít
->
fûp
[
fd
[0]] = 
NULL
;

139 i‡(
j
 < 2)

141 
f
[0]->
f_cou¡
 = f[1]->f_count = 0;

146 i‡(!(
öode
 = 
	`gë_pùe_öode
 ()))

148 
cuºít
->
fûp
[
fd
[0]] = cuºít->fûp[fd[1]] = 
NULL
;

149 
f
[0]->
f_cou¡
 = f[1]->f_count = 0;

154 
f
[0]->
f_öode
 = f[1]->f_öodê
öode
;

155 
f
[0]->
f_pos
 = f[1]->f_pos = 0;

156 
f
[0]->
f_mode
 = 1;

157 
f
[1]->
f_mode
 = 2;

159 
	`put_fs_l⁄g
 (
fd
[0], 0 + 
fûdes
);

160 
	`put_fs_l⁄g
 (
fd
[1], 1 + 
fûdes
);

162 
	}
}

	@fs/read_write.c

7 
	~<sys/°©.h
>

8 
	~<î∫o.h
>

9 
	~<sys/ty≥s.h
>

11 
	~<löux/kî√l.h
>

12 
	~<löux/sched.h
>

14 
	~<asm/£gmít.h
>

17 
rw_ch¨
 (
rw
, 
dev
, *
buf
, 
cou¡
, 
off_t
 * 
pos
);

19 
ªad_pùe
 (
m_öode
 *
öode
, *
buf
, 
cou¡
);

21 
wrôe_pùe
 (
m_öode
 *
öode
, *
buf
, 
cou¡
);

23 
block_ªad
 (
dev
, 
off_t
 * 
pos
, *
buf
, 
cou¡
);

25 
block_wrôe
 (
dev
, 
off_t
 * 
pos
, *
buf
, 
cou¡
);

27 
fûe_ªad
 (
m_öode
 *
öode
, 
fûe
 *
fûp
,

28 *
buf
, 
cou¡
);

30 
fûe_wrôe
 (
m_öode
 *
öode
, 
fûe
 *
fûp
,

31 *
buf
, 
cou¡
);

37 
	$sys_l£ek
 (
fd
, 
off_t
 
off£t
, 
‹igö
)

39 
fûe
 *file;

40 
tmp
;

44 i‡(
fd
 >
NR_OPEN
 || !(
fûe
 = 
cuºít
->
fûp
[fd]Ë|| !(fûe->
f_öode
)

45 || !
	`IS_SEEKABLE
 (
	`MAJOR
 (
fûe
->
f_öode
->
i_dev
)))

46  -
EBADF
;

48 i‡(
fûe
->
f_öode
->
i_pùe
)

49  -
ESPIPE
;

51 
‹igö
)

56 i‡(
off£t
 < 0)

57  -
EINVAL
;

58 
fûe
->
f_pos
 = 
off£t
;

63 i‡(
fûe
->
f_pos
 + 
off£t
 < 0)

64  -
EINVAL
;

65 
fûe
->
f_pos
 +
off£t
;

70 i‡((
tmp
 = 
fûe
->
f_öode
->
i_size
 + 
off£t
) < 0)

71  -
EINVAL
;

72 
fûe
->
f_pos
 = 
tmp
;

76  -
EINVAL
;

78  
fûe
->
f_pos
;

79 
	}
}

84 
	$sys_ªad
 (
fd
, *
buf
, 
cou¡
)

86 
fûe
 *file;

87 
m_öode
 *
öode
;

91 i‡(
fd
 >
NR_OPEN
 || 
cou¡
 < 0 || !(
fûe
 = 
cuºít
->
fûp
[fd]))

92  -
EINVAL
;

94 i‡(!
cou¡
)

97 
	`vîify_¨ó
 (
buf
, 
cou¡
);

100 
öode
 = 
fûe
->
f_öode
;

101 i‡(
öode
->
i_pùe
)

102  (
fûe
->
f_mode
 & 1Ë? 
	`ªad_pùe
 (
öode
, 
buf
, 
cou¡
Ë: -
EIO
;

104 i‡(
	`S_ISCHR
 (
öode
->
i_mode
))

105  
	`rw_ch¨
 (
READ
, 
öode
->
i_z⁄e
[0], 
buf
, 
cou¡
, &
fûe
->
f_pos
);

107 i‡(
	`S_ISBLK
 (
öode
->
i_mode
))

108  
	`block_ªad
 (
öode
->
i_z⁄e
[0], &
fûe
->
f_pos
, 
buf
, 
cou¡
);

112 i‡(
	`S_ISDIR
 (
öode
->
i_mode
Ë|| 
	`S_ISREG
 (inode->i_mode))

114 i‡(
cou¡
 + 
fûe
->
f_pos
 > 
öode
->
i_size
)

115 
cou¡
 = 
öode
->
i_size
 - 
fûe
->
f_pos
;

116 i‡(
cou¡
 <= 0)

118  
	`fûe_ªad
 (
öode
, 
fûe
, 
buf
, 
cou¡
);

121 
	`¥ötk
 ("(Ród)öode->i_mode=%06o\n\r", 
öode
->
i_mode
);

122  -
EINVAL
;

123 
	}
}

126 
	$sys_wrôe
 (
fd
, *
buf
, 
cou¡
)

128 
fûe
 *file;

129 
m_öode
 *
öode
;

133 i‡(
fd
 >
NR_OPEN
 || 
cou¡
 < 0 || !(
fûe
 = 
cuºít
->
fûp
[fd]))

134  -
EINVAL
;

136 i‡(!
cou¡
)

140 
öode
 = 
fûe
->
f_öode
;

141 i‡(
öode
->
i_pùe
)

142  (
fûe
->
f_mode
 & 2Ë? 
	`wrôe_pùe
 (
öode
, 
buf
, 
cou¡
Ë: -
EIO
;

144 i‡(
	`S_ISCHR
 (
öode
->
i_mode
))

145  
	`rw_ch¨
 (
WRITE
, 
öode
->
i_z⁄e
[0], 
buf
, 
cou¡
, &
fûe
->
f_pos
);

147 i‡(
	`S_ISBLK
 (
öode
->
i_mode
))

148  
	`block_wrôe
 (
öode
->
i_z⁄e
[0], &
fûe
->
f_pos
, 
buf
, 
cou¡
);

150 i‡(
	`S_ISREG
 (
öode
->
i_mode
))

151  
	`fûe_wrôe
 (
öode
, 
fûe
, 
buf
, 
cou¡
);

153 
	`¥ötk
 ("(Wrôe)öode->i_mode=%06o\n\r", 
öode
->
i_mode
);

154  -
EINVAL
;

155 
	}
}

	@fs/stat.c

7 
	~<î∫o.h
>

8 
	~<sys/°©.h
>

10 
	~<löux/fs.h
>

11 
	~<löux/sched.h
>

13 
	~<löux/kî√l.h
>

14 
	~<asm/£gmít.h
>

19 
	$˝_°©
 (
m_öode
 *
öode
, 
°©
 *
°©buf
)

21 
°©
 
tmp
;

22 
i
;

25 
	`vîify_¨ó
 (
°©buf
,  (*statbuf));

27 
tmp
.
°_dev
 = 
öode
->
i_dev
;

28 
tmp
.
°_öo
 = 
öode
->
i_num
;

29 
tmp
.
°_mode
 = 
öode
->
i_mode
;

30 
tmp
.
°_∆ök
 = 
öode
->
i_∆öks
;

31 
tmp
.
°_uid
 = 
öode
->
i_uid
;

32 
tmp
.
°_gid
 = 
öode
->
i_gid
;

33 
tmp
.
°_rdev
 = 
öode
->
i_z⁄e
[0];

34 
tmp
.
°_size
 = 
öode
->
i_size
;

35 
tmp
.
°_©ime
 = 
öode
->
i_©ime
;

36 
tmp
.
°_mtime
 = 
öode
->
i_mtime
;

37 
tmp
.
°_˘ime
 = 
öode
->
i_˘ime
;

39 
i
 = 0; i <  (
tmp
); i++)

40 
	`put_fs_byã
 (((*Ë&
tmp
)[
i
], &((*Ë
°©buf
)[i]);

41 
	}
}

47 
	$sys_°©
 (*
fûíame
, 
°©
 *
°©buf
)

49 
m_öode
 *
öode
;

52 i‡(!(
öode
 = 
	`«mei
 (
fûíame
)))

53  -
ENOENT
;

55 
	`˝_°©
 (
öode
, 
°©buf
);

56 
	`ùut
 (
öode
);

58 
	}
}

64 
	$sys_f°©
 (
fd
, 
°©
 *
°©buf
)

66 
fûe
 *
f
;

67 
m_öode
 *
öode
;

71 i‡(
fd
 >
NR_OPEN
 || !(
f
 = 
cuºít
->
fûp
[fd]Ë|| !(
öode
 = f->
f_öode
))

72  -
EBADF
;

74 
	`˝_°©
 (
öode
, 
°©buf
);

76 
	}
}

	@fs/super.c

10 
	~<löux/c⁄fig.h
>

11 
	~<löux/sched.h
>

13 
	~<löux/kî√l.h
>

14 
	~<asm/sy°em.h
>

16 
	~<î∫o.h
>

17 
	~<sys/°©.h
>

19 
sync_dev
 (
dev
);

20 
waô_f‹_key¥ess
 ();

25 
	gmou¡_roŸ


26 ¥ ≈≈Ã
	gi
 Ω ⁄µ„Ω·ππ±ÿ–Î «32 ◊ ÷Ω⁄∂‘Œƒº˛±Ì64 œ

28 œ Ó£©∂¡»°∏˘…Ë±∏…œµƒ≥¨º∂øÈ∫Õ∏˘
	gi
 Ω ⁄µ„Ω·ππ–≈œ¢…Ë÷√∏˘i Ω ⁄µ„“˝”√¥Œ ˝Œ™4 £

29 ¨≤¢◊˜Œ™Ω¯≥Ã1 µ ƒµ±«∞π§◊˜ƒø¬º∫Õ∏˘ƒø¬ºµƒ
	gi
 Ω

30 ⁄µ„°£∏˘æ›¬ﬂº≠øÈŒªÕºÕ≥º∆ø’œ–≈ÃøÈ ˝≤¢œ‘ æ∏˘æ›
	gi
 Ω ⁄µ„ŒªÕºÕ≥º∆ø’œ–i Ω

34 
	#£t_bô
(
bôƒ
,
addr
) ({ \

35 
__ªs
 
	`__asm__
( "ax"); \

36 
	`__asm__
–"bà%2,%3;£tb %%Æ": "˜" (
__ªs
): "a" (0), "r" (
bôƒ
), "m" (*(
addr
))); \

37 
__ªs
; })

	)

38 
su≥r_block
 
	gsu≥r_block
[
NR_SUPER
];

41 
	gROOT_DEV
 = 0;

45 
	$lock_su≥r
 (
su≥r_block
 *
sb
)

47 
	`˛i
 ();

48 
sb
->
s_lock
)

49 
	`¶ìp_⁄
 (&(
sb
->
s_waô
));

50 
sb
->
s_lock
 = 1;

51 
	`°i
 ();

52 
	}
}

56 
	$‰ì_su≥r
 (
su≥r_block
 *
sb
)

58 
	`˛i
 ();

59 
sb
->
s_lock
 = 0;

60 
	`wake_up
 (&(
sb
->
s_waô
));

61 
	`°i
 ();

62 
	}
}

66 
	$waô_⁄_su≥r
 (
su≥r_block
 *
sb
)

68 
	`˛i
 ();

69 
sb
->
s_lock
)

70 
	`¶ìp_⁄
 (&(
sb
->
s_waô
));

71 
	`°i
 ();

72 
	}
}

75 
su≥r_block
 *

76 
	$gë_su≥r
 (
dev
)

78 
su≥r_block
 *
s
;

81 i‡(!
dev
)

82  
NULL
;

84 
s
 = 0 + 
su≥r_block
;

85 
s
 < 
NR_SUPER
 + 
su≥r_block
)

90 i‡(
s
->
s_dev
 =
dev
)

92 
	`waô_⁄_su≥r
 (
s
);

93 i‡(
s
->
s_dev
 =
dev
)

94  
s
;

95 
s
 = 0 + 
su≥r_block
;

99 
s
++;

100  
NULL
;

101 
	}
}

108 
	$put_su≥r
 (
dev
)

110 
su≥r_block
 *
sb
;

111 
m_öode
 *
öode
;

112 
i
;

115 i‡(
dev
 =
ROOT_DEV
)

117 
	`¥ötk
 ("root diskette changed:Örepare forármageddon\n\r");

121 i‡(!(
sb
 = 
	`gë_su≥r
 (
dev
)))

124 i‡(
sb
->
s_imou¡
)

126 
	`¥ötk
 ("Mounted disk changed -Åssk,Åssk\n\r");

131 
	`lock_su≥r
 (
sb
);

132 
sb
->
s_dev
 = 0;

134 
i
 = 0; i < 
I_MAP_SLOTS
; i++)

135 
	`bªl£
 (
sb
->
s_im≠
[
i
]);

136 
i
 = 0; i < 
Z_MAP_SLOTS
; i++)

137 
	`bªl£
 (
sb
->
s_zm≠
[
i
]);

139 
	`‰ì_su≥r
 (
sb
);

141 
	}
}

145 
su≥r_block
 *

146 
	$ªad_su≥r
 (
dev
)

148 
su≥r_block
 *
s
;

149 
buf„r_hód
 *
bh
;

150 
i
, 
block
;

153 i‡(!
dev
)

154  
NULL
;

157 
	`check_disk_ch™ge
 (
dev
);

159 i‡(
s
 = 
	`gë_su≥r
 (
dev
))

160  
s
;

162 
s
 = 0 + 
su≥r_block
;; s++)

164 i‡(
s
 >
NR_SUPER
 + 
su≥r_block
)

165  
NULL
;

166 i‡(!
s
->
s_dev
)

170 
s
->
s_dev
 = 
dev
;

171 
s
->
s_isup
 = 
NULL
;

172 
s
->
s_imou¡
 = 
NULL
;

173 
s
->
s_time
 = 0;

174 
s
->
s_rd_⁄ly
 = 0;

175 
s
->
s_dút
 = 0;

178 
	`lock_su≥r
 (
s
);

179 i‡(!(
bh
 = 
	`bªad
 (
dev
, 1)))

181 
s
->
s_dev
 = 0;

182 
	`‰ì_su≥r
 (
s
);

183  
NULL
;

186 *((
d_su≥r_block
 *Ë
s
Ë*((d_su≥r_block *Ë
bh
->
b_d©a
);

187 
	`bªl£
 (
bh
);

191 i‡(
s
->
s_magic
 !
SUPER_MAGIC
)

193 
s
->
s_dev
 = 0;

194 
	`‰ì_su≥r
 (
s
);

195  
NULL
;

198 
i
 = 0; i < 
I_MAP_SLOTS
; i++)

199 
s
->
s_im≠
[
i
] = 
NULL
;

200 
i
 = 0; i < 
Z_MAP_SLOTS
; i++)

201 
s
->
s_zm≠
[
i
] = 
NULL
;

203 
block
 = 2;

204 
i
 = 0; i < 
s
->
s_im≠_blocks
; i++)

205 i‡(
s
->
s_im≠
[
i
] = 
	`bªad
 (
dev
, 
block
))

206 
block
++;

209 
i
 = 0; i < 
s
->
s_zm≠_blocks
; i++)

210 i‡(
s
->
s_zm≠
[
i
] = 
	`bªad
 (
dev
, 
block
))

211 
block
++;

216 i‡(
block
 !2 + 
s
->
s_im≠_blocks
 + s->
s_zm≠_blocks
)

219 
i
 = 0; i < 
I_MAP_SLOTS
; i++)

220 
	`bªl£
 (
s
->
s_im≠
[
i
]);

221 
i
 = 0; i < 
Z_MAP_SLOTS
; i++)

222 
	`bªl£
 (
s
->
s_zm≠
[
i
]);

224 
s
->
s_dev
 = 0;

225 
	`‰ì_su≥r
 (
s
);

226  
NULL
;

231 
s
->
s_im≠
[0]->
b_d©a
[0] |= 1;

232 
s
->
s_zm≠
[0]->
b_d©a
[0] |= 1;

234 
	`‰ì_su≥r
 (
s
);

235  
s
;

236 
	}
}

241 
	$sys_umou¡
 (*
dev_«me
)

243 
m_öode
 *
öode
;

244 
su≥r_block
 *
sb
;

245 
dev
;

248 i‡(!(
öode
 = 
	`«mei
 (
dev_«me
)))

249  -
ENOENT
;

250 
dev
 = 
öode
->
i_z⁄e
[0];

252 i‡(!
	`S_ISBLK
 (
öode
->
i_mode
))

254 
	`ùut
 (
öode
);

255  -
ENOTBLK
;

258 
	`ùut
 (
öode
);

260 i‡(
dev
 =
ROOT_DEV
)

261  -
EBUSY
;

263 i‡(!(
sb
 = 
	`gë_su≥r
 (
dev
)Ë|| !(sb->
s_imou¡
))

264  -
ENOENT
;

266 i‡(!
sb
->
s_imou¡
->
i_mou¡
)

267 
	`¥ötk
 ("Mounted inode has i_mount=0\n");

269 
öode
 = 
öode_èbÀ
 + 0; inodê< inode_èbÀ + 
NR_INODE
; inode++)

270 i‡(
öode
->
i_dev
 =
dev
 && inode->
i_cou¡
)

271  -
EBUSY
;

273 
sb
->
s_imou¡
->
i_mou¡
 = 0;

274 
	`ùut
 (
sb
->
s_imou¡
);

277 
sb
->
s_imou¡
 = 
NULL
;

278 
	`ùut
 (
sb
->
s_isup
);

279 
sb
->
s_isup
 = 
NULL
;

281 
	`put_su≥r
 (
dev
);

282 
	`sync_dev
 (
dev
);

284 
	}
}

290 
	$sys_mou¡
 (*
dev_«me
, *
dú_«me
, 
rw_Êag
)

292 
m_öode
 *
dev_i
, *
dú_i
;

293 
su≥r_block
 *
sb
;

294 
dev
;

298 i‡(!(
dev_i
 = 
	`«mei
 (
dev_«me
)))

299  -
ENOENT
;

300 
dev
 = 
dev_i
->
i_z⁄e
[0];

302 i‡(!
	`S_ISBLK
 (
dev_i
->
i_mode
))

304 
	`ùut
 (
dev_i
);

305  -
EPERM
;

308 
	`ùut
 (
dev_i
);

310 i‡(!(
dú_i
 = 
	`«mei
 (
dú_«me
)))

311  -
ENOENT
;

314 i‡(
dú_i
->
i_cou¡
 !1 || dú_i->
i_num
 =
ROOT_INO
)

316 
	`ùut
 (
dú_i
);

317  -
EBUSY
;

320 i‡(!
	`S_ISDIR
 (
dú_i
->
i_mode
))

322 
	`ùut
 (
dú_i
);

323  -
EPERM
;

326 i‡(!(
sb
 = 
	`ªad_su≥r
 (
dev
)))

328 
	`ùut
 (
dú_i
);

329  -
EBUSY
;

332 i‡(
sb
->
s_imou¡
)

334 
	`ùut
 (
dú_i
);

335  -
EBUSY
;

338 i‡(
dú_i
->
i_mou¡
)

340 
	`ùut
 (
dú_i
);

341  -
EPERM
;

344 
sb
->
s_imou¡
 = 
dú_i
;

346 
dú_i
->
i_mou¡
 = 1;

347 
dú_i
->
i_dút
 = 1;

349 
	}
}

354 
	$mou¡_roŸ
 ()

356 
i
, 
‰ì
;

357 
su≥r_block
 *
p
;

358 
m_öode
 *
mi
;

361 i‡(32 ! (
d_öode
))

362 
	`∑nic
 ("bad i-node size");

365 
i
 = 0; i < 
NR_FILE
; i++)

366 
fûe_èbÀ
[
i
].
f_cou¡
 = 0;

368 i‡(
	`MAJOR
 (
ROOT_DEV
) == 2)

370 
	`¥ötk
 ("InsertÑoot floppyándÖress ENTER");

371 
	`waô_f‹_key¥ess
 ();

374 
p
 = &
su≥r_block
[0];Ö < &su≥r_block[
NR_SUPER
];Ö++)

376 
p
->
s_dev
 = 0;

377 
p
->
s_lock
 = 0;

378 
p
->
s_waô
 = 
NULL
;

381 i‡(!(
p
 = 
	`ªad_su≥r
 (
ROOT_DEV
)))

382 
	`∑nic
 ("UnableÅo mountÑoot");

384 i‡(!(
mi
 = 
	`igë
 (
ROOT_DEV
, 
ROOT_INO
)))

385 
	`∑nic
 ("UnableÅoÑeadÑoot i-node");

387 
mi
->
i_cou¡
 += 3;

390 
p
->
s_isup
 =Ö->
s_imou¡
 = 
mi
;

392 
cuºít
->
pwd
 = 
mi
;

393 
cuºít
->
roŸ
 = 
mi
;

395 
‰ì
 = 0;

396 
i
 = 
p
->
s_nz⁄es
;

400 --
i
 >= 0)

401 i‡(!
	`£t_bô
 (
i
 & 8191, 
p
->
s_zm≠
[ò>> 13]->
b_d©a
))

402 
‰ì
++;

404 
	`¥ötk
 ("%d/%d fªêblocks\n\r", 
‰ì
, 
p
->
s_nz⁄es
);

407 
‰ì
 = 0;

408 
i
 = 
p
->
s_nöodes
 + 1;

410 --
i
 >= 0)

411 i‡(!
	`£t_bô
 (
i
 & 8191, 
p
->
s_im≠
[ò>> 13]->
b_d©a
))

412 
‰ì
++;

414 
	`¥ötk
 ("%d/%d fªêöodes\n\r", 
‰ì
, 
p
->
s_nöodes
);

415 
	}
}

	@fs/truncate.c

7 
	~<löux/sched.h
>

10 
	~<sys/°©.h
>

14 
	$‰ì_öd
 (
dev
, 
block
)

16 
buf„r_hód
 *
bh
;

17 *
p
;

18 
i
;

21 i‡(!
block
)

24 i‡(
bh
 = 
	`bªad
 (
dev
, 
block
))

26 
p
 = (*Ë
bh
->
b_d©a
;

27 
i
 = 0; i < 512; i++, 
p
++)

28 i‡(*
p
)

29 
	`‰ì_block
 (
dev
, *
p
);

30 
	`bªl£
 (
bh
);

52 
	`‰ì_block
 (
dev
, 
block
);

53 
	}
}

57 
	$‰ì_död
 (
dev
, 
block
)

59 
buf„r_hód
 *
bh
;

60 *
p
;

61 
i
;

64 i‡(!
block
)

67 i‡(
bh
 = 
	`bªad
 (
dev
, 
block
))

69 
p
 = (*Ë
bh
->
b_d©a
;

70 
i
 = 0; i < 512; i++, 
p
++)

71 i‡(*
p
)

72 
	`‰ì_öd
 (
dev
, *
p
);

73 
	`bªl£
 (
bh
);

76 
	`‰ì_block
 (
dev
, 
block
);

77 
	}
}

81 
	$åunˇã
 (
m_öode
 *
öode
)

83 
i
;

86 i‡(!(
	`S_ISREG
 (
öode
->
i_mode
Ë|| 
	`S_ISDIR
 (inode->i_mode)))

89 
i
 = 0; i < 7; i++)

90 i‡(
öode
->
i_z⁄e
[
i
])

92 
	`‰ì_block
 (
öode
->
i_dev
, inode->
i_z⁄e
[
i
]);

93 
öode
->
i_z⁄e
[
i
] = 0;

95 
	`‰ì_öd
 (
öode
->
i_dev
, inode->
i_z⁄e
[7]);

96 
	`‰ì_död
 (
öode
->
i_dev
, inode->
i_z⁄e
[8]);

97 
öode
->
i_z⁄e
[7] = inode->i_zone[8] = 0;

98 
öode
->
i_size
 = 0;

99 
öode
->
i_dút
 = 1;

100 
öode
->
i_mtime
 = inode->
i_˘ime
 = 
CURRENT_TIME
;

101 
	}
}

	@include/a.out.h

1 #i‚de‡
_A_OUT_H


2 
	#_A_OUT_H


	)

4 
	#__GNU_EXEC_MACROS__


	)

17 
	sexec


19 
	ma_magic
;

20 
	ma_ãxt
;

21 
	ma_d©a
;

22 
	ma_bss
;

23 
	ma_syms
;

24 
	ma_íåy
;

25 
	ma_åsize
;

26 
	ma_drsize
;

30 #i‚de‡
N_MAGIC


31 
	#N_MAGIC
(
exec
Ë(”xec).
a_magic
)

	)

34 #i‚de‡
OMAGIC


37 
	#OMAGIC
 0407

	)

40 
	#NMAGIC
 0410

	)

43 
	#ZMAGIC
 0413

	)

47 #i‚de‡
N_BADMAG


48 
	#N_BADMAG
(
x
) \

49 (
	`N_MAGIC
(
x
Ë!
OMAGIC
 && N_MAGIC(xË!
NMAGIC
 \

50 && 
	`N_MAGIC
(
x
Ë!
ZMAGIC
)

	)

53 
	#_N_BADMAG
(
x
) \

54 (
	`N_MAGIC
(
x
Ë!
OMAGIC
 && N_MAGIC(xË!
NMAGIC
 \

55 && 
	`N_MAGIC
(
x
Ë!
ZMAGIC
)

	)

58 
	#_N_HDROFF
(
x
Ë(
SEGMENT_SIZE
 -  (
exec
))

	)

61 #i‚de‡
N_TXTOFF


62 
	#N_TXTOFF
(
x
) \

63 (
	`N_MAGIC
(
x
Ë=
ZMAGIC
 ? 
	`_N_HDROFF
((x)Ë+  (
exec
Ë:  (exec))

	)

67 #i‚de‡
N_DATOFF


68 
	#N_DATOFF
(
x
Ë(
	`N_TXTOFF
(xË+ (x).
a_ãxt
)

	)

72 #i‚de‡
N_TRELOFF


73 
	#N_TRELOFF
(
x
Ë(
	`N_DATOFF
(xË+ (x).
a_d©a
)

	)

77 #i‚de‡
N_DRELOFF


78 
	#N_DRELOFF
(
x
Ë(
	`N_TRELOFF
(xË+ (x).
a_åsize
)

	)

82 #i‚de‡
N_SYMOFF


83 
	#N_SYMOFF
(
x
Ë(
	`N_DRELOFF
(xË+ (x).
a_drsize
)

	)

87 #i‚de‡
N_STROFF


88 
	#N_STROFF
(
x
Ë(
	`N_SYMOFF
(xË+ (x).
a_syms
)

	)

93 #i‚de‡
N_TXTADDR


94 
	#N_TXTADDR
(
x
Ë0

	)

103 #i‡
deföed
(
vax
Ë|| deföed(
hp300
Ë|| deföed(
pyr
)

104 
	#SEGMENT_SIZE
 
PAGE_SIZE


	)

106 #ifde‡
hp300


107 
	#PAGE_SIZE
 4096

	)

109 #ifde‡
s⁄y


110 
	#SEGMENT_SIZE
 0x2000

	)

112 #ifde‡
is68k


113 
	#SEGMENT_SIZE
 0x20000

	)

115 #i‡
deföed
(
m68k
Ë&& deföed(
PORTAR
)

116 
	#PAGE_SIZE
 0x400

	)

117 
	#SEGMENT_SIZE
 
PAGE_SIZE


	)

120 
	#PAGE_SIZE
 4096

	)

121 
	#SEGMENT_SIZE
 1024

	)

124 
	#_N_SEGMENT_ROUND
(
x
Ë(((xË+ 
SEGMENT_SIZE
 - 1Ë& ~(SEGMENT_SIZE - 1))

	)

127 
	#_N_TXTENDADDR
(
x
Ë(
	`N_TXTADDR
(x)+(x).
a_ãxt
)

	)

130 #i‚de‡
N_DATADDR


131 
	#N_DATADDR
(
x
) \

132 (
	`N_MAGIC
(
x
)==
OMAGIC
? (
	`_N_TXTENDADDR
(x)) \

133 : (
	`_N_SEGMENT_ROUND
 (
	`_N_TXTENDADDR
(
x
))))

	)

138 #i‚de‡
N_BSSADDR


139 
	#N_BSSADDR
(
x
Ë(
	`N_DATADDR
(xË+ (x).
a_d©a
)

	)

143 #i‚de‡
N_NLIST_DECLARED


144 
	s∆i°


148 *
	mn_«me
;

149 
∆i°
 *
	mn_√xt
;

150 
	mn_°rx
;

152 
	mn_un
;

153 
	mn_ty≥
;

154 
	mn_Ÿhî
;

155 
	mn_desc
;

156 
	mn_vÆue
;

161 #i‚de‡
N_UNDF


162 
	#N_UNDF
 0

	)

164 #i‚de‡
N_ABS


165 
	#N_ABS
 2

	)

167 #i‚de‡
N_TEXT


168 
	#N_TEXT
 4

	)

170 #i‚de‡
N_DATA


171 
	#N_DATA
 6

	)

173 #i‚de‡
N_BSS


174 
	#N_BSS
 8

	)

176 #i‚de‡
N_COMM


177 
	#N_COMM
 18

	)

179 #i‚de‡
N_FN


180 
	#N_FN
 15

	)

183 #i‚de‡
N_EXT


184 
	#N_EXT
 1

	)

186 #i‚de‡
N_TYPE


187 
	#N_TYPE
 036

	)

189 #i‚de‡
N_STAB


190 
	#N_STAB
 0340

	)

206 
	#N_INDR
 0xa

	)

226 
	#N_SETA
 0x14

	)

228 
	#N_SETT
 0x16

	)

230 
	#N_SETD
 0x18

	)

232 
	#N_SETB
 0x1A

	)

237 
	#N_SETV
 0x1C

	)

240 #i‚de‡
N_RELOCATION_INFO_DECLARED


251 
	sªloˇti⁄_öfo


255 
	mr_addªss
;

258 
	mr_symbﬁnum
:24;

264 
	mr_p¸ñ
:1;

269 
	mr_Àngth
:2;

281 
	mr_exã∫
:1;

286 
	mr_∑d
:4;

	@include/asm/io.h

3 
	#outb
(
vÆue
,
p‹t
) \

4 
	`__asm__
 ( "outb %%Æ,%%dx":: "a" (
vÆue
), "d" (
p‹t
))

	)

9 
	#öb
(
p‹t
) ({ \

10 
_v
; \

11 
__asm__
 vﬁ©ûê–"öb %%dx,%%Æ": "˜" (
_v
): "d" (
p‹t
)); \

12 
_v
; \

13 })

	)

17 
	#outb_p
(
vÆue
,
p‹t
) \

18 
	`__asm__
 ( "outb %%al,%%dx\n" \

21 "1:":: "a" (
vÆue
), "d" (
p‹t
))

	)

25 
	#öb_p
(
p‹t
) ({ \

26 
_v
; \

27 
__asm__
 volatile ( "inb %%dx,%%al\n" \

30 "1:": "˜" (
_v
): "d" (
p‹t
)); \

31 
_v
; \

32 })

	)

	@include/asm/memory.h

17 
	#mem˝y
(
de°
,
§c
,
n
) ({ \

18 * 
_ªs
 = 
de°
; \

19 
	`__asm__
 ( "cld;rep;movsb" \

21 :: "D" (()(
_ªs
)), "S" (()(
§c
)), "c" ((Ë(
n
)) \

23 
_ªs
; \

24 })

	)

	@include/asm/segment.h

5 
ölöe
 

6 
	$gë_fs_byã
 (c⁄° *
addr
)

8 
_v
;

10 
	`__asm__
 ("movb %%fs:%1,%0": "Ù" (
_v
):"m" (*
addr
));

11  
_v
;

12 
	}
}

18 
ölöe
 

19 
	$gë_fs_w‹d
 (c⁄° *
addr
)

21 
_v
;

23 
	`__asm__
 ("movw %%fs:%1,%0": "Ù" (
_v
):"m" (*
addr
));

24  
_v
;

25 
	}
}

31 
ölöe
 

32 
	$gë_fs_l⁄g
 (c⁄° *
addr
)

34 
_v
;

36 
	`__asm__
 ("mov»%%fs:%1,%0": "Ù" (
_v
):"m" (*
addr
));

37  
_v
;

38 
	}
}

43 
ölöe
 

44 
	$put_fs_byã
 (
vÆ
, *
addr
)

46 
	`__asm__
 ("movb %0,%%fs:%1"::"r" (
vÆ
), "m" (*
addr
));

47 
	}
}

52 
ölöe
 

53 
	$put_fs_w‹d
 (
vÆ
, *
addr
)

55 
	`__asm__
 ("movw %0,%%fs:%1"::"r" (
vÆ
), "m" (*
addr
));

56 
	}
}

61 
ölöe
 

62 
	$put_fs_l⁄g
 (
vÆ
, *
addr
)

64 
	`__asm__
 ("mov»%0,%%fs:%1"::"r" (
vÆ
), "m" (*
addr
));

65 
	}
}

82 
ölöe
 

83 
	$gë_fs
 ()

85 
_v
;

86 
	`__asm__
 ("mov %%fs,%%ax": "˜" (
_v
):);

87  
_v
;

88 
	}
}

92 
ölöe
 

93 
	$gë_ds
 ()

95 
_v
;

96 
	`__asm__
 ("mov %%ds,%%ax": "˜" (
_v
):);

97  
_v
;

98 
	}
}

102 
ölöe
 

103 
	$£t_fs
 (
vÆ
)

105 
	`__asm__
 ("mov %0,%%fs"::"a" ((Ë
vÆ
));

106 
	}
}

	@include/asm/system.h

3 
	#move_to_u£r_mode
() \

4 
	`__asm__
 ( "movl %%esp,%%eax\n\t" \

13 "movw %%ax,%%es\n\t" "movw %%ax,%%fs\n\t" "movw %%ax,%%gs":::"ax")

	)

14 
	#°i
(Ë
	`__asm__
 ( "sti"::)

15 
	#˛i
(Ë
	`__asm__
 ( "cli"::)

16 
	#n›
(Ë
	`__asm__
 ( "nop"::)

17 
	#úë
(Ë
	`__asm__
 ( "iret"::)

22 
	#_£t_g©e
(
g©e_addr
,
ty≥
,
d∂
,
addr
) \

23 
	`__asm__
 ( "movw %%dx,%%ax\n\t" \

26 "mov»%%edx,%2":

	)

27 :"i" ((Ë(0x8000 + (
d∂
 << 13Ë+ (
ty≥
 << 8))),

28 "o" (*((*Ë(
	gg©e_addr
))),

29 "o" (*(4 + (*Ë(
	gg©e_addr
))), "d" ((*Ë(
	gaddr
)), "a" (0x00080000))

33 
	#£t_öå_g©e
(
n
,
addr
) \

34 
	`_£t_g©e
(&
idt
[
n
],14,0,
addr
)

	)

38 
	#£t_å≠_g©e
(
n
,
addr
) \

39 
	`_£t_g©e
(&
idt
[
n
],15,0,
addr
)

	)

43 
	#£t_sy°em_g©e
(
n
,
addr
) \

44 
	`_£t_g©e
(&
idt
[
n
],15,3,
addr
)

	)

48 
	#_£t_£g_desc
(
g©e_addr
,
ty≥
,
d∂
,
ba£
,
limô
) {\

49 *(
g©e_addr
Ë((
ba£
) & 0xff000000) | \

50 (((
ba£
Ë& 0x00ff0000Ë>> 16Ë|

	)

51 ((
	glimô
Ë& 0xf0000Ë| ((
	gd∂
Ë<< 13Ë| (0x00408000Ë| ((
	gty≥
) << 8);

52 *((
	gg©e_addr
Ë+ 1Ë(((
ba£
) & 0x0000ffff) << 16) | \

53 ((
limô
) & 0x0ffff);

62 
	#_£t_ts¶dt_desc
(
n
,
addr
,
ty≥
) \

63 
	`__asm__
 ( "movw $104,%1\n\t" \

67 "movb $" 
ty≥
 ",%4\n\t" \

71 ::"a" (
addr
), "m" (*(
n
)), "m" (*“ + 2)), "m" (*“ + 4)),

	)

72 "m" (*(
	gn
 + 5)), "m" (*(n + 6)), "m" (*(n + 7)))

75 
	#£t_tss_desc
(
n
,
addr
Ë
	`_£t_ts¶dt_desc
(((*Ë“)),addr, "0x89")

	)

78 
	#£t_ldt_desc
(
n
,
addr
Ë
	`_£t_ts¶dt_desc
(((*Ë“)),addr, "0x82")

	)

	@include/const.h

1 #i‚de‡
_CONST_H


2 
	#_CONST_H


	)

4 
	#BUFFER_END
 0x200000

5 

	)

7 
	#I_TYPE
 0170000

8 
	#I_DIRECTORY
 0040000

9 
	#I_REGULAR
 0100000

10 
	#I_BLOCK_SPECIAL
 0060000

11 
	#I_CHAR_SPECIAL
 0020000

12 
	#I_NAMED_PIPE
 0010000

13 
	#I_SET_UID_BIT
 0004000

14 
	#I_SET_GID_BIT
 0002000

15 

	)

	@include/ctype.h

1 #i‚de‡
_CTYPE_H


2 
	#_CTYPE_H


	)

4 
	#_U
 0x01

5 
	#_L
 0x02

6 
	#_D
 0x04

7 
	#_C
 0x08

8 
	#_P
 0x10

9 
	#_S
 0x20

10 
	#_X
 0x40

11 
	#_SP
 0x80

12 

	)

13 
_˘y≥
[];

14 
_˘mp
;

17 
	#iß um
(
c
Ë((
_˘y≥
+1)[c]&(
_U
|
_L
|
_D
))

18 
	#ißÕha
(
c
Ë((
_˘y≥
+1)[c]&(
_U
|
_L
))

19 
	#is˙ål
(
c
Ë((
_˘y≥
+1)[c]&(
_C
))

20 
	#isdigô
(
c
Ë((
_˘y≥
+1)[c]&(
_D
))

21 
	#isgøph
(
c
Ë((
_˘y≥
+1)[c]&(
_P
|
_U
|
_L
|
_D
))

22 
	#i¶owî
(
c
Ë((
_˘y≥
+1)[c]&(
_L
))

23 
	#i•röt
(
c
Ë((
_˘y≥
+1)[c]&(
_P
|
_U
|
_L
|
_D
|
_SP
))

24 
	#i•un˘
(
c
Ë((
_˘y≥
+1)[c]&(
_P
))

25 
	#is•a˚
(
c
Ë((
_˘y≥
+1)[c]&(
_S
))

26 
	#isuµî
(
c
Ë((
_˘y≥
+1)[c]&(
_U
))

27 
	#isxdigô
(
c
Ë((
_˘y≥
+1)[c]&(
_D
|
_X
))

28 

	)

29 
	#ißscii
(
c
) ((() c)<=0x7f)

30 
	#tﬂscii
(
c
) ((() c)&0x7f)

31 

	)

32 
	#tﬁowî
(
c
Ë(
_˘mp
=c,
	`isuµî
(_ctmp)?_ctmp-( 'A'- 'a'):_ctmp)

33 
	#touµî
(
c
Ë(
_˘mp
=c,
	`i¶owî
(_ctmp)?_ctmp-( 'a'- 'A'):_ctmp)

34 

	)

	@include/errno.h

1 #i‚de‡
_ERRNO_H


2 
	#_ERRNO_H


	)

27 
î∫o
;

29 
	#ERROR
 99

30 
	#EPERM
 1

31 
	#ENOENT
 2

32 
	#ESRCH
 3

33 
	#EINTR
 4

34 
	#EIO
 5

35 
	#ENXIO
 6

36 
	#E2BIG
 7

37 
	#ENOEXEC
 8

38 
	#EBADF
 9

39 
	#ECHILD
 10

40 
	#EAGAIN
 11

41 
	#ENOMEM
 12

42 
	#EACCES
 13

43 
	#EFAULT
 14

44 
	#ENOTBLK
 15

45 
	#EBUSY
 16

46 
	#EEXIST
 17

47 
	#EXDEV
 18

48 
	#ENODEV
 19

49 
	#ENOTDIR
 20

50 
	#EISDIR
 21

51 
	#EINVAL
 22

52 
	#ENFILE
 23

53 
	#EMFILE
 24

54 
	#ENOTTY
 25

55 
	#ETXTBSY
 26

56 
	#EFBIG
 27

57 
	#ENOSPC
 28

58 
	#ESPIPE
 29

59 
	#EROFS
 30

60 
	#EMLINK
 31

61 
	#EPIPE
 32

62 
	#EDOM
 33

63 
	#ERANGE
 34

64 
	#EDEADLK
 35

65 
	#ENAMETOOLONG
 36

66 
	#ENOLCK
 37

67 
	#ENOSYS
 38

68 
	#ENOTEMPTY
 39

69 

	)

	@include/fcntl.h

1 #i‚de‡
_FCNTL_H


2 
	#_FCNTL_H


	)

4 
	~<sys/ty≥s.h
>

8 
	#O_ACCMODE
 00003

10 
	#O_RDONLY
 00

11 
	#O_WRONLY
 01

12 
	#O_RDWR
 02

14 
	#O_CREAT
 00100

15 
	#O_EXCL
 00200

16 
	#O_NOCTTY
 00400

17 
	#O_TRUNC
 01000

18 
	#O_APPEND
 02000

19 
	#O_NONBLOCK
 04000

20 
	#O_NDELAY
 
O_NONBLOCK


21 

	)

30 
	#F_DUPFD
 0

31 
	#F_GETFD
 1

32 
	#F_SETFD
 2

33 
	#F_GETFL
 3

34 
	#F_SETFL
 4

36 
	#F_GETLK
 5

37 
	#F_SETLK
 6

38 
	#F_SETLKW
 7

39 

	)

43 
	#FD_CLOEXEC
 1

	)

51 
	#F_RDLCK
 0

52 
	#F_WRLCK
 1

53 
	#F_UNLCK
 2

54 

	)

59 
	sÊock


61 
	ml_ty≥
;

62 
	ml_whí˚
;

63 
off_t
 
	ml_°¨t
;

64 
off_t
 
	ml_Àn
;

65 
pid_t
 
	ml_pid
;

71 
¸ót
 (c⁄° *
fûíame
, 
mode_t
 
mode
);

74 
f˙é
 (
fûdes
, 
cmd
, ...);

77 
›í
 (c⁄° *
fûíame
, 
Êags
, ...);

	@include/linux/config.h

1 #i‚de‡
_CONFIG_H


2 
	#_CONFIG_H


	)

30 
	#KBD_FINNISH


	)

	@include/linux/fs.h

9 #i‚de‡
_FS_H


10 
	#_FS_H


	)

12 
	~<sys/ty≥s.h
>

40 
	#IS_SEEKABLE
(
x
) ((x)>=1 && (x)<=3)

41 

	)

42 
	#READ
 0

	)

43 
	#WRITE
 1

	)

44 
	#READA
 2

	)

45 
	#WRITEA
 3

	)

47 
buf„r_öô
 (
buf„r_íd
);

49 
	#MAJOR
(
a
) ((()(a))>>8)

50 
	#MINOR
(
a
) ((a)&0xff)

51 

	)

52 
	#NAME_LEN
 14

53 
	#ROOT_INO
 1

54 

	)

55 
	#I_MAP_SLOTS
 8

56 
	#Z_MAP_SLOTS
 8

57 
	#SUPER_MAGIC
 0x137F

58 

	)

59 
	#NR_OPEN
 20

60 
	#NR_INODE
 32

	)

61 
	#NR_FILE
 64

	)

62 
	#NR_SUPER
 8

	)

63 
	#NR_HASH
 307

	)

64 
	#NR_BUFFERS
 
ƒ_buf„rs


	)

65 
	#BLOCK_SIZE
 1024

66 
	#BLOCK_SIZE_BITS
 10

67 #i‚de‡
NULL


	)

68 
	#NULL
 ((*Ë0)

	)

72 
	#INODES_PER_BLOCK
 ((
BLOCK_SIZE
)/( (
d_öode
)))

	)

74 
	#DIR_ENTRIES_PER_BLOCK
 ((
BLOCK_SIZE
)/( (
dú_íåy
)))

	)

77 
	#PIPE_HEAD
(
öode
Ë((öode).
i_z⁄e
[0])

	)

78 
	#PIPE_TAIL
(
öode
Ë((öode).
i_z⁄e
[1])

	)

79 
	#PIPE_SIZE
(
öode
Ë((
	`PIPE_HEAD
(öode)-
	`PIPE_TAIL
(öode))&(
PAGE_SIZE
-1))

	)

80 
	#PIPE_EMPTY
(
öode
Ë(
	`PIPE_HEAD
(öode)==
	`PIPE_TAIL
(öode))

	)

81 
	#PIPE_FULL
(
öode
Ë(
	`PIPE_SIZE
(öode)==(
PAGE_SIZE
-1))

	)

82 
	#INC_PIPE
(
hód
) \

83 
	`__asm__
–"ö˛ %0\n\ènd»$4095,%0":: "m" (
hód
))

	)

85 
	tbuf„r_block
[
BLOCK_SIZE
];

89 
	sbuf„r_hód


91 *
	mb_d©a
;

92 
	mb_blockƒ
;

93 
	mb_dev
;

94 
	mb_u±od©e
;

95 
	mb_dút
;

96 
	mb_cou¡
;

97 
	mb_lock
;

98 
èsk_°ru˘
 *
	mb_waô
;

99 
buf„r_hód
 *
	mb_¥ev
;

100 
buf„r_hód
 *
	mb_√xt
;

101 
buf„r_hód
 *
	mb_¥ev_‰ì
;

102 
buf„r_hód
 *
	mb_√xt_‰ì
;

106 
	sd_öode


108 
	mi_mode
;

109 
	mi_uid
;

110 
	mi_size
;

111 
	mi_time
;

112 
	mi_gid
;

113 
	mi_∆öks
;

114 
	mi_z⁄e
[9];

119 
	sm_öode


121 
	mi_mode
;

122 
	mi_uid
;

123 
	mi_size
;

124 
	mi_mtime
;

125 
	mi_gid
;

126 
	mi_∆öks
;

127 
	mi_z⁄e
[9];

129 
èsk_°ru˘
 *
	mi_waô
;

130 
	mi_©ime
;

131 
	mi_˘ime
;

132 
	mi_dev
;

133 
	mi_num
;

134 
	mi_cou¡
;

135 
	mi_lock
;

136 
	mi_dút
;

137 
	mi_pùe
;

138 
	mi_mou¡
;

139 
	mi_£ek
;

140 
	mi_upd©e
;

144 
	sfûe


146 
	mf_mode
;

147 
	mf_Êags
;

148 
	mf_cou¡
;

149 
m_öode
 *
	mf_öode
;

150 
off_t
 
	mf_pos
;

154 
	ssu≥r_block


156 
	ms_nöodes
;

157 
	ms_nz⁄es
;

158 
	ms_im≠_blocks
;

159 
	ms_zm≠_blocks
;

160 
	ms_fú°d©az⁄e
;

161 
	ms_log_z⁄e_size
;

162 
	ms_max_size
;

163 
	ms_magic
;

165 
buf„r_hód
 *
	ms_im≠
[8];

166 
buf„r_hód
 *
	ms_zm≠
[8];

167 
	ms_dev
;

168 
m_öode
 *
	ms_isup
;

169 
m_öode
 *
	ms_imou¡
;

170 
	ms_time
;

171 
èsk_°ru˘
 *
	ms_waô
;

172 
	ms_lock
;

173 
	ms_rd_⁄ly
;

174 
	ms_dút
;

178 
	sd_su≥r_block


180 
	ms_nöodes
;

181 
	ms_nz⁄es
;

182 
	ms_im≠_blocks
;

183 
	ms_zm≠_blocks
;

184 
	ms_fú°d©az⁄e
;

185 
	ms_log_z⁄e_size
;

186 
	ms_max_size
;

187 
	ms_magic
;

191 
	sdú_íåy


193 
	möode
;

194 
	m«me
[
NAME_LEN
];

197 
m_öode
 
öode_èbÀ
[
NR_INODE
];

198 
fûe
 
fûe_èbÀ
[
NR_FILE
];

199 
su≥r_block
 su≥r_block[
NR_SUPER
];

200 
buf„r_hód
 *
°¨t_buf„r
;

201 
ƒ_buf„rs
;

205 
check_disk_ch™ge
 (
dev
);

207 
Ê›py_ch™ge
 (
ƒ
);

209 
ticks_to_Ê›py_⁄
 (
dev
);

211 
Ê›py_⁄
 (
dev
);

213 
Ê›py_off
 (
dev
);

216 
åunˇã
 (
m_öode
 *
öode
);

218 
sync_öodes
 ();

220 
waô_⁄
 (
m_öode
 *
öode
);

222 
bm≠
 (
m_öode
 *
öode
, 
block
);

224 
¸óã_block
 (
m_öode
 *
öode
, 
block
);

226 
m_öode
 *
«mei
 (c⁄° *
∑th«me
);

228 
›í_«mei
 (c⁄° *
∑th«me
, 
Êag
, 
mode
,

229 
m_öode
 **
ªs_öode
);

231 
ùut
 (
m_öode
 *
öode
);

233 
m_öode
 *
igë
 (
dev
, 
ƒ
);

235 
m_öode
 *
gë_em±y_öode
 ();

237 
m_öode
 *
gë_pùe_öode
 ();

239 
buf„r_hód
 *
gë_hash_èbÀ
 (
dev
, 
block
);

241 
buf„r_hód
 *
gëblk
 (
dev
, 
block
);

243 
Œ_rw_block
 (
rw
, 
buf„r_hód
 *
bh
);

245 
bªl£
 (
buf„r_hód
 *
buf
);

247 
buf„r_hód
 *
bªad
 (
dev
, 
block
);

249 
bªad_∑ge
 (
addr
, 
dev
, 
b
[4]);

251 
buf„r_hód
 *
bªada
 (
dev
, 
block
, ...);

253 
√w_block
 (
dev
);

255 
‰ì_block
 (
dev
, 
block
);

257 
m_öode
 *
√w_öode
 (
dev
);

259 
‰ì_öode
 (
m_öode
 *
öode
);

261 
sync_dev
 (
dev
);

263 
su≥r_block
 *
gë_su≥r
 (
dev
);

264 
ROOT_DEV
;

267 
mou¡_roŸ
 ();

	@include/linux/hdreg.h

10 #i‚de‡
_HDREG_H


11 
	#_HDREG_H


	)

15 
	#HD_DATA
 0x1f0

	)

16 
	#HD_ERROR
 0x1f1

	)

17 
	#HD_NSECTOR
 0x1f2

	)

18 
	#HD_SECTOR
 0x1f3

	)

19 
	#HD_LCYL
 0x1f4

	)

20 
	#HD_HCYL
 0x1f5

	)

21 
	#HD_CURRENT
 0x1f6

	)

22 
	#HD_STATUS
 0x1f7

	)

23 
	#HD_PRECOMP
 
HD_ERROR


	)

24 
	#HD_COMMAND
 
HD_STATUS


	)

26 
	#HD_CMD
 0x3f6

27 

	)

30 
	#ERR_STAT
 0x01

31 
	#INDEX_STAT
 0x02

32 
	#ECC_STAT
 0x04

33 
	#DRQ_STAT
 0x08

34 
	#SEEK_STAT
 0x10

35 
	#WRERR_STAT
 0x20

36 
	#READY_STAT
 0x40

37 
	#BUSY_STAT
 0x80

38 

	)

41 
	#WIN_RESTORE
 0x10

42 
	#WIN_READ
 0x20

43 
	#WIN_WRITE
 0x30

44 
	#WIN_VERIFY
 0x40

45 
	#WIN_FORMAT
 0x50

46 
	#WIN_INIT
 0x60

47 
	#WIN_SEEK
 0x70

48 
	#WIN_DIAGNOSE
 0x90

49 
	#WIN_SPECIFY
 0x91

50 

	)

66 
	#MARK_ERR
 0x01

	)

67 
	#TRK0_ERR
 0x02

	)

68 
	#ABRT_ERR
 0x04

	)

69 
	#ID_ERR
 0x10

	)

70 
	#ECC_ERR
 0x40

	)

71 
	#BBD_ERR
 0x80

	)

74 
	s∑πôi⁄


76 
	mboŸ_öd
;

77 
	mhód
;

78 
	m£˘‹
;

79 
	mcyl
;

80 
	msys_öd
;

81 
	míd_hód
;

82 
	míd_£˘‹
;

83 
	míd_cyl
;

84 
	m°¨t_£˘
;

85 
	mƒ_£˘s
;

	@include/linux/head.h

1 #i‚de‡
_HEAD_H


2 
	#_HEAD_H


	)

4 
	sdesc_°ru˘


6 
	ma
, 
	mb
;

8 
	tdesc_èbÀ
[256];

10 
pg_dú
[1024];

11 
desc_èbÀ
 
idt
, 
gdt
;

13 
	#GDT_NUL
 0

14 
	#GDT_CODE
 1

15 
	#GDT_DATA
 2

16 
	#GDT_TMP
 3

17 

	)

18 
	#LDT_NUL
 0

19 
	#LDT_CODE
 1

20 
	#LDT_DATA
 2

21 

	)

	@include/linux/kernel.h

8 
vîify_¨ó
 (*
addr
, 
cou¡
);

10 vﬁ©ûê
∑nic
 (c⁄° *
°r
);

12 
¥ötf
 (c⁄° *
fmt
, ...);

14 
¥ötk
 (c⁄° *
fmt
, ...);

16 
ây_wrôe
 (
ch
, *
buf
, 
cou¡
);

18 *
mÆloc
 (
size
);

20 
‰ì_s
 (*
obj
, 
size
);

22 
	#‰ì
(
x
Ë
	`‰ì_s
((x), 0)

	)

37 
	#su£r
(Ë(
cuºít
->
euid
 == 0)

	@include/linux/mm.h

1 #i‚de‡
_MM_H


2 
	#_MM_H


	)

4 
	#PAGE_SIZE
 4096

5 

	)

7 
gë_‰ì_∑ge
 ();

9 
put_∑ge
 (
∑ge
, 
addªss
);

11 
‰ì_∑ge
 (
addr
);

	@include/linux/sched.h

1 #i‚de‡
_SCHED_H


2 
	#_SCHED_H


	)

4 
	#NR_TASKS
 64

5 
	#HZ
 100

6 

	)

7 
	#FIRST_TASK
 
èsk
[0]

8 
	#LAST_TASK
 
èsk
[
NR_TASKS
-1]

9 

	)

10 
	~<löux/hód.h
>

11 
	~<löux/fs.h
>

12 
	~<löux/mm.h
>

13 
	~<sig«l.h
>

15 #i‡(
NR_OPEN
 > 32)

20 
	#TASK_RUNNING
 0

21 
	#TASK_INTERRUPTIBLE
 1

22 
	#TASK_UNINTERRUPTIBLE
 2

23 
	#TASK_ZOMBIE
 3

24 
	#TASK_STOPPED
 4

25 

	)

26 #i‚de‡
NULL


27 
	#NULL
 ((*) 0)

29 

	)

31 
c›y_∑ge_èbÀs
 (
‰om
, 
to
, 
size
);

33 
‰ì_∑ge_èbÀs
 (
‰om
, 
size
);

36 
sched_öô
 ();

38 
scheduÀ
 ();

40 
å≠_öô
 ();

42 
∑nic
 (c⁄° *
°r
);

44 
ây_wrôe
 (
mö‹
, *
buf
, 
cou¡
);

46 (*
	g‚_±r
) ();

49 
	si387_°ru˘


51 
	mcwd
;

52 
	mswd
;

53 
	mtwd
;

54 
	mfù
;

55 
	mfcs
;

56 
	mfoo
;

57 
	mfos
;

58 
	m°_•a˚
[20];

62 
	stss_°ru˘


64 
	mback_lök
;

65 
	me•0
;

66 
	mss0
;

67 
	me•1
;

68 
	mss1
;

69 
	me•2
;

70 
	mss2
;

71 
	m¸3
;

72 
	meù
;

73 
	meÊags
;

74 
	móx
, 
	mecx
, 
	medx
, 
	mebx
;

75 
	me•
;

76 
	mebp
;

77 
	mesi
;

78 
	medi
;

79 
	mes
;

80 
	mcs
;

81 
	mss
;

82 
	mds
;

83 
	mfs
;

84 
	mgs
;

85 
	mldt
;

86 
	måa˚_bôm≠
;

87 
i387_°ru˘
 
	mi387
;

136 
	sèsk_°ru˘


139 
	m°©e
;

140 
	mcou¡î
;

141 
	m¥i‹ôy
;

142 
	msig«l
;

143 
siga˘i⁄
 
	msiga˘i⁄
[32];

144 
	mblocked
;

146 
	mexô_code
;

147 
	m°¨t_code
, 
	míd_code
, 
	míd_d©a
, 
	mbrk
, 
	m°¨t_°ack
;

148 
	mpid
, 
	mÁthî
, 
	mpgΩ
, 
	m£ssi⁄
, 
	mÀadî
;

149 
	muid
, 
	meuid
, 
	msuid
;

150 
	mgid
, 
	megid
, 
	msgid
;

151 
	mÆ¨m
;

152 
	mutime
, 
	m°ime
, 
	mcutime
, 
	mc°ime
, 
	m°¨t_time
;

153 
	mu£d_m©h
;

155 
	mây
;

156 
	mumask
;

157 
m_öode
 *
	mpwd
;

158 
m_öode
 *
	mroŸ
;

159 
m_öode
 *
	mexecuèbÀ
;

160 
	m˛o£_⁄_exec
;

161 
fûe
 *
	mfûp
[
NR_OPEN
];

163 
desc_°ru˘
 
	mldt
[3];

165 
tss_°ru˘
 
	mtss
;

177 
	#INIT_TASK
 \

179  0,

	)

196  -1, 0022, 
	gNULL
, NULL, NULL, 0, \

200 
	gNULL
,}

220 0, 
	gPAGE_SIZE
 + (Ë&
	göô_èsk
, 0x10, 0, 0, 0, 0, (Ë&
	gpg_dú
, \

222 0, 0, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 
_LDT
 (0), 0x80000000,

228 
èsk_°ru˘
 *
èsk
[
NR_TASKS
];

229 
èsk_°ru˘
 *
œ°_èsk_u£d_m©h
;

230 
èsk_°ru˘
 *
cuºít
;

231 vﬁ©ûê
jiffõs
;

232 
°¨tup_time
;

234 
	#CURRENT_TIME
 (
°¨tup_time
+
jiffõs
/
HZ
)

235 

	)

237 
add_timî
 (
jiffõs
, (*
‚
) ());

239 
	`¶ìp_⁄
 (
èsk_°ru˘
 **
p
);

241 
	`öãºu±ibÀ_¶ìp_⁄
 (
èsk_°ru˘
 **
p
);

243 
	`wake_up
 (
èsk_°ru˘
 **
p
);

254 
	#FIRST_TSS_ENTRY
 4

	)

256 
	#FIRST_LDT_ENTRY
 (
FIRST_TSS_ENTRY
+1)

	)

258 
	#_TSS
(
n
Ë((((Ën)<<4)+(
FIRST_TSS_ENTRY
<<3))

	)

260 
	#_LDT
(
n
Ë((((Ën)<<4)+(
FIRST_LDT_ENTRY
<<3))

	)

262 
	#…r
(
n
Ë
	`__asm__
–"…∏%%ax":: "a" (
	`_TSS
“)))

	)

264 
	#Œdt
(
n
Ë
	`__asm__
–"Œdà%%ax":: "a" (
	`_LDT
“)))

	)

267 
	#°r
(
n
) \

268 
	`__asm__
( "str %%ax\n\t" \

271 : "˜" (
n
):"a" (0), "i" (
FIRST_TSS_ENTRY
 << 3))

	)

288 
	#swôch_to
(
n
) {\

289 °ru˘ {
a
,
b
;} 
__tmp
; \

290 
	`__asm__
( "cmpl %%ecx,_current\n\t" \

299 "1:"::"m" (*&
__tmp
.
a
), "m" (*&__tmp.
b
),

	)

300 "d" (
	`_TSS
 (
n
)), "c" ((Ë
èsk
[n]));

301 
	}
}

304 
	#PAGE_ALIGN
(
n
Ë((“)+0xfff)&0xfffff000)

	)

308 
	#_£t_ba£
(
addr
,
ba£
) \

309 
	`__asm__
( "movw %%dx,%0\n\t" \

313 ::"m" (*((
addr
Ë+ 2)), "m" (*(◊ddrË+ 4)), "m" (*(◊ddrË+ 7)), "d" (
ba£
):"dx")

	)

316 
	#_£t_limô
(
addr
,
limô
) \

317 
	`__asm__
( "movw %%dx,%0\n\t" \

323 ::"m" (*(
addr
)), "m" (*(◊ddrË+ 6)), "d" (
limô
):"dx")

	)

325 
	#£t_ba£
(
ldt
,
ba£
Ë
	`_£t_ba£
–((*)&÷dt)Ë, ba£ )

	)

327 
	#£t_limô
(
ldt
,
limô
Ë
	`_£t_limô
–((*)&÷dt)Ë, (limô-1)>>12 )

	)

330 
	#_gë_ba£
(
addr
) ({\

331 
__ba£
; \

332 
	`__asm__
( "movb %3,%%dh\n\t" \

336 :"=d" (
__ba£
) \

337 :"m" (*((
addr
Ë+ 2)), "m" (*(◊ddrË+ 4)), "m" (*(◊ddrË+ 7)));

	)

338 
	g__ba£
;

343 
	#gë_ba£
(
ldt
Ë
	`_gë_ba£
–((*)&÷dt)Ë)

	)

346 
	#gë_limô
(
£gmít
) ({ \

347 
__limô
; \

348 
	`__asm__
–"l¶»%1,%0\n\tö˛ %0": "Ù" (
__limô
): "r" (
£gmít
)); \

349 
__limô
;})

	)

	@include/linux/sys.h

1 
sys_£tup
 ();

2 
sys_exô
 ();

3 
sys_f‹k
 ();

4 
sys_ªad
 ();

5 
sys_wrôe
 ();

6 
sys_›í
 ();

7 
sys_˛o£
 ();

8 
sys_waôpid
 ();

9 
sys_¸ót
 ();

10 
sys_lök
 ();

11 
sys_u∆ök
 ();

12 
sys_execve
 ();

13 
sys_chdú
 ();

14 
sys_time
 ();

15 
sys_mknod
 ();

16 
sys_chmod
 ();

17 
sys_chown
 ();

18 
sys_bªak
 ();

19 
sys_°©
 ();

20 
sys_l£ek
 ();

21 
sys_gëpid
 ();

22 
sys_mou¡
 ();

23 
sys_umou¡
 ();

24 
sys_£tuid
 ();

25 
sys_gëuid
 ();

26 
sys_°ime
 ();

27 
sys_±ø˚
 ();

28 
sys_Æ¨m
 ();

29 
sys_f°©
 ();

30 
sys_∑u£
 ();

31 
sys_utime
 ();

32 
sys_°ty
 ();

33 
sys_gây
 ();

34 
sys_ac˚ss
 ();

35 
sys_ni˚
 ();

36 
sys_·ime
 ();

37 
sys_sync
 ();

38 
sys_kûl
 ();

39 
sys_ª«me
 ();

40 
sys_mkdú
 ();

41 
sys_rmdú
 ();

42 
sys_dup
 ();

43 
sys_pùe
 ();

44 
sys_times
 ();

45 
sys_¥of
 ();

46 
sys_brk
 ();

47 
sys_£tgid
 ();

48 
sys_gëgid
 ();

49 
sys_sig«l
 ();

50 
sys_gëeuid
 ();

51 
sys_gëegid
 ();

52 
sys_ac˘
 ();

53 
sys_phys
 ();

54 
sys_lock
 ();

55 
sys_io˘l
 ();

56 
sys_f˙é
 ();

57 
sys_mpx
 ();

58 
sys_£çgid
 ();

59 
sys_ulimô
 ();

60 
sys_u«me
 ();

61 
sys_umask
 ();

62 
sys_chroŸ
 ();

63 
sys_u°©
 ();

64 
sys_dup2
 ();

65 
sys_gëµid
 ();

66 
sys_gëpgΩ
 ();

67 
sys_£tsid
 ();

68 
sys_siga˘i⁄
 ();

69 
sys_sgëmask
 ();

70 
sys_s£tmask
 ();

71 
sys_£åeuid
 ();

72 
sys_£åegid
 ();

75 
‚_±r
 
	gsys_ˇŒ_èbÀ
[] = { 
sys_£tup
, 
sys_exô
, 
sys_f‹k
, 
sys_ªad
,

76 
sys_wrôe
, 
sys_›í
, 
sys_˛o£
, 
sys_waôpid
, 
sys_¸ót
, 
sys_lök
,

77 
sys_u∆ök
, 
sys_execve
, 
sys_chdú
, 
sys_time
, 
sys_mknod
, 
sys_chmod
,

78 
sys_chown
, 
sys_bªak
, 
sys_°©
, 
sys_l£ek
, 
sys_gëpid
, 
sys_mou¡
,

79 
sys_umou¡
, 
sys_£tuid
, 
sys_gëuid
, 
sys_°ime
, 
sys_±ø˚
, 
sys_Æ¨m
,

80 
sys_f°©
, 
sys_∑u£
, 
sys_utime
, 
sys_°ty
, 
sys_gây
, 
sys_ac˚ss
,

81 
sys_ni˚
, 
sys_·ime
, 
sys_sync
, 
sys_kûl
, 
sys_ª«me
, 
sys_mkdú
,

82 
sys_rmdú
, 
sys_dup
, 
sys_pùe
, 
sys_times
, 
sys_¥of
, 
sys_brk
, 
sys_£tgid
,

83 
sys_gëgid
, 
sys_sig«l
, 
sys_gëeuid
, 
sys_gëegid
, 
sys_ac˘
, 
sys_phys
,

84 
sys_lock
, 
sys_io˘l
, 
sys_f˙é
, 
sys_mpx
, 
sys_£çgid
, 
sys_ulimô
,

85 
sys_u«me
, 
sys_umask
, 
sys_chroŸ
, 
sys_u°©
, 
sys_dup2
, 
sys_gëµid
,

86 
sys_gëpgΩ
, 
sys_£tsid
, 
sys_siga˘i⁄
, 
sys_sgëmask
, 
sys_s£tmask
,

87 
sys_£åeuid
, 
sys_£åegid


	@include/linux/tty.h

15 #i‚de‡
_TTY_H


16 
	#_TTY_H


	)

18 
	~<ãrmios.h
>

20 
	#TTY_BUF_SIZE
 1024

21 

	)

23 
	sây_queue


25 
	md©a
;

27 
	mhód
;

28 
	mèû
;

29 
èsk_°ru˘
 *
	m¥oc_li°
;

30 
	mbuf
[
TTY_BUF_SIZE
];

35 
	#INC
(
a
Ë(◊Ë(◊)+1Ë& (
TTY_BUF_SIZE
-1))

	)

37 
	#DEC
(
a
Ë(◊Ë(◊)-1Ë& (
TTY_BUF_SIZE
-1))

	)

39 
	#EMPTY
(
a
Ë(◊).
hód
 =◊).
èû
)

	)

41 
	#LEFT
(
a
Ë((◊).
èû
-◊).
hód
-1)&(
TTY_BUF_SIZE
-1))

	)

43 
	#LAST
(
a
Ë(◊).
buf
[(
TTY_BUF_SIZE
-1)&(◊).
hód
-1)])

	)

45 
	#FULL
(
a
Ë(!
	`LEFT
◊))

	)

47 
	#CHARS
(
a
Ë((◊).
hód
-◊).
èû
)&(
TTY_BUF_SIZE
-1))

	)

49 
	#GETCH
(
queue
,
c
) \

50 ()({
c
=(
queue
).
buf
[(queue).
èû
];
	`INC
((queue).èû);})

	)

52 
	#PUTCH
(
c
,
queue
) \

53 ()({(
queue
).
buf
[(queue).
hód
]=(
c
);
	`INC
((queue).hód);})

	)

56 
	#INTR_CHAR
(
ây
Ë(—ty)->
ãrmios
.
c_cc
[
VINTR
])

57 
	#QUIT_CHAR
(
ây
Ë(—ty)->
ãrmios
.
c_cc
[
VQUIT
])

58 
	#ERASE_CHAR
(
ây
Ë(—ty)->
ãrmios
.
c_cc
[
VERASE
])

59 
	#KILL_CHAR
(
ây
Ë(—ty)->
ãrmios
.
c_cc
[
VKILL
])

60 
	#EOF_CHAR
(
ây
Ë(—ty)->
ãrmios
.
c_cc
[
VEOF
])

61 
	#START_CHAR
(
ây
Ë(—ty)->
ãrmios
.
c_cc
[
VSTART
])

62 
	#STOP_CHAR
(
ây
Ë(—ty)->
ãrmios
.
c_cc
[
VSTOP
])

63 
	#SUSPEND_CHAR
(
ây
Ë(—ty)->
ãrmios
.
c_cc
[
VSUSP
])

64 

	)

66 
	sây_°ru˘


68 
ãrmios
 
	mãrmios
;

69 
	mpgΩ
;

70 
	m°›≥d
;

71 (*
	mwrôe
Ë(
ây_°ru˘
 * 
	mây
);

72 
ây_queue
 
	mªad_q
;

73 
ây_queue
 
	mwrôe_q
;

74 
ây_queue
 
	m£c⁄d¨y
;

77 
ây_°ru˘
 
ây_èbÀ
[];

92 
	#INIT_C_CC
 "\003\034\177\025\004\0\1\0\021\023\032\0\022\017\027\026\0"

	)

94 
rs_öô
 ();

95 
c⁄_öô
 ();

96 
ây_öô
 ();

98 
ây_ªad
 (
c
, *
buf
, 
n
);

99 
ây_wrôe
 (
c
, *
buf
, 
n
);

101 
rs_wrôe
 (
ây_°ru˘
 *
ây
);

102 
c⁄_wrôe
 (
ây_°ru˘
 *
ây
);

104 
c›y_to_cooked
 (
ây_°ru˘
 *
ây
);

	@include/signal.h

1 #i‚de‡
_SIGNAL_H


2 
	#_SIGNAL_H


	)

4 
	~<sys/ty≥s.h
>

6 
	tsig_©omic_t
;

7 
	tsig£t_t
;

9 
	#_NSIG
 32

10 
	#NSIG
 
_NSIG


11 

	)

13 
	#SIGHUP
 1

14 
	#SIGINT
 2

15 
	#SIGQUIT
 3

16 
	#SIGILL
 4

17 
	#SIGTRAP
 5

18 
	#SIGABRT
 6

19 
	#SIGIOT
 6

20 
	#SIGUNUSED
 7

21 
	#SIGFPE
 8

22 
	#SIGKILL
 9

23 
	#SIGUSR1
 10

24 
	#SIGSEGV
 11

25 
	#SIGUSR2
 12

26 
	#SIGPIPE
 13

27 
	#SIGALRM
 14

28 
	#SIGTERM
 15

29 
	#SIGSTKFLT
 16

30 
	#SIGCHLD
 17

31 
	#SIGCONT
 18

32 
	#SIGSTOP
 19

33 
	#SIGTSTP
 20

34 
	#SIGTTIN
 21

35 
	#SIGTTOU
 22

36 

	)

39 
	#SA_NOCLDSTOP
 1

40 
	#SA_NOMASK
 0x40000000

41 
	#SA_ONESHOT
 0x80000000

42 

	)

44 
	#SIG_BLOCK
 0

	)

46 
	#SIG_UNBLOCK
 1

	)

48 
	#SIG_SETMASK
 2

	)

51 
	#SIG_DFL
 (((*)())0Ë

	)

53 
	#SIG_IGN
 (((*)())1Ë

	)

63 
	ssiga˘i⁄


65 (*
	mß_h™dÀr
) ();

66 
sig£t_t
 
	mß_mask
;

67 
	mß_Êags
;

68 (*
	mß_ª°‹î
) ();

72 (*
sig«l
 (
_sig
, (*
_func
) ())) ();

74 
	`øi£
 (
sig
);

76 
	`kûl
 (
pid_t
 
pid
, 
sig
);

78 
	`sigadd£t
 (
sig£t_t
 * 
mask
, 
signo
);

80 
	`sigdñ£t
 (
sig£t_t
 * 
mask
, 
signo
);

82 
	`sigem±y£t
 (
sig£t_t
 * 
mask
);

84 
	`sigfûl£t
 (
sig£t_t
 * 
mask
);

86 
	`sigismembî
 (
sig£t_t
 * 
mask
, 
signo
);

88 
	`sig≥ndög
 (
sig£t_t
 * 
£t
);

90 
	`sig¥ocmask
 (
how
, 
sig£t_t
 * 
£t
, sig£t_à* 
ﬁd£t
);

92 
	`sigsu•íd
 (
sig£t_t
 * 
sigmask
);

94 
	`siga˘i⁄
 (
sig
, 
siga˘i⁄
 *
a˘
, siga˘i⁄ *
ﬁda˘
);

	@include/stdarg.h

1 #i‚de‡
_STDARG_H


2 
	#_STDARG_H


	)

4 *
	tva_li°
;

12 
	#__va_rounded_size
(
TYPE
) \

13 ((( (
TYPE
Ë+  (Ë- 1Ë/  ()Ë*  ())

	)

20 #i‚de‡
__•¨c__


21 
	#va_°¨t
(
AP
, 
LASTARG
) \

22 (
AP
 = ((*Ë&(
LASTARG
Ë+ 
	`__va_rounded_size
 (LASTARG)))

	)

24 
	#va_°¨t
(
AP
, 
LASTARG
) \

25 (
	`__buûtö_ßvîegs
 (), \

26 
AP
 = ((*Ë&(
LASTARG
Ë+ 
	`__va_rounded_size
 (LASTARG)))

	)

31 
va_íd
 (
va_li°
);

32 
	#va_íd
(
AP
)

	)

40 
	#va_¨g
(
AP
, 
TYPE
) \

41 (
AP
 +
	`__va_rounded_size
 (
TYPE
), \

42 *((
TYPE
 *Ë(
AP
 - 
	`__va_rounded_size
 (TYPE))))

	)

	@include/stddef.h

1 #i‚de‡
_STDDEF_H


2 
	#_STDDEF_H


	)

4 #i‚de‡
_PTRDIFF_T


5 
	#_PTRDIFF_T


	)

6 
	t±rdiff_t
;

9 #i‚de‡
_SIZE_T


10 
	#_SIZE_T


	)

11 
	tsize_t
;

14 #unde‡
NULL


15 
	#NULL
 ((*)0)

16 

	)

17 
	#off£tof
(
TYPE
, 
MEMBER
Ë((
size_t
) &((TYPE *)0)->MEMBER)

18 

	)

	@include/string.h

1 #i‚de‡
_STRING_H_


2 
	#_STRING_H_


	)

4 #i‚de‡
NULL


5 
	#NULL
 ((*Ë0)

	)

8 #i‚de‡
_SIZE_T


9 
	#_SIZE_T


	)

10 
	tsize_t
;

13 *
°ªº‹
 (
î∫o
);

39 
ölöe
 *

40 
	$°r˝y
 (*
de°
, c⁄° *
§c
)

42 
	`__asm__
 ("cld\n"

47 ::"S" (
§c
), "D" (
de°
):"si", "di", "ax");

48  
de°
;

49 
	}
}

55 
ölöe
 *

56 
	$°∫˝y
 (*
de°
, c⁄° *
§c
, 
cou¡
)

58 
	`__asm__
 ("cld\n"

66 "°osb\n" "2:"::"S" (
§c
), "D" (
de°
), "c" (
cou¡
):"si", "di", "ax",

68  
de°
;

69 
	}
}

74 
ölöe
 *

75 
	$°rˇt
 (*
de°
, c⁄° *
§c
)

77 
	`__asm__
 ("cld\n\t"

85 ::"S" (
§c
), "D" (
de°
), "a" (0), "c" (0xffffffff):"si", "di", "ax",

87  
de°
;

88 
	}
}

93 
ölöe
 *

94 
	$°∫ˇt
 (*
de°
, c⁄° *
§c
, 
cou¡
)

96 
	`__asm__
 ("cld\n\t"

109 ::"S" (
§c
), "D" (
de°
), "a" (0), "c" (0xffffffff), "g" (
cou¡
):"si", "di", "ax",

111  
de°
;

112 
	}
}

118 
ölöe
 

119 
	$°rcmp
 (c⁄° *
cs
, c⁄° *
˘
)

121 
__ªs
 
	`__asm__
 ("ax");

122 
	`__asm__
 ("cld\n"

133 "3:": "˜" (
__ªs
): "D" (
cs
), "S" (
˘
):"si", "di");

134  
__ªs
;

135 
	}
}

141 
ölöe
 

142 
	$°∫cmp
 (c⁄° *
cs
, c⁄° *
˘
, 
cou¡
)

144 
__ªs
 
	`__asm__
 ("ax");

145 
	`__asm__
 ("cld\n"

158 "4:": "˜" (
__ªs
): "D" (
cs
), "S" (
˘
), "c" (
cou¡
):"si", "di",

160  
__ªs
;

161 
	}
}

167 
ölöe
 *

168 
	$°rchr
 (c⁄° *
s
, 
c
)

170 *
__ªs
 
	`__asm__
 ("ax");

171 
	`__asm__
 ("cld\n\t"

181 : "˜" (
__ªs
): "S" (
s
), "" (
c
):"si");

182  
__ªs
;

183 
	}
}

189 
ölöe
 *

190 
	$°ºchr
 (c⁄° *
s
, 
c
)

192 *
__ªs
 
	`__asm__
 ("dx");

193 
	`__asm__
 ("cld\n\t"

202 : "=d" (
__ªs
): "" (0), "S" (
s
), "a" (
c
):"ax", "si");

203  
__ªs
;

204 
	}
}

210 
ölöe
 

211 
	$°r•n
 (c⁄° *
cs
, c⁄° *
˘
)

213 *
__ªs
 
	`__asm__
 ("si");

214 
	`__asm__
 ("cld\n\t"

230 : "=S" (
__ªs
): "a" (0), "c" (0xffffffff), "" (
cs
), "g" (
˘
):"ax", "cx", "dx",

232  
__ªs
 - 
cs
;

233 
	}
}

239 
ölöe
 

240 
	$°rc•n
 (c⁄° *
cs
, c⁄° *
˘
)

242 *
__ªs
 
	`__asm__
 ("si");

243 
	`__asm__
 ("cld\n\t"

259 : "=S" (
__ªs
): "a" (0), "c" (0xffffffff), "" (
cs
), "g" (
˘
):"ax", "cx", "dx",

261  
__ªs
 - 
cs
;

262 
	}
}

268 
ölöe
 *

269 
	$°Ωbrk
 (c⁄° *
cs
, c⁄° *
˘
)

271 *
__ªs
 
	`__asm__
 ("si");

272 
	`__asm__
 ("cld\n\t"

290 "3:": "=S" (
__ªs
): "a" (0), "c" (0xffffffff), "" (
cs
), "g" (
˘
):"ax", "cx", "dx",

292  
__ªs
;

293 
	}
}

299 
ölöe
 *

300 
	$°r°r
 (c⁄° *
cs
, c⁄° *
˘
)

302 *
__ªs
 
	`__asm__
 ("ax");

303 
	`__asm__
 ("cld\n\t" \

323 "2:": "˜" (
__ªs
): "" (0), "c" (0xffffffff), "S" (
cs
), "g" (
˘
):"cx", "dx", "di",

325  
__ªs
;

326 
	}
}

332 
ölöe
 

333 
	$°æí
 (c⁄° *
s
)

335 
__ªs
 
	`__asm__
 ("cx");

336 
	`__asm__
 ("cld\n\t"

341 : "=c" (
__ªs
): "D" (
s
), "a" (0), "" (0xffffffff):"di");

342  
__ªs
;

343 
	}
}

345 *
___°πok
;

357 
ölöe
 *

358 
	$°πok
 (*
s
, c⁄° *
˘
)

360 *
__ªs
 
	`__asm__
 ("si");

361 
	`__asm__
 ("testl %1,%1\n\t"

411 "8:": "=b" (
__ªs
), "=S" (
___°πok
): "" (___°πok), "1" (
s
), "g" (
˘
):"ax", "cx", "dx",

413  
__ªs
;

414 
	}
}

419 
ölöe
 *

420 
	$mem˝y
 (*
de°
, c⁄° *
§c
, 
n
)

422 
	`__asm__
 ("cld\n\t"

425 ::"c" (
n
), "S" (
§c
), "D" (
de°
):"cx", "si", "di");

426  
de°
;

427 
	}
}

434 
ölöe
 *

435 
	$memmove
 (*
de°
, c⁄° *
§c
, 
n
)

437 i‡(
de°
 < 
§c
)

438 
	`__asm__
 ("cld\n\t"

441 ::"c" (
n
), "S" (
§c
), "D" (
de°
):"cx", "si", "di");

443 
	`__asm__
 ("std\n\t"

446 ::"c" (
n
), "S" (
§c
 +Ç - 1), "D" (
de°
 +Ç - 1):"cx", "si",

448  
de°
;

449 
	}
}

455 
ölöe
 

456 
	$memcmp
 (c⁄° *
cs
, c⁄° *
˘
, 
cou¡
)

458 
__ªs
 
	`__asm__
 ("ax");

459 
	`__asm__
 ("cld\n\t"

466 "1:": "˜" (
__ªs
): "" (0), "D" (
cs
), "S" (
˘
), "c" (
cou¡
):"si", "di",

468  
__ªs
;

469 
	}
}

475 
ölöe
 *

476 
	$memchr
 (c⁄° *
cs
, 
c
, 
cou¡
)

478 *
__ªs
 
	`__asm__
 ("di");

479 i‡(!
cou¡
)

480  
NULL
;

481 
	`__asm__
 ("cld\n\t"

487 : "=D" (
__ªs
): "a" (
c
), "D" (
cs
), "c" (
cou¡
):"cx");

488  
__ªs
;

489 
	}
}

494 
ölöe
 *

495 
	$mem£t
 (*
s
, 
c
, 
cou¡
)

497 
	`__asm__
 ("cld\n\t"

500 ::"a" (
c
), "D" (
s
), "c" (
cou¡
):"cx", "di");

501  
s
;

502 
	}
}

	@include/sys/stat.h

1 #i‚de‡
_SYS_STAT_H


2 
	#_SYS_STAT_H


	)

4 
	~<sys/ty≥s.h
>

6 
	s°©


8 
dev_t
 
	m°_dev
;

9 
öo_t
 
	m°_öo
;

10 
umode_t
 
	m°_mode
;

11 
∆ök_t
 
	m°_∆ök
;

12 
uid_t
 
	m°_uid
;

13 
gid_t
 
	m°_gid
;

14 
dev_t
 
	m°_rdev
;

15 
off_t
 
	m°_size
;

16 
time_t
 
	m°_©ime
;

17 
time_t
 
	m°_mtime
;

18 
time_t
 
	m°_˘ime
;

23 
	#S_IFMT
 00170000

24 
	#S_IFREG
 0100000

25 
	#S_IFBLK
 0060000

26 
	#S_IFDIR
 0040000

27 
	#S_IFCHR
 0020000

28 
	#S_IFIFO
 0010000

30 
	#S_ISUID
 0004000

31 
	#S_ISGID
 0002000

32 
	#S_ISVTX
 0001000

33 

	)

34 
	#S_ISREG
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFREG
)

35 
	#S_ISDIR
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFDIR
)

36 
	#S_ISCHR
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFCHR
)

37 
	#S_ISBLK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFBLK
)

38 
	#S_ISFIFO
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFIFO
)

39 

	)

40 
	#S_IRWXU
 00700

41 
	#S_IRUSR
 00400

42 
	#S_IWUSR
 00200

43 
	#S_IXUSR
 00100

44 

	)

45 
	#S_IRWXG
 00070

46 
	#S_IRGRP
 00040

47 
	#S_IWGRP
 00020

48 
	#S_IXGRP
 00010

49 

	)

50 
	#S_IRWXO
 00007

51 
	#S_IROTH
 00004

52 
	#S_IWOTH
 00002

53 
	#S_IXOTH
 00001

54 

	)

55 
chmod
 (c⁄° *
_∑th
, 
mode_t
 
mode
);

56 
f°©
 (
fûdes
, 
°©
 *
°©_buf
);

57 
mkdú
 (c⁄° *
_∑th
, 
mode_t
 
mode
);

58 
mkfifo
 (c⁄° *
_∑th
, 
mode_t
 
mode
);

59 
°©
 (c⁄° *
fûíame
, °© *
°©_buf
);

60 
mode_t
 
umask
 (mode_à
mask
);

	@include/sys/times.h

1 #i‚de‡
_TIMES_H


2 
	#_TIMES_H


	)

4 
	~<sys/ty≥s.h
>

6 
	stms


8 
time_t
 
	mtms_utime
;

9 
time_t
 
	mtms_°ime
;

10 
time_t
 
	mtms_cutime
;

11 
time_t
 
	mtms_c°ime
;

14 
time_t
 
times
 (
tms
 *
ç
);

	@include/sys/types.h

1 #i‚de‡
_SYS_TYPES_H


2 
	#_SYS_TYPES_H


	)

4 #i‚de‡
_SIZE_T


5 
	#_SIZE_T


	)

6 
	tsize_t
;

9 #i‚de‡
_TIME_T


10 
	#_TIME_T


	)

11 
	ttime_t
;

14 #i‚de‡
_PTRDIFF_T


15 
	#_PTRDIFF_T


	)

16 
	t±rdiff_t
;

19 #i‚de‡
NULL


20 
	#NULL
 ((*Ë0)

	)

23 
	tpid_t
;

24 
	tuid_t
;

25 
	tgid_t
;

26 
	tdev_t
;

27 
	töo_t
;

28 
	tmode_t
;

29 
	tumode_t
;

30 
	t∆ök_t
;

31 
	tdaddr_t
;

32 
	toff_t
;

33 
	tu_ch¨
;

34 
	tush‹t
;

38 
	mquŸ
, 
	mªm
;

40 
	tdiv_t
;

43 
	mquŸ
, 
	mªm
;

45 
	tldiv_t
;

47 
	su°©


49 
daddr_t
 
	mf_t‰ì
;

50 
öo_t
 
	mf_töode
;

51 
	mf_‚ame
[6];

52 
	mf_Âack
[6];

	@include/sys/utsname.h

1 #i‚de‡
_SYS_UTSNAME_H


2 
	#_SYS_UTSNAME_H


	)

4 
	~<sys/ty≥s.h
>

6 
	sut¢ame


8 
	msy¢ame
[9];

9 
	mnodíame
[9];

10 
	mªÀa£
[9];

11 
	mvîsi⁄
[9];

12 
	mmachöe
[9];

15 
u«me
 (
ut¢ame
 *
utsbuf
);

	@include/sys/wait.h

1 #i‚de‡
_SYS_WAIT_H


2 
	#_SYS_WAIT_H


	)

4 
	~<sys/ty≥s.h
>

6 
	#_LOW
(
v
) ( (v) & 0377)

7 
	#_HIGH
(
v
) ( ((v) >> 8) & 0377)

8 

	)

11 
	#WNOHANG
 1

12 
	#WUNTRACED
 2

13 

	)

14 
	#WIFEXITED
(
s
) (!((s)&0xFF)

15 
	#WIFSTOPPED
(
s
) (((s)&0xFF)==0x7F)

16 
	#WEXITSTATUS
(
s
) (((s)>>8)&0xFF)

17 
	#WTERMSIG
(
s
) ((s)&0x7F)

18 
	#WSTOPSIG
(
s
) (((s)>>8)&0xFF)

19 
	#WIFSIGNALED
(
s
) ((()(s)-1 & 0xFFFF) < 0xFF)

21 

	)

30 
pid_t
 
waô
 (*
°©_loc
);

31 
pid_t
 
waôpid
 (pid_à
pid
, *
°©_loc
, 
›ti⁄s
);

	@include/termios.h

1 #i‚de‡
_TERMIOS_H


2 
	#_TERMIOS_H


	)

4 
	#TTY_BUF_SIZE
 1024

5 

	)

12 
	#TCGETS
 0x5401

	)

14 
	#TCSETS
 0x5402

	)

17 
	#TCSETSW
 0x5403

	)

20 
	#TCSETSF
 0x5404

	)

22 
	#TCGETA
 0x5405

	)

24 
	#TCSETA
 0x5406

	)

27 
	#TCSETAW
 0x5407

	)

30 
	#TCSETAF
 0x5408

	)

32 
	#TCSBRK
 0x5409

	)

35 
	#TCXONC
 0x540A

	)

38 
	#TCFLSH
 0x540B

	)

41 
	#TIOCEXCL
 0x540C

	)

43 
	#TIOCNXCL
 0x540D

	)

45 
	#TIOCSCTTY
 0x540E

	)

47 
	#TIOCGPGRP
 0x540F

	)

49 
	#TIOCSPGRP
 0x5410

	)

51 
	#TIOCOUTQ
 0x5411

	)

54 
	#TIOCSTI
 0x5412

	)

56 
	#TIOCGWINSZ
 0x5413

	)

58 
	#TIOCSWINSZ
 0x5414

	)

60 
	#TIOCMGET
 0x5415

	)

62 
	#TIOCMBIS
 0x5416

	)

64 
	#TIOCMBIC
 0x5417

	)

66 
	#TIOCMSET
 0x5418

	)

71 
	#TIOCGSOFTCAR
 0x5419

	)

73 
	#TIOCSSOFTCAR
 0x541A

	)

75 
	#TIOCINQ
 0x541B

	)

79 
	swösize


81 
	mws_row
;

82 
	mws_cﬁ
;

83 
	mws_xpixñ
;

84 
	mws_ypixñ
;

88 
	#NCC
 8

89 
	sãrmio


	)

91 
	mc_iÊag
;

92 
	mc_oÊag
;

93 
	mc_cÊag
;

94 
	mc_lÊag
;

95 
	mc_löe
;

96 
	mc_cc
[
NCC
];

100 
	#NCCS
 17

101 
	sãrmios


	)

103 
	mc_iÊag
;

104 
	mc_oÊag
;

105 
	mc_cÊag
;

106 
	mc_lÊag
;

107 
	mc_löe
;

108 
	mc_cc
[
NCCS
];

113 
	#VINTR
 0

114 
	#VQUIT
 1

115 
	#VERASE
 2

116 
	#VKILL
 3

117 
	#VEOF
 4

118 
	#VTIME
 5

119 
	#VMIN
 6

120 
	#VSWTC
 7

121 
	#VSTART
 8

122 
	#VSTOP
 9

123 
	#VSUSP
 10

124 
	#VEOL
 11

125 
	#VREPRINT
 12

126 
	#VDISCARD
 13

127 
	#VWERASE
 14

128 
	#VLNEXT
 15

129 
	#VEOL2
 16

130 

	)

133 
	#IGNBRK
 0000001

134 
	#BRKINT
 0000002

135 
	#IGNPAR
 0000004

136 
	#PARMRK
 0000010

137 
	#INPCK
 0000020

138 
	#ISTRIP
 0000040

139 
	#INLCR
 0000100

140 
	#IGNCR
 0000200

141 
	#ICRNL
 0000400

142 
	#IUCLC
 0001000

143 
	#IXON
 0002000

144 
	#IXANY
 0004000

145 
	#IXOFF
 0010000

146 
	#IMAXBEL
 0020000

147 

	)

150 
	#OPOST
 0000001

151 
	#OLCUC
 0000002

152 
	#ONLCR
 0000004

153 
	#OCRNL
 0000010

154 
	#ONOCR
 0000020

155 
	#ONLRET
 0000040

156 
	#OFILL
 0000100

157 
	#OFDEL
 0000200

158 
	#NLDLY
 0000400

159 
	#NL0
 0000000

160 
	#NL1
 0000400

161 
	#CRDLY
 0003000

162 
	#CR0
 0000000

163 
	#CR1
 0001000

164 
	#CR2
 0002000

165 
	#CR3
 0003000

166 
	#TABDLY
 0014000

167 
	#TAB0
 0000000

168 
	#TAB1
 0004000

169 
	#TAB2
 0010000

170 
	#TAB3
 0014000

171 
	#XTABS
 0014000

172 
	#BSDLY
 0020000

173 
	#BS0
 0000000

174 
	#BS1
 0020000

175 
	#VTDLY
 0040000

176 
	#VT0
 0000000

177 
	#VT1
 0040000

178 
	#FFDLY
 0040000

179 
	#FF0
 0000000

180 
	#FF1
 0040000

181 

	)

184 
	#CBAUD
 0000017

185 
	#B0
 0000000

	)

186 
	#B50
 0000001

187 
	#B75
 0000002

188 
	#B110
 0000003

189 
	#B134
 0000004

190 
	#B150
 0000005

191 
	#B200
 0000006

192 
	#B300
 0000007

193 
	#B600
 0000010

194 
	#B1200
 0000011

195 
	#B1800
 0000012

196 
	#B2400
 0000013

197 
	#B4800
 0000014

198 
	#B9600
 0000015

199 
	#B19200
 0000016

200 
	#B38400
 0000017

201 
	#EXTA
 
B19200


202 
	#EXTB
 
B38400


203 
	#CSIZE
 0000060

204 
	#CS5
 0000000

205 
	#CS6
 0000020

206 
	#CS7
 0000040

207 
	#CS8
 0000060

208 
	#CSTOPB
 0000100

209 
	#CREAD
 0000200

210 
	#CPARENB
 0000400

211 
	#CPARODD
 0001000

212 
	#HUPCL
 0002000

213 
	#CLOCAL
 0004000

214 
	#CIBAUD
 03600000

	)

215 
	#CRTSCTS
 020000000000

	)

217 
	#PARENB
 
CPARENB


218 
	#PARODD
 
CPARODD


219 

	)

222 
	#ISIG
 0000001

223 
	#ICANON
 0000002

224 
	#XCASE
 0000004

225 
	#ECHO
 0000010

226 
	#ECHOE
 0000020

227 
	#ECHOK
 0000040

228 
	#ECHONL
 0000100

229 
	#NOFLSH
 0000200

231 
	#TOSTOP
 0000400

233 
	#ECHOCTL
 0001000

235 
	#ECHOPRT
 0002000

236 
	#ECHOKE
 0004000

237 
	#FLUSHO
 0010000

238 
	#PENDIN
 0040000

239 
	#IEXTEN
 0100000

240 

	)

242 
	#TIOCM_LE
 0x001

243 
	#TIOCM_DTR
 0x002

244 
	#TIOCM_RTS
 0x004

245 
	#TIOCM_ST
 0x008

246 
	#TIOCM_SR
 0x010

247 
	#TIOCM_CTS
 0x020

248 
	#TIOCM_CAR
 0x040

249 
	#TIOCM_RNG
 0x080

250 
	#TIOCM_DSR
 0x100

251 
	#TIOCM_CD
 
TIOCM_CAR


	)

252 
	#TIOCM_RI
 
TIOCM_RNG


	)

255 
	#TCOOFF
 0

256 
	#TCOON
 1

257 
	#TCIOFF
 2

258 
	#TCION
 3

259 

	)

261 
	#TCIFLUSH
 0

262 
	#TCOFLUSH
 1

263 
	#TCIOFLUSH
 2

264 

	)

266 
	#TCSANOW
 0

267 
	#TCSADRAIN
 1

268 
	#TCSAFLUSH
 2

270 

	)

271 
	t•ìd_t
;

274 
•ìd_t
 
cfgëi•ìd
 (
ãrmios
 *
ãrmios_p
);

276 
•ìd_t
 
cfgëo•ìd
 (
ãrmios
 *
ãrmios_p
);

278 
cf£ti•ìd
 (
ãrmios
 *
ãrmios_p
, 
•ìd_t
 
•ìd
);

280 
cf£to•ìd
 (
ãrmios
 *
ãrmios_p
, 
•ìd_t
 
•ìd
);

282 
tcdøö
 (
fûdes
);

284 
tcÊow
 (
fûdes
, 
a˘i⁄
);

286 
tcÊush
 (
fûdes
, 
queue_£À˘‹
);

288 
tcgë©å
 (
fûdes
, 
ãrmios
 *
ãrmios_p
);

290 
tc£ndbªak
 (
fûdes
, 
duøti⁄
);

292 
tc£èâr
 (
fûdes
, 
›ti⁄Æ_a˘i⁄s
,

293 
ãrmios
 *
ãrmios_p
);

	@include/time.h

1 #i‚de‡
_TIME_H


2 
	#_TIME_H


	)

4 #i‚de‡
_TIME_T


5 
	#_TIME_T


	)

6 
	ttime_t
;

9 #i‚de‡
_SIZE_T


10 
	#_SIZE_T


	)

11 
	tsize_t
;

14 
	#CLOCKS_PER_SEC
 100

15 

	)

16 
	t˛ock_t
;

18 
	stm


20 
	mtm_£c
;

21 
	mtm_mö
;

22 
	mtm_hour
;

23 
	mtm_mday
;

24 
	mtm_m⁄
;

25 
	mtm_yór
;

26 
	mtm_wday
;

27 
	mtm_yday
;

28 
	mtm_isd°
;

33 
˛ock_t
 
˛ock
 ();

35 
time_t
 
time
 (time_à* 
ç
);

37 
dif·ime
 (
time_t
 
time2
,Åime_à
time1
);

39 
time_t
 
mktime
 (
tm
 *
ç
);

42 *
as˘ime
 (c⁄° 
tm
 *
ç
);

44 *
˘ime
 (c⁄° 
time_t
 * 
ç
);

46 
tm
 *
gmtime
 (c⁄° 
time_t
 * 
ç
);

48 
tm
 *
loˇ…ime
 (c⁄° 
time_t
 * 
ç
);

50 
size_t
 
°r·ime
 (*
s
, size_à
smax
, c⁄° *
fmt
, c⁄° 
tm
 *
ç
);

53 
tz£t
 ();

	@include/unistd.h

1 #i‚de‡
_UNISTD_H


2 
	#_UNISTD_H


	)

7 
	#_POSIX_VERSION
 198808L

	)

10 
	#_POSIX_CHOWN_RESTRICTED


	)

12 
	#_POSIX_NO_TRUNC


	)

14 
	#_POSIX_VDISABLE
 '\0'

	)

20 
	#STDIN_FILENO
 0

21 
	#STDOUT_FILENO
 1

22 
	#STDERR_FILENO
 2

23 

	)

24 #i‚de‡
NULL


25 
	#NULL
 ((*)0)

27 

	)

30 
	#F_OK
 0

31 
	#X_OK
 1

32 
	#W_OK
 2

33 
	#R_OK
 4

34 

	)

37 
	#SEEK_SET
 0

38 
	#SEEK_CUR
 1

39 
	#SEEK_END
 2

40 

	)

44 
	#_SC_ARG_MAX
 1

45 
	#_SC_CHILD_MAX
 2

46 
	#_SC_CLOCKS_PER_SEC
 3

47 
	#_SC_NGROUPS_MAX
 4

48 
	#_SC_OPEN_MAX
 5

49 
	#_SC_JOB_CONTROL
 6

50 
	#_SC_SAVED_IDS
 7

51 
	#_SC_VERSION
 8

52 

	)

56 
	#_PC_LINK_MAX
 1

57 
	#_PC_MAX_CANON
 2

58 
	#_PC_MAX_INPUT
 3

59 
	#_PC_NAME_MAX
 4

60 
	#_PC_PATH_MAX
 5

61 
	#_PC_PIPE_BUF
 6

62 
	#_PC_NO_TRUNC
 7

63 
	#_PC_VDISABLE
 8

64 
	#_PC_CHOWN_RESTRICTED
 9

65 

	)

66 
	~<sys/°©.h
>

67 
	~<sys/times.h
>

68 
	~<sys/ut¢ame.h
>

69 
	~<utime.h
>

71 #ifde‡
__LIBRARY__


74 
	#__NR_£tup
 0

	)

76 
	#__NR_exô
 1

	)

77 
	#__NR_f‹k
 2

	)

78 
	#__NR_ªad
 3

	)

79 
	#__NR_wrôe
 4

	)

80 
	#__NR_›í
 5

	)

81 
	#__NR_˛o£
 6

	)

82 
	#__NR_waôpid
 7

	)

83 
	#__NR_¸ót
 8

	)

84 
	#__NR_lök
 9

	)

85 
	#__NR_u∆ök
 10

	)

86 
	#__NR_execve
 11

	)

87 
	#__NR_chdú
 12

	)

88 
	#__NR_time
 13

	)

89 
	#__NR_mknod
 14

	)

90 
	#__NR_chmod
 15

	)

91 
	#__NR_chown
 16

	)

92 
	#__NR_bªak
 17

	)

93 
	#__NR_°©
 18

	)

94 
	#__NR_l£ek
 19

	)

95 
	#__NR_gëpid
 20

	)

96 
	#__NR_mou¡
 21

	)

97 
	#__NR_umou¡
 22

	)

98 
	#__NR_£tuid
 23

	)

99 
	#__NR_gëuid
 24

	)

100 
	#__NR_°ime
 25

	)

101 
	#__NR_±ø˚
 26

	)

102 
	#__NR_Æ¨m
 27

	)

103 
	#__NR_f°©
 28

	)

104 
	#__NR_∑u£
 29

	)

105 
	#__NR_utime
 30

	)

106 
	#__NR_°ty
 31

	)

107 
	#__NR_gây
 32

	)

108 
	#__NR_ac˚ss
 33

	)

109 
	#__NR_ni˚
 34

	)

110 
	#__NR_·ime
 35

	)

111 
	#__NR_sync
 36

	)

112 
	#__NR_kûl
 37

	)

113 
	#__NR_ª«me
 38

	)

114 
	#__NR_mkdú
 39

	)

115 
	#__NR_rmdú
 40

	)

116 
	#__NR_dup
 41

	)

117 
	#__NR_pùe
 42

	)

118 
	#__NR_times
 43

	)

119 
	#__NR_¥of
 44

	)

120 
	#__NR_brk
 45

	)

121 
	#__NR_£tgid
 46

	)

122 
	#__NR_gëgid
 47

	)

123 
	#__NR_sig«l
 48

	)

124 
	#__NR_gëeuid
 49

	)

125 
	#__NR_gëegid
 50

	)

126 
	#__NR_ac˘
 51

	)

127 
	#__NR_phys
 52

	)

128 
	#__NR_lock
 53

	)

129 
	#__NR_io˘l
 54

	)

130 
	#__NR_f˙é
 55

	)

131 
	#__NR_mpx
 56

	)

132 
	#__NR_£çgid
 57

	)

133 
	#__NR_ulimô
 58

	)

134 
	#__NR_u«me
 59

	)

135 
	#__NR_umask
 60

	)

136 
	#__NR_chroŸ
 61

	)

137 
	#__NR_u°©
 62

	)

138 
	#__NR_dup2
 63

	)

139 
	#__NR_gëµid
 64

	)

140 
	#__NR_gëpgΩ
 65

	)

141 
	#__NR_£tsid
 66

	)

142 
	#__NR_siga˘i⁄
 67

	)

143 
	#__NR_sgëmask
 68

	)

144 
	#__NR_s£tmask
 69

	)

145 
	#__NR_£åeuid
 70

	)

146 
	#__NR_£åegid
 71

	)

153 
	#_sysˇŒ0
(
ty≥
,
«me
) \

154 
ty≥
 
	`«me
() \

156 
__ªs
; \

157 
__asm__
 volatile ( "int $0x80" \

158 :"˜" (
__ªs
) \

159 :"" (
__NR_


	)

160 ##
«me
)); \

161 i‡(
	g__ªs
 >= 0) \

162  (
ty≥
Ë
__ªs
; 
	gî∫o
 = -__res; \

167 
	#_sysˇŒ1
(
ty≥
,
«me
,
©y≥
,
a
) \

168 
ty≥
 
	`«me
(
©y≥
 
a
) \

170 
__ªs
; \

171 
__asm__
 volatile ( "int $0x80" \

172 : "˜" (
__ªs
) \

173 : "" (
__NR_
##
«me
), "b" (()(
a
))); \

174 i‡(
__ªs
 >= 0) \

175  (
ty≥
Ë
__ªs
; \

176 
î∫o
 = -
__ªs
; \

178 }

	)

182 
	#_sysˇŒ2
(
ty≥
,
«me
,
©y≥
,
a
,
bty≥
,
b
) \

183 
ty≥
 
	`«me
(
©y≥
 
a
,
bty≥
 
b
) \

185 
__ªs
; \

186 
__asm__
 volatile ( "int $0x80" \

187 : "˜" (
__ªs
) \

188 : "" (
__NR_
##
«me
), "b" (()(
a
)), "c" (()(
b
))); \

189 i‡(
__ªs
 >= 0) \

190  (
ty≥
Ë
__ªs
; \

191 
î∫o
 = -
__ªs
; \

193 }

	)

197 
	#_sysˇŒ3
(
ty≥
,
«me
,
©y≥
,
a
,
bty≥
,
b
,
˘y≥
,
c
) \

198 
ty≥
 
	`«me
(
©y≥
 
a
,
bty≥
 
b
,
˘y≥
 
c
) \

200 
__ªs
; \

201 
__asm__
 volatile ( "int $0x80" \

202 : "˜" (
__ªs
) \

203 : "" (
__NR_
##
«me
), "b" (()(
a
)), "c" (()(
b
)), "d" (()(
c
))); \

204 i‡(
__ªs
>=0) \

205  (
ty≥
Ë
__ªs
; \

206 
î∫o
=-
__ªs
; \

208 }

	)

212 
î∫o
;

214 
ac˚ss
 (c⁄° *
fûíame
, 
mode_t
 
mode
);

215 
ac˘
 (c⁄° *
fûíame
);

216 
Æ¨m
 (
£c
);

217 
brk
 (*
íd_d©a_£gmít
);

218 *
sbrk
 (
±rdiff_t
 
ö¸emít
);

219 
chdú
 (c⁄° *
fûíame
);

220 
chmod
 (c⁄° *
fûíame
, 
mode_t
 
mode
);

221 
chown
 (c⁄° *
fûíame
, 
uid_t
 
ow√r
, 
gid_t
 
group
);

222 
chroŸ
 (c⁄° *
fûíame
);

223 
˛o£
 (
fûdes
);

224 
¸ót
 (c⁄° *
fûíame
, 
mode_t
 
mode
);

225 
dup
 (
fûdes
);

226 
execve
 (c⁄° *
fûíame
, **
¨gv
, **
ívp
);

227 
execv
 (c⁄° *
∑th«me
, **
¨gv
);

228 
execvp
 (c⁄° *
fûe
, **
¨gv
);

229 
exe˛
 (c⁄° *
∑th«me
, *
¨g0
, ...);

230 
exe˛p
 (c⁄° *
fûe
, *
¨g0
, ...);

231 
exe˛e
 (c⁄° *
∑th«me
, *
¨g0
, ...);

232 vﬁ©ûê
exô
 (
°©us
);

233 vﬁ©ûê
_exô
 (
°©us
);

234 
f˙é
 (
fûdes
, 
cmd
, ...);

235 
f‹k
 ();

236 
gëpid
 ();

237 
gëuid
 ();

238 
gëeuid
 ();

239 
gëgid
 ();

240 
gëegid
 ();

241 
io˘l
 (
fûdes
, 
cmd
, ...);

242 
kûl
 (
pid_t
 
pid
, 
sig«l
);

243 
lök
 (c⁄° *
fûíame1
, c⁄° *
fûíame2
);

244 
l£ek
 (
fûdes
, 
off_t
 
off£t
, 
‹igö
);

245 
mknod
 (c⁄° *
fûíame
, 
mode_t
 
mode
, 
dev_t
 
dev
);

246 
mou¡
 (c⁄° *
•ecülfûe
, c⁄° *
dú
, 
rwÊag
);

247 
ni˚
 (
vÆ
);

248 
›í
 (c⁄° *
fûíame
, 
Êag
, ...);

249 
∑u£
 ();

250 
pùe
 (*
fûdes
);

251 
ªad
 (
fûdes
, *
buf
, 
off_t
 
cou¡
);

252 
£çgΩ
 ();

253 
£çgid
 (
pid_t
 
pid
,Öid_à
pgid
);

254 
£tuid
 (
uid_t
 
uid
);

255 
£tgid
 (
gid_t
 
gid
);

256 (*
sig«l
 (
sig
, (*
‚
) ())) ();

257 
	`°©
 (c⁄° *
fûíame
, 
°©
 *
°©_buf
);

258 
	`f°©
 (
fûdes
, 
°©
 *
°©_buf
);

259 
	`°ime
 (
time_t
 * 
çå
);

260 
	`sync
 ();

261 
time_t
 
	`time
 (time_à* 
éoc
);

262 
time_t
 
	`times
 (
tms
 *
tbuf
);

263 
	`ulimô
 (
cmd
, 
limô
);

264 
mode_t
 
	`umask
 (mode_à
mask
);

265 
	`umou¡
 (c⁄° *
•ecülfûe
);

266 
	`u«me
 (
ut¢ame
 *
«me
);

267 
	`u∆ök
 (c⁄° *
fûíame
);

268 
	`u°©
 (
dev_t
 
dev
, 
u°©
 *
ubuf
);

269 
	`utime
 (c⁄° *
fûíame
, 
utimbuf
 *
times
);

270 
pid_t
 
	`waôpid
 (pid_à
pid
, *
waô_°©
, 
›ti⁄s
);

271 
pid_t
 
	`waô
 (*
waô_°©
);

272 
	`wrôe
 (
fûdes
, c⁄° *
buf
, 
off_t
 
cou¡
);

273 
	`dup2
 (
ﬁdfd
, 
√wfd
);

274 
	`gëµid
 (); 
pid_t
 
	`gëpgΩ
 ();Öid_à
	`£tsid
 ();

	@include/utime.h

1 #i‚de‡
_UTIME_H


2 
	#_UTIME_H


	)

4 
	~<sys/ty≥s.h
>

6 
	sutimbuf


8 
time_t
 
	ma˘ime
;

9 
time_t
 
	mmodtime
;

13 
utime
 (c⁄° *
fûíame
, 
utimbuf
 *
times
);

	@init/main.c

7 
	#__LIBRARY__


8 
	~<uni°d.h
>

12 
	~<time.h
>

13 

	)

34 
ölöe


35 
	$_sysˇŒ0
 (, 
f‹k
)

39 
ölöe
 
	$_sysˇŒ0
 (, 
∑u£
)

41 
ölöe
 
	$_sysˇŒ1
 (, 
£tup
, *, 
BIOS
)

43 
ölöe
 
	$_sysˇŒ0
 (, 
sync
)

44 
	~<löux/ây.h
>

45 
	~<löux/sched.h
>

48 
	~<löux/hód.h
>

49 
	~<asm/sy°em.h
>

51 
	~<asm/io.h
>

52 
	~<°ddef.h
>

53 
	~<°d¨g.h
>

56 
	~<uni°d.h
>

57 
	~<f˙é.h
>

58 
	~<sys/ty≥s.h
>

59 
	~<löux/fs.h
>

60 
¥ötbuf
[1024];

62 
	`v•rötf
 ();

63 
	`öô
 ();

64 
	`blk_dev_öô
 ();

65 
	`chr_dev_öô
 ();

66 
	`hd_öô
 ();

67 
	`Ê›py_öô
 ();

68 
	`mem_öô
 (
°¨t
, 
íd
);

69 
	`rd_öô
 (
mem_°¨t
, 
Àngth
);

70 
	`kî√l_mktime
 (
tm
 *tm);

71 
°¨tup_time
;

79 
	#EXT_MEM_K
 (*(*)0x90002)

80 
	#DRIVE_INFO
 (*(
drive_öfo
 *)0x90080)

81 
	#ORIG_ROOT_DEV
 (*(*)0x901FC)

82 

	)

94 
	#CMOS_READ
(
addr
) ({ \

95 
	`outb_p
 (0x80 | 
addr
, 0x70);

	)

97 
	`öb_p
 (0x71);

99 
	}
}

102 
	#BCD_TO_BIN
(
vÆ
) ((val)=((val)&15) + ((val)>>4)*10)

103 
	`time_öô
 ()

104 {

	)

105 
tm
 
	gtime
;

109 
	gtime
.
	gtm_£c
 = 
CMOS_READ
 (0);

110 
	gtime
.
	gtm_mö
 = 
CMOS_READ
 (2);

111 
	gtime
.
	gtm_hour
 = 
CMOS_READ
 (4);

112 
	gtime
.
	gtm_mday
 = 
CMOS_READ
 (7);

113 
	gtime
.
	gtm_m⁄
 = 
CMOS_READ
 (8);

114 
	gtime
.
	gtm_yór
 = 
CMOS_READ
 (9);

116 
	gtime
.
	gtm_£c
 !
CMOS_READ
 (0));

117 
BCD_TO_BIN
 (
time
.
tm_£c
);

118 
BCD_TO_BIN
 (
time
.
tm_mö
);

119 
BCD_TO_BIN
 (
time
.
tm_hour
);

120 
BCD_TO_BIN
 (
time
.
tm_mday
);

121 
BCD_TO_BIN
 (
time
.
tm_m⁄
);

122 
BCD_TO_BIN
 (
time
.
tm_yór
);

123 
	gtime
.
	gtm_m⁄
--;

124 
	g°¨tup_time
 = 
kî√l_mktime
 (&
time
);

127 
	gmem‹y_íd
 = 0;

128 
	gbuf„r_mem‹y_íd
 = 0;

129 
	gmaö_mem‹y_°¨t
 = 0;

131 
	sdrive_öfo


133 
	mdummy
[32];

136 
	gdrive_öfo
;

138 
	$maö
 ()

152 
ROOT_DEV
 = 
ORIG_ROOT_DEV
;

153 
drive_öfo
 = 
DRIVE_INFO
;

154 
mem‹y_íd
 = (1 << 20Ë+ (
EXT_MEM_K
 << 10);

155 
mem‹y_íd
 &= 0xfffff000;

156 i‡(
mem‹y_íd
 > 16 * 1024 * 1024)

157 
mem‹y_íd
 = 16 * 1024 * 1024;

158 i‡(
mem‹y_íd
 > 12 * 1024 * 1024)

159 
buf„r_mem‹y_íd
 = 4 * 1024 * 1024;

160 i‡(
mem‹y_íd
 > 6 * 1024 * 1024)

161 
buf„r_mem‹y_íd
 = 2 * 1024 * 1024;

163 
buf„r_mem‹y_íd
 = 1 * 1024 * 1024;

164 
maö_mem‹y_°¨t
 = 
buf„r_mem‹y_íd
;

165 #ifde‡
RAMDISK


166 
maö_mem‹y_°¨t
 +
	`rd_öô
 (maö_mem‹y_°¨t, 
RAMDISK
 * 1024);

170 
	`mem_öô
 (
maö_mem‹y_°¨t
, 
mem‹y_íd
);

171 
	`å≠_öô
 ();

172 
	`blk_dev_öô
 ();

173 
	`chr_dev_öô
 ();

174 
	`ây_öô
 ();

175 
	`time_öô
 ();

176 
	`sched_öô
 ();

177 
	`buf„r_öô
 (
buf„r_mem‹y_íd
);

178 
	`hd_öô
 ();

179 
	`Ê›py_öô
 ();

180 
	`°i
 ();

182 
	`move_to_u£r_mode
 ();

183 i‡(!
	`f‹k
 ())

185 
	`öô
 ();

200 
	`∑u£
 ();

201 
	}
}

203 
	$¥ötf
 (c⁄° *
fmt
, ...)

209 
va_li°
 
¨gs
;

210 
i
;

212 
	`va_°¨t
 (
¨gs
, 
fmt
);

213 
	`wrôe
 (1, 
¥ötbuf
, 
i
 = 
	`v•rötf
 (¥ötbuf, 
fmt
, 
¨gs
));

214 
	`va_íd
 (
¨gs
);

215  
i
;

216 
	}
}

218 *
	g¨gv_rc
[] =

220 "/bö/sh", 
NULL
};

221 *
	gívp_rc
[] =

223 "HOME=/", 
NULL
};

225 *
	g¨gv
[] =

227 "-/bö/sh", 
NULL
};

228 *
	gívp
[] =

230 "HOME=/u§/roŸ", 
NULL
};

232 
	$öô
 ()

234 
pid
, 
i
;

238 
	`£tup
 ((*Ë&
drive_öfo
);

239 (Ë
	`›í
 ("/dev/ây0", 
O_RDWR
, 0);

242 (Ë
	`dup
 (0);

243 (Ë
	`dup
 (0);

244 
	`¥ötf
 ("%d buf„r†%d byã†buf„∏•a˚\n\r", 
NR_BUFFERS
, NR_BUFFERS * 
BLOCK_SIZE
);

245 
	`¥ötf
 ("Fªêmem: %d byãs\n\r", 
mem‹y_íd
 - 
maö_mem‹y_°¨t
);

250 i‡(!(
pid
 = 
	`f‹k
 ()))

252 
	`˛o£
 (0);

253 i‡(
	`›í
 ("/ëc/rc", 
O_RDONLY
, 0))

254 
	`_exô
 (1);

255 
	`execve
 ("/bö/sh", 
¨gv_rc
, 
ívp_rc
);

256 
	`_exô
 (2);

261 i‡(
pid
 > 0)

262 
pid
 !
	`waô
 (&
i
))

273 i‡((
pid
 = 
	`f‹k
 ()) < 0)

275 
	`¥ötf
 ("Fork failed in init\r\n");

278 i‡(!
pid
)

280 
	`˛o£
 (0);

281 
	`˛o£
 (1);

282 
	`˛o£
 (2);

283 
	`£tsid
 ();

284 (Ë
	`›í
 ("/dev/ây0", 
O_RDWR
, 0);

285 (Ë
	`dup
 (0);

286 (Ë
	`dup
 (0);

287 
	`_exô
 (
	`execve
 ("/bö/sh", 
¨gv
, 
ívp
));

290 i‡(
pid
 =
	`waô
 (&
i
))

292 
	`¥ötf
 ("\n\rchûd %d dõd wôh codê%04x\n\r", 
pid
, 
i
);

293 
	`sync
 ();

295 
	`_exô
 (0);

296 
	}
}

	@kernel/blk_drv/blk.h

1 #i‚de‡
_BLK_H


2 
	#_BLK_H


	)

4 
	#NR_BLK_DEV
 7

5 

	)

23 
	#NR_REQUEST
 32

	)

36 
	sªque°


38 
	mdev
;

39 
	mcmd
;

40 
	mîr‹s
;

41 
	m£˘‹
;

42 
	mƒ_£˘‹s
;

43 *
	mbuf„r
;

44 
èsk_°ru˘
 *
	mwaôög
;

45 
buf„r_hód
 *
	mbh
;

46 
ªque°
 *
	m√xt
;

58 
	#IN_ORDER
(
s1
,
s2
) \

59 ((
s1
)->
cmd
<(
s2
)->cmd || (s1)->cmd==(s2)->cmd && \

60 ((
s1
)->
dev
 < (
s2
)->dev || ((s1)->dev == (s2)->dev && \

61 (
s1
)->
£˘‹
 < (
s2
)->£˘‹)))

	)

64 
	sblk_dev_°ru˘


66 (*
	mªque°_‚
) ();

67 
ªque°
 *
	mcuºít_ªque°
;

70 
blk_dev_°ru˘
 
blk_dev
[
NR_BLK_DEV
];

71 
ªque°
Ñeque°[
NR_REQUEST
];

72 
èsk_°ru˘
 *
waô_f‹_ªque°
;

74 #ifde‡
MAJOR_NR


84 #i‡(
MAJOR_NR
 == 1)

86 
	#DEVICE_NAME
 "ramdisk"

87 
	#DEVICE_REQUEST
 
do_rd_ªque°


88 
	#DEVICE_NR
(
devi˚
) ((device) & 7)

89 
	#DEVICE_ON
(
devi˚
)

90 
	#DEVICE_OFF
(
devi˚
)

91 

	)

92 #ñi‡(
MAJOR_NR
 == 2)

94 
	#DEVICE_NAME
 "floppy"

95 
	#DEVICE_INTR
 
do_Ê›py


96 
	#DEVICE_REQUEST
 
do_fd_ªque°


97 
	#DEVICE_NR
(
devi˚
) ((device) & 3)

98 
	#DEVICE_ON
(
devi˚
Ë
	`Ê›py_⁄
(
	`DEVICE_NR
(device))

99 
	#DEVICE_OFF
(
devi˚
Ë
	`Ê›py_off
(
	`DEVICE_NR
(device))

100 

	)

101 #ñi‡(
MAJOR_NR
 == 3)

103 
	#DEVICE_NAME
 "harddisk"

104 
	#DEVICE_INTR
 
do_hd


105 
	#DEVICE_REQUEST
 
do_hd_ªque°


106 
	#DEVICE_NR
(
devi˚
Ë(
	`MINOR
(device)/5)

107 
	#DEVICE_ON
(
devi˚
)

108 
	#DEVICE_OFF
(
devi˚
)

	)

116 
	#CURRENT
 (
blk_dev
[
MAJOR_NR
].
cuºít_ªque°
)

117 
	#CURRENT_DEV
 
	`DEVICE_NR
(
CURRENT
->
dev
)

118 

	)

119 #ifde‡
DEVICE_INTR


120 (*
DEVICE_INTR
Ë(Ë
NULL
;

122 (
DEVICE_REQUEST
) ();

125 
ölöe
 

126 
	$u∆ock_buf„r
 (
buf„r_hód
 *
bh
)

128 i‡(!
bh
->
b_lock
)

129 
	`¥ötk
 (
DEVICE_NAME
 ": free buffer being unlocked\n");

130 
bh
->
b_lock
 = 0;

131 
	`wake_up
 (&
bh
->
b_waô
);

132 
	}
}

135 
ölöe
 

136 
	$íd_ªque°
 (
u±od©e
)

138 
	`DEVICE_OFF
 (
CURRENT
->
dev
);

139 i‡(
CURRENT
->
bh
)

141 
CURRENT
->
bh
->
b_u±od©e
 = 
u±od©e
;

142 
	`u∆ock_buf„r
 (
CURRENT
->
bh
);

144 i‡(!
u±od©e
)

146 
	`¥ötk
 (
DEVICE_NAME
 " I/OÉrror\n\r");

147 
	`¥ötk
 ("dev %04x, block %d\n\r", 
CURRENT
->
dev
, CURRENT->
bh
->
b_blockƒ
);

149 
	`wake_up
 (&
CURRENT
->
waôög
);

150 
	`wake_up
 (&
waô_f‹_ªque°
);

151 
CURRENT
->
dev
 = -1;

152 
CURRENT
 = CURRENT->
√xt
;

153 
	}
}

156 
	#INIT_REQUEST
 \

157 
ª≥©
: \

158 i‡(!
CURRENT
) \

159 ;

	)

160 i‡(
MAJOR
 (
CURRENT
->
dev
Ë!
MAJOR_NR
)

162 
∑nic
 (
DEVICE_NAME
 ":ÑequestÜist destroyed");

163 i‡(
	gCURRENT
->
	gbh
)

165 i‡(!
	gCURRENT
->
	gbh
->
	gb_lock
)

167 
∑nic
 (
DEVICE_NAME
 ": blockÇotÜocked");

	@kernel/blk_drv/floppy.c

51 
	~<löux/sched.h
>

53 
	~<löux/fs.h
>

54 
	~<löux/kî√l.h
>

55 
	~<löux/fdªg.h
>

56 
	~<asm/sy°em.h
>

57 
	~<asm/io.h
>

58 
	~<asm/£gmít.h
>

60 
	#MAJOR_NR
 2

61 
	~"blk.h
"

62 

	)

63 
	gªˇlibøã
 = 0;

64 
	gª£t
 = 0;

65 
	g£ek
 = 0;

67 
cuºít_DOR
;

69 
	#immoutb_p
(
vÆ
,
p‹t
) \

70 
	`__asm__
 ("outb %0,%1\n\tjm∞1f\n1:\tjm∞1f\n1:"::"a" ((Ë(
vÆ
)),

	)

71 "i" (
	gp‹t
))

73 
	#TYPE
(
x
) ((x)>>2)

74 
	#DRIVE
(
x
) ((x)&0x03)

75 

	)

84 
	#MAX_ERRORS
 8

	)

90 
	#MAX_REPLIES
 7

91 
ª∂y_buf„r
[
MAX_REPLIES
];

92 
	#ST0
 (
ª∂y_buf„r
[0])

93 
	#ST1
 (
ª∂y_buf„r
[1])

94 
	#ST2
 (
ª∂y_buf„r
[2])

95 
	#ST3
 (
ª∂y_buf„r
[3])

96 

	)

124 
	sÊ›py_°ru˘


126 
	msize
, 
	m£˘
, 
	mhód
, 
	måack
, 
	m°ªtch
;

127 
	mg≠
, 
	møã
, 
	m•ec1
;

129 
	gÊ›py_ty≥
[] =

174 
Ê›py_öãºu±
 ();

175 
tmp_Ê›py_¨ó
[1024];

186 
	gcur_•ec1
 = -1;

187 
	gcur_øã
 = -1;

188 
Ê›py_°ru˘
 *
	gÊ›py
 = 
Ê›py_ty≥
;

189 
	gcuºít_drive
 = 0;

190 
	g£˘‹
 = 0;

191 
	ghód
 = 0;

192 
	gåack
 = 0;

193 
	g£ek_åack
 = 0;

194 
	gcuºít_åack
 = 255;

195 
	gcomm™d
 = 0;

196 
	g£À˘ed
 = 0;

197 
èsk_°ru˘
 *
	gwaô_⁄_Ê›py_£À˘
 = 
NULL
;

202 
	$Ê›py_de£À˘
 (
ƒ
)

204 i‡(
ƒ
 !(
cuºít_DOR
 & 3))

205 
	`¥ötk
 ("floppy_deselect: driveÇot selected\n\r");

206 
£À˘ed
 = 0;

207 
	`wake_up
 (&
waô_⁄_Ê›py_£À˘
);

208 
	}
}

223 
	$Ê›py_ch™ge
 (
ƒ
)

225 
ª≥©
:

226 
	`Ê›py_⁄
 (
ƒ
);

229 (
cuºít_DOR
 & 3Ë!
ƒ
 && 
£À˘ed
)

230 
	`öãºu±ibÀ_¶ìp_⁄
 (&
waô_⁄_Ê›py_£À˘
);

232 i‡((
cuºít_DOR
 & 3Ë!
ƒ
)

233 
ª≥©
;

236 i‡(
	`öb
 (
FD_DIR
) & 0x80)

238 
	`Ê›py_off
 (
ƒ
);

241 
	`Ê›py_off
 (
ƒ
);

243 
	}
}

246 
	#c›y_buf„r
(
‰om
,
to
) \

247 
	`__asm__
( "cld ;Ñep ; movsl" \

248 :: "c" (
BLOCK_SIZE
/4), "S" (()(
‰om
)), "D" (()(
to
)) \

249 : "cx", "di", "si")

	)

253 
	$£tup_DMA
 ()

255 
addr
 = (Ë
CURRENT
->
buf„r
;

257 
	`˛i
 ();

260 i‡(
addr
 >= 0x100000)

262 
addr
 = (Ë
tmp_Ê›py_¨ó
;

263 i‡(
comm™d
 =
FD_WRITE
)

264 
	`c›y_buf„r
 (
CURRENT
->
buf„r
, 
tmp_Ê›py_¨ó
);

268 
	`immoutb_p
 (4 | 2, 10);

274 
	`__asm__
 ("outb %%al,$12\n\tjmp 1f\n1:\tjmp 1f\n1:\t"

276 "a" ((Ë((
comm™d
 =
FD_READ
Ë? 
DMA_READ
 : 
DMA_WRITE
)));

279 
	`immoutb_p
 (
addr
, 4);

280 
addr
 >>= 8;

282 
	`immoutb_p
 (
addr
, 4);

283 
addr
 >>= 8;

286 
	`immoutb_p
 (
addr
, 0x81);

289 
	`immoutb_p
 (0xff, 5);

292 
	`immoutb_p
 (3, 5);

295 
	`immoutb_p
 (0 | 2, 10);

296 
	`°i
 ();

297 
	}
}

301 
	$ouçut_byã
 (
byã
)

303 
cou¡î
;

304 
°©us
;

306 i‡(
ª£t
)

310 
cou¡î
 = 0; counter < 10000; counter++)

312 
°©us
 = 
	`öb_p
 (
FD_STATUS
Ë& (
STATUS_READY
 | 
STATUS_DIR
);

313 i‡(
°©us
 =
STATUS_READY
)

315 
	`outb
 (
byã
, 
FD_DATA
);

320 
ª£t
 = 1;

321 
	`¥ötk
 ("UnableÅo send byteÅo FDC\n\r");

322 
	}
}

328 
	$ªsu…
 ()

330 
i
 = 0, 
cou¡î
, 
°©us
;

332 i‡(
ª£t
)

334 
cou¡î
 = 0; counter < 10000; counter++)

336 
°©us
 = 
	`öb_p
 (
FD_STATUS
Ë& (
STATUS_DIR
 | 
STATUS_READY
 | 
STATUS_BUSY
);

337 i‡(
°©us
 =
STATUS_READY
)

338  
i
;

339 i‡(
°©us
 =(
STATUS_DIR
 | 
STATUS_READY
 | 
STATUS_BUSY
))

341 i‡(
i
 >
MAX_REPLIES
)

343 
ª∂y_buf„r
[
i
++] = 
	`öb_p
 (
FD_DATA
);

346 
ª£t
 = 1;

347 
	`¥ötk
 ("GetstatusÅimes out\n\r");

349 
	}
}

353 
	$bad_Êp_öå
 ()

355 
CURRENT
->
îr‹s
++;

357 i‡(
CURRENT
->
îr‹s
 > 
MAX_ERRORS
)

359 
	`Ê›py_de£À˘
 (
cuºít_drive
);

360 
	`íd_ªque°
 (0);

364 i‡(
CURRENT
->
îr‹s
 > 
MAX_ERRORS
 / 2)

365 
ª£t
 = 1;

367 
ªˇlibøã
 = 1;

368 
	}
}

380 
	$rw_öãºu±
 ()

388 i‡(
	`ªsu…
 (Ë!7 || (
ST0
 & 0xf8Ë|| (
ST1
 & 0xbfË|| (
ST2
 & 0x73))

390 i‡(
ST1
 & 0x02)

392 
	`¥ötk
 ("Drivê%d i†wrôê¥Ÿe˘ed\n\r", 
cuºít_drive
);

393 
	`Ê›py_de£À˘
 (
cuºít_drive
);

394 
	`íd_ªque°
 (0);

397 
	`bad_Êp_öå
 ();

398 
	`do_fd_ªque°
 ();

403 i‡(
comm™d
 =
FD_READ
 && (Ë(
CURRENT
->
buf„r
) >= 0x100000)

404 
	`c›y_buf„r
 (
tmp_Ê›py_¨ó
, 
CURRENT
->
buf„r
);

406 
	`Ê›py_de£À˘
 (
cuºít_drive
);

407 
	`íd_ªque°
 (1);

408 
	`do_fd_ªque°
 ();

409 
	}
}

412 
ölöe
 

413 
	$£tup_rw_Ê›py
 ()

415 
	`£tup_DMA
 ();

416 
do_Ê›py
 = 
rw_öãºu±
;

417 
	`ouçut_byã
 (
comm™d
);

418 
	`ouçut_byã
 (
hód
 << 2 | 
cuºít_drive
);

419 
	`ouçut_byã
 (
åack
);

420 
	`ouçut_byã
 (
hód
);

421 
	`ouçut_byã
 (
£˘‹
);

422 
	`ouçut_byã
 (2);

423 
	`ouçut_byã
 (
Ê›py
->
£˘
);

424 
	`ouçut_byã
 (
Ê›py
->
g≠
);

425 
	`ouçut_byã
 (0xFF);

428 i‡(
ª£t
)

429 
	`do_fd_ªque°
 ();

430 
	}
}

446 
	$£ek_öãºu±
 ()

450 
	`ouçut_byã
 (
FD_SENSEI
);

453 i‡(
	`ªsu…
 (Ë!2 || (
ST0
 & 0xF8Ë!0x20 || 
ST1
 !
£ek_åack
)

455 
	`bad_Êp_öå
 ();

456 
	`do_fd_ªque°
 ();

459 
cuºít_åack
 = 
ST1
;

460 
	`£tup_rw_Ê›py
 ();

461 
	}
}

474 
	$å™s„r
 ()

478 i‡(
cur_•ec1
 !
Ê›py
->
•ec1
)

480 
cur_•ec1
 = 
Ê›py
->
•ec1
;

481 
	`ouçut_byã
 (
FD_SPECIFY
);

482 
	`ouçut_byã
 (
cur_•ec1
);

483 
	`ouçut_byã
 (6);

487 i‡(
cur_øã
 !
Ê›py
->
øã
)

488 
	`outb_p
 (
cur_øã
 = 
Ê›py
->
øã
, 
FD_DCR
);

490 i‡(
ª£t
)

492 
	`do_fd_ªque°
 ();

496 i‡(!
£ek
)

498 
	`£tup_rw_Ê›py
 ();

502 
do_Ê›py
 = 
£ek_öãºu±
;

504 i‡(
£ek_åack
)

506 
	`ouçut_byã
 (
FD_SEEK
);

507 
	`ouçut_byã
 (
hód
 << 2 | 
cuºít_drive
);

508 
	`ouçut_byã
 (
£ek_åack
);

512 
	`ouçut_byã
 (
FD_RECALIBRATE
);

513 
	`ouçut_byã
 (
hód
 << 2 | 
cuºít_drive
);

516 i‡(
ª£t
)

517 
	`do_fd_ªque°
 ();

518 
	}
}

530 
	$ªˇl_öãºu±
 ()

532 
	`ouçut_byã
 (
FD_SENSEI
);

533 i‡(
	`ªsu…
 (Ë!2 || (
ST0
 & 0xE0) == 0x60)

534 
ª£t
 = 1;

536 
ªˇlibøã
 = 0;

537 
	`do_fd_ªque°
 ();

538 
	}
}

544 
	$u√x≥˘ed_Ê›py_öãºu±
 ()

546 
	`ouçut_byã
 (
FD_SENSEI
);

547 i‡(
	`ªsu…
 (Ë!2 || (
ST0
 & 0xE0) == 0x60)

548 
ª£t
 = 1;

550 
ªˇlibøã
 = 1;

551 
	}
}

556 
	$ªˇlibøã_Ê›py
 ()

558 
ªˇlibøã
 = 0;

559 
cuºít_åack
 = 0;

560 
do_Ê›py
 = 
ªˇl_öãºu±
;

561 
	`ouçut_byã
 (
FD_RECALIBRATE
);

562 
	`ouçut_byã
 (
hód
 << 2 | 
cuºít_drive
);

563 i‡(
ª£t
)

564 
	`do_fd_ªque°
 ();

565 
	}
}

571 
	$ª£t_öãºu±
 ()

573 
	`ouçut_byã
 (
FD_SENSEI
);

574 (Ë
	`ªsu…
 ();

575 
	`ouçut_byã
 (
FD_SPECIFY
);

576 
	`ouçut_byã
 (
cur_•ec1
);

577 
	`ouçut_byã
 (6);

578 
	`do_fd_ªque°
 ();

579 
	}
}

587 
	$ª£t_Ê›py
 ()

589 
i
;

591 
ª£t
 = 0;

592 
cur_•ec1
 = -1;

593 
cur_øã
 = -1;

594 
ªˇlibøã
 = 1;

595 
	`¥ötk
 ("Reset-floppy called\n\r");

596 
	`˛i
 ();

597 
do_Ê›py
 = 
ª£t_öãºu±
;

598 
	`outb_p
 (
cuºít_DOR
 & ~0x04, 
FD_DOR
);

599 
i
 = 0; i < 100; i++)

600 
	`__asm__
 ("nop");

601 
	`outb
 (
cuºít_DOR
, 
FD_DOR
);

602 
	`°i
 ();

603 
	}
}

609 
	$Ê›py_⁄_öãºu±
 ()

613 
£À˘ed
 = 1;

616 i‡(
cuºít_drive
 !(
cuºít_DOR
 & 3))

618 
cuºít_DOR
 &= 0xFC;

619 
cuºít_DOR
 |
cuºít_drive
;

620 
	`outb
 (
cuºít_DOR
, 
FD_DOR
);

621 
	`add_timî
 (2, &
å™s„r
);

624 
	`å™s„r
 ();

625 
	}
}

630 
	$do_fd_ªque°
 ()

632 
block
;

634 
£ek
 = 0;

636 i‡(
ª£t
)

638 
	`ª£t_Ê›py
 ();

642 i‡(
ªˇlibøã
)

644 
	`ªˇlibøã_Ê›py
 ();

648 
INIT_REQUEST
;

650 
Ê›py
 = (
	`MINOR
 (
CURRENT
->
dev
Ë>> 2Ë+ 
Ê›py_ty≥
;

653 i‡(
cuºít_drive
 !
CURRENT_DEV
)

654 
£ek
 = 1;

655 
cuºít_drive
 = 
CURRENT_DEV
;

658 
block
 = 
CURRENT
->
£˘‹
;

659 i‡(
block
 + 2 > 
Ê›py
->
size
)

661 
	`íd_ªque°
 (0);

662 
ª≥©
;

665 
£˘‹
 = 
block
 % 
Ê›py
->
£˘
;

666 
block
 /
Ê›py
->
£˘
;

667 
hód
 = 
block
 % 
Ê›py
->head;

668 
åack
 = 
block
 / 
Ê›py
->
hód
;

669 
£ek_åack
 = 
åack
 << 
Ê›py
->
°ªtch
;

671 i‡(
£ek_åack
 !
cuºít_åack
)

672 
£ek
 = 1;

673 
£˘‹
++;

674 i‡(
CURRENT
->
cmd
 =
READ
)

675 
comm™d
 = 
FD_READ
;

676 i‡(
CURRENT
->
cmd
 =
WRITE
)

677 
comm™d
 = 
FD_WRITE
;

679 
	`∑nic
 ("do_fd_request: unknown command");

682 
	`add_timî
 (
	`ticks_to_Ê›py_⁄
 (
cuºít_drive
), &
Ê›py_⁄_öãºu±
);

683 
	}
}

689 
	$Ê›py_öô
 ()

691 
blk_dev
[
MAJOR_NR
].
ªque°_‚
 = 
DEVICE_REQUEST
;

692 
	`£t_å≠_g©e
 (0x26, &
Ê›py_öãºu±
);

693 
	`outb
 (
	`öb_p
 (0x21) & ~0x40, 0x21);

695 
	}
}

	@kernel/blk_drv/hd.c

21 
	~<löux/c⁄fig.h
>

22 
	~<löux/sched.h
>

24 
	~<löux/fs.h
>

25 
	~<löux/kî√l.h
>

26 
	~<löux/hdªg.h
>

27 
	~<asm/sy°em.h
>

28 
	~<asm/io.h
>

29 
	~<asm/£gmít.h
>

31 
	#MAJOR_NR
 3

32 
	~"blk.h
"

33 

	)

34 
	#CMOS_READ
(
addr
) ({ \

35 
	`outb_p
 (0x80 | 
addr
, 0x70);

	)

36 
öb_p
 (0x71);

41 
	#MAX_ERRORS
 7

42 
	#MAX_HD
 2

43 
	`ªˇl_öå
 ();

44 

	)

45 
	gªˇlibøã
 = 1;

46 
	gª£t
 = 1;

53 
	shd_i_°ru˘


55 
	mhód
, 
	m£˘
, 
	mcyl
, 
	mwpcom
, 
	mlz⁄e
, 
	m˘l
;

58 #ifde‡
HD_TYPE


59 
hd_i_°ru˘
 
	ghd_öfo
[] =

61 
HD_TYPE
};

63 
	#NR_HD
 (( (
hd_öfo
))/( (
hd_i_°ru˘
)))

64 #ñ£ // ∑Ò‘Ú£¨∂º…ËŒ™0 ÷µ°£

	)

65 
hd_i_°ru˘
 
	ghd_öfo
[] =

73 
	gNR_HD
 = 0;

78 
	shd_°ru˘


80 
	m°¨t_£˘
;

81 
	mƒ_£˘s
;

84 
	ghd
[5 * 
MAX_HD
] =

91 
	#p‹t_ªad
(
p‹t
,
buf
,
ƒ
) \

92 
	`__asm__
–"˛d;ªp;ösw":: "d" (
p‹t
), "D" (
buf
), "c" (
ƒ
): "cx", "di")

	)

95 
	#p‹t_wrôe
(
p‹t
,
buf
,
ƒ
) \

96 
	`__asm__
–"˛d;ªp;outsw":: "d" (
p‹t
), "S" (
buf
), "c" (
ƒ
): "cx", "si")

	)

98 
hd_öãºu±
 ();

99 
rd_lﬂd
 ();

107 
	$sys_£tup
 (*
BIOS
)

109 
ˇŒabÀ
 = 1;

110 
i
, 
drive
;

111 
cmos_disks
;

112 
∑πôi⁄
 *
p
;

113 
buf„r_hód
 *
bh
;

116 i‡(!
ˇŒabÀ
)

118 
ˇŒabÀ
 = 0;

120 #i‚de‡
HD_TYPE


121 
drive
 = 0; drive < 2; drive++)

123 
hd_öfo
[
drive
].
cyl
 = *(*Ë
BIOS
;

124 
hd_öfo
[
drive
].
hód
 = *(*Ë(2 + 
BIOS
);

125 
hd_öfo
[
drive
].
wpcom
 = *(*Ë(5 + 
BIOS
);

126 
hd_öfo
[
drive
].
˘l
 = *(*Ë(8 + 
BIOS
);

127 
hd_öfo
[
drive
].
lz⁄e
 = *(*Ë(12 + 
BIOS
);

128 
hd_öfo
[
drive
].
£˘
 = *(*Ë(14 + 
BIOS
);

129 
BIOS
 += 16;

133 i‡(
hd_öfo
[1].
cyl
)

134 
NR_HD
 = 2;

136 
NR_HD
 = 1;

139 
i
 = 0; i < 
NR_HD
; i++)

141 
hd
[
i
 * 5].
°¨t_£˘
 = 0;

142 
hd
[
i
 * 5].
ƒ_£˘s
 = 
hd_öfo
[i].
hód
 * hd_öfo[i].
£˘
 * hd_öfo[i].
cyl
;

179 i‡((
cmos_disks
 = 
	`CMOS_READ
 (0x12)) & 0xf0)

180 i‡(
cmos_disks
 & 0x0f)

181 
NR_HD
 = 2;

183 
NR_HD
 = 1;

185 
NR_HD
 = 0;

188 
i
 = 
NR_HD
; i < 2; i++)

190 
hd
[
i
 * 5].
°¨t_£˘
 = 0;

191 
hd
[
i
 * 5].
ƒ_£˘s
 = 0;

197 
drive
 = 0; drivê< 
NR_HD
; drive++)

199 i‡(!(
bh
 = 
	`bªad
 (0x300 + 
drive
 * 5, 0)))

201 
	`¥ötk
 ("U«bÀÅÿªadÖ¨tôi⁄ÅabÀ o‡drivê%d\n\r", 
drive
);

202 
	`∑nic
 ("");

204 i‡(
bh
->
b_d©a
[510] != 0x55 || () bh->b_data[511] != 0xAA)

206 
	`¥ötk
 ("BadÖ¨tôi⁄ÅabÀ o¿drivê%d\n\r", 
drive
);

207 
	`∑nic
 ("");

209 
p
 = 0x1BE + (*Ë
bh
->
b_d©a
;

210 
i
 = 1; i < 5; i++, 
p
++)

212 
hd
[
i
 + 5 * 
drive
].
°¨t_£˘
 = 
p
->start_sect;

213 
hd
[
i
 + 5 * 
drive
].
ƒ_£˘s
 = 
p
->nr_sects;

215 
	`bªl£
 (
bh
);

217 i‡(
NR_HD
)

218 
	`¥ötk
 ("P¨tôi⁄ÅabÀ%†ok.\n\r", (
NR_HD
 > 1) ? "s" : "");

219 
	`rd_lﬂd
 ();

220 
	`mou¡_roŸ
 ();

222 
	}
}

226 
	$c⁄åﬁÀr_ªady
 ()

228 
ªåõs
 = 10000;

230 --
ªåõs
 && (
	`öb_p
 (
HD_STATUS
) & 0xc0) != 0x40);

231  (
ªåõs
);

232 
	}
}

237 
	$wö_ªsu…
 ()

239 
i
 = 
	`öb_p
 (
HD_STATUS
);

241 i‡((
i
 & (
BUSY_STAT
 | 
READY_STAT
 | 
WRERR_STAT
 | 
SEEK_STAT
 | 
ERR_STAT
))

242 =(
READY_STAT
 | 
SEEK_STAT
))

244 i‡(
i
 & 1)

245 
i
 = 
	`öb
 (
HD_ERROR
);

247 
	}
}

254 
hd_out
 (
drive
, 
n£˘
, 
£˘
,

255 
hód
, 
cyl
, 
cmd
,

256 (*
öå_addr
) ())

258 
p‹t
 
	`asm
 ("dx");

260 i‡(
drive
 > 1 || 
hód
 > 15)

261 
	`∑nic
 ("TryingÅo write bad sector");

262 i‡(!
	`c⁄åﬁÀr_ªady
 ())

263 
	`∑nic
 ("HD controllerÇotÑeady");

264 
do_hd
 = 
öå_addr
;

265 
	`outb_p
 (
hd_öfo
[
drive
].
˘l
, 
HD_CMD
);

266 
p‹t
 = 
HD_DATA
;

267 
	`outb_p
 (
hd_öfo
[
drive
].
wpcom
 >> 2, ++
p‹t
);

268 
	`outb_p
 (
n£˘
, ++
p‹t
);

269 
	`outb_p
 (
£˘
, ++
p‹t
);

270 
	`outb_p
 (
cyl
, ++
p‹t
);

271 
	`outb_p
 (
cyl
 >> 8, ++
p‹t
);

272 
	`outb_p
 (0xA0 | (
drive
 << 4Ë| 
hód
, ++
p‹t
);

273 
	`outb
 (
cmd
, ++
p‹t
);

274 
	}
}

278 
	$drive_busy
 ()

280 
i
;

282 
i
 = 0; i < 10000; i++)

283 i‡(
READY_STAT
 =(
	`öb_p
 (
HD_STATUS
Ë& (
BUSY_STAT
 | READY_STAT)))

285 
i
 = 
	`öb
 (
HD_STATUS
);

286 
i
 &
BUSY_STAT
 | 
READY_STAT
 | 
SEEK_STAT
;

287 i‡(
i
 =
READY_STAT
 | 
SEEK_STAT
)

289 
	`¥ötk
 ("HD controllerÅimes out\n\r");

291 
	}
}

294 
	$ª£t_c⁄åﬁÀr
 ()

296 
i
;

298 
	`outb
 (4, 
HD_CMD
);

299 
i
 = 0; i < 100; i++)

300 
	`n›
 ();

301 
	`outb
 (
hd_öfo
[0].
˘l
 & 0x0f, 
HD_CMD
);

302 i‡(
	`drive_busy
 ())

303 
	`¥ötk
 ("HD-controller still busy\n\r");

304 i‡((
i
 = 
	`öb
 (
HD_ERROR
)) != 1)

305 
	`¥ötk
 ("HD-c⁄åﬁÀ∏ª£àÁûed: %02x\n\r", 
i
);

306 
	}
}

310 
	$ª£t_hd
 (
ƒ
)

312 
	`ª£t_c⁄åﬁÀr
 ();

313 
	`hd_out
 (
ƒ
, 
hd_öfo
[ƒ].
£˘
, hd_öfo[ƒ].£˘, hd_öfo[ƒ].
hód
 - 1,

314 
hd_öfo
[
ƒ
].
cyl
, 
WIN_SPECIFY
, &
ªˇl_öå
);

315 
	}
}

320 
	$u√x≥˘ed_hd_öãºu±
 ()

322 
	`¥ötk
 ("Unexpected HD interrupt\n\r");

323 
	}
}

326 
	$bad_rw_öå
 ()

328 i‡(++
CURRENT
->
îr‹s
 >
MAX_ERRORS
)

329 
	`íd_ªque°
 (0);

331 i‡(
CURRENT
->
îr‹s
 > 
MAX_ERRORS
 / 2)

332 
ª£t
 = 1;

333 
	}
}

336 
	$ªad_öå
 ()

338 i‡(
	`wö_ªsu…
 ())

340 
	`bad_rw_öå
 ();

341 
	`do_hd_ªque°
 ();

344 
	`p‹t_ªad
 (
HD_DATA
, 
CURRENT
->
buf„r
, 256);

345 
CURRENT
->
îr‹s
 = 0;

346 
CURRENT
->
buf„r
 += 512;

347 
CURRENT
->
£˘‹
++;

348 i‡(--
CURRENT
->
ƒ_£˘‹s
)

350 
do_hd
 = &
ªad_öå
;

353 
	`íd_ªque°
 (1);

354 
	`do_hd_ªque°
 ();

355 
	}
}

360 
	$wrôe_öå
 ()

362 i‡(
	`wö_ªsu…
 ())

364 
	`bad_rw_öå
 ();

365 
	`do_hd_ªque°
 ();

368 i‡(--
CURRENT
->
ƒ_£˘‹s
)

370 
CURRENT
->
£˘‹
++;

371 
CURRENT
->
buf„r
 += 512;

372 
do_hd
 = &
wrôe_öå
;

373 
	`p‹t_wrôe
 (
HD_DATA
, 
CURRENT
->
buf„r
, 256);

376 
	`íd_ªque°
 (1);

377 
	`do_hd_ªque°
 ();

378 
	}
}

382 
	$ªˇl_öå
 ()

384 i‡(
	`wö_ªsu…
 ())

385 
	`bad_rw_öå
 ();

386 
	`do_hd_ªque°
 ();

387 
	}
}

390 
	$do_hd_ªque°
 ()

392 
i
, 
r
;

393 
block
, 
dev
;

394 
£c
, 
hód
, 
cyl
;

395 
n£˘
;

397 
INIT_REQUEST
;

399 
dev
 = 
	`MINOR
 (
CURRENT
->dev);

400 
block
 = 
CURRENT
->
£˘‹
;

404 i‡(
dev
 >5 * 
NR_HD
 || 
block
 + 2 > 
hd
[dev].
ƒ_£˘s
)

406 
	`íd_ªque°
 (0);

407 
ª≥©
;

409 
block
 +
hd
[
dev
].
°¨t_£˘
;

410 
dev
 /= 5;

413 
	`__asm__
 ("div»%4": "˜" (
block
), "=d" (
£c
):"" (block), "1" (0),

414 "r" (
hd_öfo
[
dev
].

415 
£˘
));

416 
	`__asm__
 ("div»%4": "˜" (
cyl
), "=d" (
hód
):"" (
block
), "1" (0),

417 "r" (
hd_öfo
[
dev
].

418 
hód
));

419 
£c
++;

420 
n£˘
 = 
CURRENT
->
ƒ_£˘‹s
;

422 i‡(
ª£t
)

424 
ª£t
 = 0;

425 
ªˇlibøã
 = 1;

426 
	`ª£t_hd
 (
CURRENT_DEV
);

430 i‡(
ªˇlibøã
)

432 
ªˇlibøã
 = 0;

433 
	`hd_out
 (
dev
, 
hd_öfo
[
CURRENT_DEV
].
£˘
, 0, 0, 0,

434 
WIN_RESTORE
, &
ªˇl_öå
);

439 i‡(
CURRENT
->
cmd
 =
WRITE
)

441 
	`hd_out
 (
dev
, 
n£˘
, 
£c
, 
hód
, 
cyl
, 
WIN_WRITE
, &
wrôe_öå
);

442 
i
 = 0; i < 3000 && !(
r
 = 
	`öb_p
 (
HD_STATUS
Ë& 
DRQ_STAT
); i++)

446 i‡(!
r
)

448 
	`bad_rw_öå
 ();

449 
ª≥©
;

451 
	`p‹t_wrôe
 (
HD_DATA
, 
CURRENT
->
buf„r
, 256);

454 i‡(
CURRENT
->
cmd
 =
READ
)

456 
	`hd_out
 (
dev
, 
n£˘
, 
£c
, 
hód
, 
cyl
, 
WIN_READ
, &
ªad_öå
);

459 
	`∑nic
 ("unknown hd-command");

460 
	}
}

463 
	$hd_öô
 ()

465 
blk_dev
[
MAJOR_NR
].
ªque°_‚
 = 
DEVICE_REQUEST
;

466 
	`£t_öå_g©e
 (0x2E, &
hd_öãºu±
);

468 
	`outb_p
 (
	`öb_p
 (0x21) & 0xfb, 0x21);

470 
	`outb
 (
	`öb_p
 (0xA1) & 0xbf, 0xA1);

472 
	}
}

	@kernel/blk_drv/ll_rw_blk.c

13 
	~<î∫o.h
>

14 
	~<löux/sched.h
>

16 
	~<löux/kî√l.h
>

17 
	~<asm/sy°em.h
>

19 
	~"blk.h
"

28 
ªque°
 
	gªque°
[
NR_REQUEST
];

34 
èsk_°ru˘
 *
	gwaô_f‹_ªque°
 = 
NULL
;

45 
blk_dev_°ru˘
 
	gblk_dev
[
NR_BLK_DEV
] = {

46 {
NULL
, NULL},

47 {
NULL
, NULL},

48 {
NULL
, NULL},

49 {
NULL
, NULL},

50 {
NULL
, NULL},

51 {
NULL
, NULL},

52 {
NULL
, NULL}

57 
ölöe
 

58 
	$lock_buf„r
 (
buf„r_hód
 *
bh
)

60 
	`˛i
 ();

61 
bh
->
b_lock
)

62 
	`¶ìp_⁄
 (&
bh
->
b_waô
);

63 
bh
->
b_lock
 = 1;

64 
	`°i
 ();

65 
	}
}

68 
ölöe
 

69 
	$u∆ock_buf„r
 (
buf„r_hód
 *
bh
)

71 i‡(!
bh
->
b_lock
)

72 
	`¥ötk
 ("ll_rw_block.c: bufferÇotÜocked\n\r");

73 
bh
->
b_lock
 = 0;

74 
	`wake_up
 (&
bh
->
b_waô
);

75 
	}
}

88 
	$add_ªque°
 (
blk_dev_°ru˘
 *
dev
, 
ªque°
 *
ªq
)

90 
ªque°
 *
tmp
;

92 
ªq
->
√xt
 = 
NULL
;

93 
	`˛i
 ();

94 i‡(
ªq
->
bh
)

95 
ªq
->
bh
->
b_dút
 = 0;

98 i‡(!(
tmp
 = 
dev
->
cuºít_ªque°
))

100 
dev
->
cuºít_ªque°
 = 
ªq
;

101 
	`°i
 ();

102 (
dev
->
ªque°_‚
) ();

107 ; 
tmp
->
√xt
;Åmp =Åmp->next)

108 i‡((
	`IN_ORDER
 (
tmp
, 
ªq
) ||

109 !
	`IN_ORDER
 (
tmp
,Åmp->
√xt
)Ë&& IN_ORDER (
ªq
,Åmp->next))

111 
ªq
->
√xt
 = 
tmp
->next;

112 
tmp
->
√xt
 = 
ªq
;

113 
	`°i
 ();

114 
	}
}

118 
	$make_ªque°
 (
maj‹
, 
rw
, 
buf„r_hód
 *
bh
)

120 
ªque°
 *
ªq
;

121 
rw_ahód
;

129 i‡(
rw_ahód
 = (
rw
 =
READA
 ||Ñw =
WRITEA
))

131 i‡(
bh
->
b_lock
)

133 i‡(
rw
 =
READA
)

134 
rw
 = 
READ
;

136 
rw
 = 
WRITE
;

139 i‡(
rw
 !
READ
 &&Ñw !
WRITE
)

140 
	`∑nic
 ("Bad block dev command, must be R/W/RA/WA");

142 
	`lock_buf„r
 (
bh
);

145 i‡((
rw
 =
WRITE
 && !
bh
->
b_dút
Ë|| (rw =
READ
 && bh->
b_u±od©e
))

147 
	`u∆ock_buf„r
 (
bh
);

150 
ª≥©
:

160 i‡(
rw
 =
READ
)

161 
ªq
 = 
ªque°
 + 
NR_REQUEST
;

163 
ªq
 = 
ªque°
 + ((
NR_REQUEST
 * 2) / 3);

167 --
ªq
 >
ªque°
)

168 i‡(
ªq
->
dev
 < 0)

175 i‡(
ªq
 < 
ªque°
)

177 i‡(
rw_ahód
)

179 
	`u∆ock_buf„r
 (
bh
);

182 
	`¶ìp_⁄
 (&
waô_f‹_ªque°
);

183 
ª≥©
;

188 
ªq
->
dev
 = 
bh
->
b_dev
;

189 
ªq
->
cmd
 = 
rw
;

190 
ªq
->
îr‹s
 = 0;

191 
ªq
->
£˘‹
 = 
bh
->
b_blockƒ
 << 1;

192 
ªq
->
ƒ_£˘‹s
 = 2;

193 
ªq
->
buf„r
 = 
bh
->
b_d©a
;

194 
ªq
->
waôög
 = 
NULL
;

195 
ªq
->
bh
 = bh;

196 
ªq
->
√xt
 = 
NULL
;

197 
	`add_ªque°
 (
maj‹
 + 
blk_dev
, 
ªq
);

198 
	}
}

204 
	$Œ_rw_block
 (
rw
, 
buf„r_hód
 *
bh
)

206 
maj‹
;

209 i‡((
maj‹
 = 
	`MAJOR
 (
bh
->
b_dev
)Ë>
NR_BLK_DEV
 ||

210 !(
blk_dev
[
maj‹
].
ªque°_‚
))

212 
	`¥ötk
 ("TryingÅoÑeadÇonexistent block-device\n\r");

215 
	`make_ªque°
 (
maj‹
, 
rw
, 
bh
);

216 
	}
}

221 
	$blk_dev_öô
 ()

223 
i
;

225 
i
 = 0; i < 
NR_REQUEST
; i++)

227 
ªque°
[
i
].
dev
 = -1;

228 
ªque°
[
i
].
√xt
 = 
NULL
;

230 
	}
}

	@kernel/blk_drv/ramdisk.c

17 
	~<°rög.h
>

19 
	~<löux/c⁄fig.h
>

20 
	~<löux/sched.h
>

22 
	~<löux/fs.h
>

23 
	~<löux/kî√l.h
>

24 
	~<asm/sy°em.h
>

25 
	~<asm/£gmít.h
>

26 
	~<asm/mem‹y.h
>

28 
	#MAJOR_NR
 1

29 
	~"blk.h
"

	)

31 *
	grd_°¨t
;

33 
	grd_Àngth
 = 0;

37 
	$do_rd_ªque°
 ()

39 
Àn
;

40 *
addr
;

42 
INIT_REQUEST
;

45 
addr
 = 
rd_°¨t
 + (
CURRENT
->
£˘‹
 << 9);

46 
Àn
 = 
CURRENT
->
ƒ_£˘‹s
 << 9;

49 i‡((
	`MINOR
 (
CURRENT
->
dev
Ë!1Ë|| (
addr
 + 
Àn
 > 
rd_°¨t
 + 
rd_Àngth
))

51 
	`íd_ªque°
 (0);

52 
ª≥©
;

55 i‡(
CURRENT
->
cmd
 =
WRITE
)

57 (Ë
	`mem˝y
 (
addr
, 
CURRENT
->
buf„r
, 
Àn
);

60 i‡(
CURRENT
->
cmd
 =
READ
)

62 (Ë
	`mem˝y
 (
CURRENT
->
buf„r
, 
addr
, 
Àn
);

66 
	`∑nic
 ("unknownÑamdisk-command");

68 
	`íd_ªque°
 (1);

69 
ª≥©
;

70 
	}
}

78 
	$rd_öô
 (
mem_°¨t
, 
Àngth
)

80 
i
;

81 *
˝
;

83 
blk_dev
[
MAJOR_NR
].
ªque°_‚
 = 
DEVICE_REQUEST
;

84 
rd_°¨t
 = (*Ë
mem_°¨t
;

85 
rd_Àngth
 = 
Àngth
;

86 
˝
 = 
rd_°¨t
;

87 
i
 = 0; i < 
Àngth
; i++)

88 *
˝
++ = '\0';

89  (
Àngth
);

90 
	}
}

103 
	$rd_lﬂd
 ()

105 
buf„r_hód
 *
bh
;

106 
su≥r_block
 
s
;

107 
block
 = 256;

108 
i
 = 1;

109 
nblocks
;

110 *
˝
;

112 i‡(!
rd_Àngth
)

114 
	`¥ötk
 ("Ram disk: %d byãs, sèπögáà0x%x\n", 
rd_Àngth
, (Ë
rd_°¨t
);

115 i‡(
	`MAJOR
 (
ROOT_DEV
) != 2)

120 
bh
 = 
	`bªada
 (
ROOT_DEV
, 
block
 + 1, block, block + 2, -1);

121 i‡(!
bh
)

123 
	`¥ötk
 ("DiskÉrror whileÜooking forÑamdisk!\n");

127 *((
d_su≥r_block
 *Ë&
s
Ë*((d_su≥r_block *Ë
bh
->
b_d©a
);

128 
	`bªl£
 (
bh
);

129 i‡(
s
.
s_magic
 !
SUPER_MAGIC
)

136 
nblocks
 = 
s
.
s_nz⁄es
 << s.
s_log_z⁄e_size
;

137 i‡(
nblocks
 > (
rd_Àngth
 >> 
BLOCK_SIZE_BITS
))

139 
	`¥ötk
 ("Ram disk imageÅoo big! (%d blocks, %dávail)\n",

140 
nblocks
, 
rd_Àngth
 >> 
BLOCK_SIZE_BITS
);

143 
	`¥ötk
 ("Loading %d bytes intoÑam disk... 0000k",

144 
nblocks
 << 
BLOCK_SIZE_BITS
);

146 
˝
 = 
rd_°¨t
;

147 
nblocks
)

149 i‡(
nblocks
 > 2)

150 
bh
 = 
	`bªada
 (
ROOT_DEV
, 
block
, block + 1, block + 2, -1);

152 
bh
 = 
	`bªad
 (
ROOT_DEV
, 
block
);

153 i‡(!
bh
)

155 
	`¥ötk
 ("I/OÉº‹ o¿block %d,áb‹tögÜﬂd\n", 
block
);

158 (Ë
	`mem˝y
 (
˝
, 
bh
->
b_d©a
, 
BLOCK_SIZE
);

159 
	`bªl£
 (
bh
);

160 
	`¥ötk
 ("\010\010\010\010\010%4dk", 
i
);

161 
˝
 +
BLOCK_SIZE
;

162 
block
++;

163 
nblocks
--;

164 
i
++;

166 
	`¥ötk
 ("\010\010\010\010\010done \n");

167 
ROOT_DEV
 = 0x0101;

168 
	}
}

	@kernel/chr_drv/console.c

47 
	~<löux/sched.h
>

49 
	~<löux/ây.h
>

50 
	~<asm/io.h
>

51 
	~<asm/sy°em.h
>

61 
	#ORIG_X
 (*(*)0x90000)

62 
	#ORIG_Y
 (*(*)0x90001)

63 
	#ORIG_VIDEO_PAGE
 (*(*)0x90004)

64 
	#ORIG_VIDEO_MODE
 ((*(*)0x90006) & 0xff)

65 
	#ORIG_VIDEO_COLS
 (((*(*)0x90006) & 0xff00) >> 8)

66 
	#ORIG_VIDEO_LINES
 (25)

67 
	#ORIG_VIDEO_EGA_AX
 (*(*)0x90008)

68 
	#ORIG_VIDEO_EGA_BX
 (*(*)0x9000a)

69 
	#ORIG_VIDEO_EGA_CX
 (*(*)0x9000c)

70 

	)

72 
	#VIDEO_TYPE_MDA
 0x10

	)

73 
	#VIDEO_TYPE_CGA
 0x11

	)

74 
	#VIDEO_TYPE_EGAM
 0x20

	)

75 
	#VIDEO_TYPE_EGAC
 0x21

	)

77 
	#NPAR
 16

	)

79 
keybﬂrd_öãºu±
 ();

81 
	gvideo_ty≥
;

83 
	gvideo_num_cﬁumns
;

85 
	gvideo_size_row
;

87 
	gvideo_num_löes
;

89 
	gvideo_∑ge
;

91 
	gvideo_mem_°¨t
;

93 
	gvideo_mem_íd
;

95 
	gvideo_p‹t_ªg
;

97 
	gvideo_p‹t_vÆ
;

99 
	gvideo_îa£_ch¨
;

103 
	g‹igö
;

105 
	gs¸_íd
;

107 
	gpos
;

108 
	gx
, 
	gy
;

109 
	gt›
, 
	gbŸtom
;

111 
	g°©e
 = 0;

112 
	g≈¨
, 
	g∑r
[
NPAR
];

113 
	gques
 = 0;

114 
	g©å
 = 0x07;

116 
sysbìp
 ();

126 
	#RESPONSE
 "\033[?1;2c"

	)

133 
ölöe
 

134 
	$gŸoxy
 (
√w_x
, 
√w_y
)

137 i‡(
√w_x
 > 
video_num_cﬁumns
 || 
√w_y
 >
video_num_löes
)

140 
x
 = 
√w_x
;

141 
y
 = 
√w_y
;

142 
pos
 = 
‹igö
 + 
y
 * 
video_size_row
 + (
x
 << 1);

143 
	}
}

146 
ölöe
 

147 
	$£t_‹igö
 ()

149 
	`˛i
 ();

152 
	`outb_p
 (12, 
video_p‹t_ªg
);

153 
	`outb_p
 (0xf‡& ((
‹igö
 - 
video_mem_°¨t
Ë>> 9), 
video_p‹t_vÆ
);

155 
	`outb_p
 (13, 
video_p‹t_ªg
);

156 
	`outb_p
 (0xf‡& ((
‹igö
 - 
video_mem_°¨t
Ë>> 1), 
video_p‹t_vÆ
);

157 
	`°i
 ();

158 
	}
}

163 
	$s¸up
 ()

166 i‡(
video_ty≥
 =
VIDEO_TYPE_EGAC
 || video_ty≥ =
VIDEO_TYPE_EGAM
)

169 i‡(!
t›
 && 
bŸtom
 =
video_num_löes
)

173 
‹igö
 +
video_size_row
;

174 
pos
 +
video_size_row
;

175 
s¸_íd
 +
video_size_row
;

178 i‡(
s¸_íd
 > 
video_mem_íd
)

183 
	`__asm__
 ("cld\n\t"

188 "°osw"::"a" (
video_îa£_ch¨
), "c" ((
video_num_löes
 - 1Ë* 
video_num_cﬁumns
 >> 1), "D" (
video_mem_°¨t
), "S" (
‹igö
):"cx", "di",

192 
s¸_íd
 -
‹igö
 - 
video_mem_°¨t
;

193 
pos
 -
‹igö
 - 
video_mem_°¨t
;

194 
‹igö
 = 
video_mem_°¨t
;

201 
	`__asm__
 ("cld\n\t"

204 ::"a" (
video_îa£_ch¨
), "c" (
video_num_cﬁumns
), "D" (
s¸_íd
 - 
video_size_row
):"cx",

208 
	`£t_‹igö
 ();

217 
	`__asm__
 ("cld\n\t"

222 "°osw"::"a" (
video_îa£_ch¨
), "c" ((
bŸtom
 - 
t›
 - 1Ë* 
video_num_cﬁumns
 >> 1), "D" (
‹igö
 + 
video_size_row
 *Åop), "S" (origin + video_size_row * (top + 1)):"cx", "di",

231 
	`__asm__
 ("˛d\n\t" "ªp\n\t" "mov¶\n\t" "mov»_video_num_cﬁumns,%%ecx\n\t" "ªp\n\t" "°osw"::"a" (
video_îa£_ch¨
), "c" ((
bŸtom
 - 
t›
 - 1Ë* 
video_num_cﬁumns
 >> 1), "D" (
‹igö
 + 
video_size_row
 *Åop), "S" (origin + video_size_row * (top + 1)):"cx", "di",

234 
	}
}

241 
	$s¸down
 ()

245 i‡(
video_ty≥
 =
VIDEO_TYPE_EGAC
 || video_ty≥ =
VIDEO_TYPE_EGAM
)

250 
	`__asm__
 ("std\n\t"

257 "°osw"::"a" (
video_îa£_ch¨
), "c" ((
bŸtom
 - 
t›
 - 1Ë* 
video_num_cﬁumns
 >> 1), "D" (
‹igö
 + 
video_size_row
 * bottom - 4), "S" (origin + video_size_row * (bottom - 1) - 4):"ax", "cx", "di",

263 
	`__asm__
 ("std\n\t" "rep\n\t" "movsl\n\t" "addl $2,%%edi\n\t"

264 "mov»_video_num_cﬁumns,%%ecx\n\t" "ªp\n\t" "°osw"::"a" (
video_îa£_ch¨
), "c" ((
bŸtom
 - 
t›
 - 1Ë* 
video_num_cﬁumns
 >> 1), "D" (
‹igö
 + 
video_size_row
 * bottom - 4), "S" (origin + video_size_row * (bottom - 1) - 4):"ax", "cx", "di",

267 
	}
}

271 
	$lf
 ()

275 i‡(
y
 + 1 < 
bŸtom
)

277 
y
++;

278 
pos
 +
video_size_row
;

282 
	`s¸up
 ();

283 
	}
}

287 
	$ri
 ()

291 i‡(
y
 > 
t›
)

293 
y
--;

294 
pos
 -
video_size_row
;

298 
	`s¸down
 ();

299 
	}
}

303 
	$¸
 ()

306 
pos
 -
x
 << 1;

307 
x
 = 0;

308 
	}
}

312 
	$dñ
 ()

316 i‡(
x
)

318 
pos
 -= 2;

319 
x
--;

320 *(*Ë
pos
 = 
video_îa£_ch¨
;

322 
	}
}

329 
	$csi_J
 (
∑r
)

331 
cou¡
 
	`__asm__
 ("cx");

332 
°¨t
 
	`__asm__
 ("di");

335 
∑r
)

338 
cou¡
 = (
s¸_íd
 - 
pos
) >> 1;

339 
°¨t
 = 
pos
;

342 
cou¡
 = (
pos
 - 
‹igö
) >> 1;

343 
°¨t
 = 
‹igö
;

346 
cou¡
 = 
video_num_cﬁumns
 * 
video_num_löes
;

347 
°¨t
 = 
‹igö
;

354 
	`__asm__
 ("˛d\n\t" "ªp\n\t" "°osw\n\t"::"c" (
cou¡
), "D" (
°¨t
), "a" (
video_îa£_ch¨
):"cx", "di");

355 
	}
}

360 
	$csi_K
 (
∑r
)

362 
cou¡
 
	`__asm__
 ("cx");

363 
°¨t
 
	`__asm__
 ("di");

366 
∑r
)

369 i‡(
x
 >
video_num_cﬁumns
)

371 
cou¡
 = 
video_num_cﬁumns
 - 
x
;

372 
°¨t
 = 
pos
;

375 
°¨t
 = 
pos
 - (
x
 << 1);

376 
cou¡
 = (
x
 < 
video_num_cﬁumns
) ? x : video_num_columns;

379 
°¨t
 = 
pos
 - (
x
 << 1);

380 
cou¡
 = 
video_num_cﬁumns
;

387 
	`__asm__
 ("˛d\n\t" "ªp\n\t" "°osw\n\t"::"c" (
cou¡
), "D" (
°¨t
), "a" (
video_îa£_ch¨
):"cx", "di");

388 
	}
}

393 
	$csi_m
 ()

395 
i
;

397 
i
 = 0; i <
≈¨
; i++)

398 
∑r
[
i
])

401 
©å
 = 0x07;

404 
©å
 = 0x0f;

407 
©å
 = 0x0f;

410 
©å
 = 0x70;

413 
©å
 = 0x07;

416 
	}
}

420 
ölöe
 

421 
	$£t_curs‹
 ()

423 
	`˛i
 ();

426 
	`outb_p
 (14, 
video_p‹t_ªg
);

427 
	`outb_p
 (0xf‡& ((
pos
 - 
video_mem_°¨t
Ë>> 9), 
video_p‹t_vÆ
);

429 
	`outb_p
 (15, 
video_p‹t_ªg
);

430 
	`outb_p
 (0xf‡& ((
pos
 - 
video_mem_°¨t
Ë>> 1), 
video_p‹t_vÆ
);

431 
	`°i
 ();

432 
	}
}

437 
	$ª•⁄d
 (
ây_°ru˘
 *
ây
)

439 *
p
 = 
RESPONSE
;

441 
	`˛i
 ();

442 *
p
)

444 
	`PUTCH
 (*
p
, 
ây
->
ªad_q
);

445 
p
++;

447 
	`°i
 ();

448 
	`c›y_to_cooked
 (
ây
);

449 
	}
}

453 
	$ö£π_ch¨
 ()

455 
i
 = 
x
;

456 
tmp
, 
ﬁd
 = 
video_îa£_ch¨
;

457 *
p
 = (*Ë
pos
;

461 
i
++ < 
video_num_cﬁumns
)

463 
tmp
 = *
p
;

464 *
p
 = 
ﬁd
;

465 
ﬁd
 = 
tmp
;

466 
p
++;

468 
	}
}

473 
	$ö£π_löe
 ()

475 
ﬁdt›
, 
ﬁdbŸtom
;

477 
ﬁdt›
 = 
t›
;

478 
ﬁdbŸtom
 = 
bŸtom
;

479 
t›
 = 
y
;

480 
bŸtom
 = 
video_num_löes
;

481 
	`s¸down
 ();

482 
t›
 = 
ﬁdt›
;

483 
bŸtom
 = 
ﬁdbŸtom
;

484 
	}
}

488 
	$dñëe_ch¨
 ()

490 
i
;

491 *
p
 = (*Ë
pos
;

494 i‡(
x
 >
video_num_cﬁumns
)

497 
i
 = 
x
;

498 ++
i
 < 
video_num_cﬁumns
)

500 *
p
 = *(p + 1);

501 
p
++;

504 *
p
 = 
video_îa£_ch¨
;

505 
	}
}

510 
	$dñëe_löe
 ()

512 
ﬁdt›
, 
ﬁdbŸtom
;

514 
ﬁdt›
 = 
t›
;

515 
ﬁdbŸtom
 = 
bŸtom
;

516 
t›
 = 
y
;

517 
bŸtom
 = 
video_num_löes
;

518 
	`s¸up
 ();

519 
t›
 = 
ﬁdt›
;

520 
bŸtom
 = 
ﬁdbŸtom
;

521 
	}
}

527 
	$csi_©
 (
ƒ
)

530 i‡(
ƒ
 > 
video_num_cﬁumns
)

531 
ƒ
 = 
video_num_cﬁumns
;

532 i‡(!
ƒ
)

533 
ƒ
 = 1;

535 
ƒ
--)

536 
	`ö£π_ch¨
 ();

537 
	}
}

542 
	$csi_L
 (
ƒ
)

545 i‡(
ƒ
 > 
video_num_löes
)

546 
ƒ
 = 
video_num_löes
;

547 i‡(!
ƒ
)

548 
ƒ
 = 1;

550 
ƒ
--)

551 
	`ö£π_löe
 ();

552 
	}
}

557 
	$csi_P
 (
ƒ
)

560 i‡(
ƒ
 > 
video_num_cﬁumns
)

561 
ƒ
 = 
video_num_cﬁumns
;

562 i‡(!
ƒ
)

563 
ƒ
 = 1;

565 
ƒ
--)

566 
	`dñëe_ch¨
 ();

567 
	}
}

572 
	$csi_M
 (
ƒ
)

575 i‡(
ƒ
 > 
video_num_löes
)

576 
ƒ
 = 
video_num_löes
;

577 i‡(!
ƒ
)

578 
ƒ
 = 1;

580 
ƒ
--)

581 
	`dñëe_löe
 ();

582 
	}
}

584 
	gßved_x
 = 0;

585 
	gßved_y
 = 0;

589 
	$ßve_cur
 ()

591 
ßved_x
 = 
x
;

592 
ßved_y
 = 
y
;

593 
	}
}

597 
	$ª°‹e_cur
 ()

599 
	`gŸoxy
 (
ßved_x
, 
ßved_y
);

600 
	}
}

605 
	$c⁄_wrôe
 (
ây_°ru˘
 *
ây
)

607 
ƒ
;

608 
c
;

611 
ƒ
 = 
	`CHARS
 (
ây
->
wrôe_q
);

612 
ƒ
--)

620 
	`GETCH
 (
ây
->
wrôe_q
, 
c
);

621 
°©e
)

625 i‡(
c
 > 31 && c < 127)

628 i‡(
x
 >
video_num_cﬁumns
)

630 
x
 -
video_num_cﬁumns
;

631 
pos
 -
video_size_row
;

632 
	`lf
 ();

635 
	`__asm__
 ("movb _©å,%%ah\n\t" "movw %%ax,%1\n\t"::"a" (
c
), "m" (*(*Ë
pos
):"ax");

636 
pos
 += 2;

637 
x
++;

640 i‡(
c
 == 27)

641 
°©e
 = 1;

643 i‡(
c
 == 10 || c == 11 || c == 12)

644 
	`lf
 ();

646 i‡(
c
 == 13)

647 
	`¸
 ();

649 i‡(
c
 =
	`ERASE_CHAR
 (
ây
))

650 
	`dñ
 ();

652 i‡(
c
 == 8)

654 i‡(
x
)

656 
x
--;

657 
pos
 -= 2;

662 i‡(
c
 == 9)

664 
c
 = 8 - (
x
 & 7);

665 
x
 +
c
;

666 
pos
 +
c
 << 1;

667 i‡(
x
 > 
video_num_cﬁumns
)

669 
x
 -
video_num_cﬁumns
;

670 
pos
 -
video_size_row
;

671 
	`lf
 ();

673 
c
 = 9;

676 i‡(
c
 == 7)

677 
	`sysbìp
 ();

681 
°©e
 = 0;

683 i‡(
c
 == '[')

684 
°©e
 = 2;

686 i‡(
c
 == 'E')

687 
	`gŸoxy
 (0, 
y
 + 1);

689 i‡(
c
 == 'M')

690 
	`ri
 ();

692 i‡(
c
 == 'D')

693 
	`lf
 ();

695 i‡(
c
 == 'Z')

696 
	`ª•⁄d
 (
ây
);

698 i‡(
x
 == '7')

699 
	`ßve_cur
 ();

701 i‡(
x
 == '8')

702 
	`ª°‹e_cur
 ();

708 
≈¨
 = 0;Ç∑∏< 
NPAR
;Çpar++)

709 
∑r
[
≈¨
] = 0;

710 
≈¨
 = 0;

711 
°©e
 = 3;

712 i‡(
ques
 = (
c
 == '?'))

717 i‡(
c
 =';' && 
≈¨
 < 
NPAR
 - 1)

719 
≈¨
++;

723 i‡(
c
 >= '' && c <= '9')

725 
∑r
[
≈¨
] = 10 *Ö¨[≈¨] + 
c
 - '';

730 
°©e
 = 4;

733 
°©e
 = 0;

734 
c
)

739 i‡(
∑r
[0])

740 
∑r
[0]--;

741 
	`gŸoxy
 (
∑r
[0], 
y
);

745 i‡(!
∑r
[0])

746 
∑r
[0]++;

747 
	`gŸoxy
 (
x
, 
y
 - 
∑r
[0]);

752 i‡(!
∑r
[0])

753 
∑r
[0]++;

754 
	`gŸoxy
 (
x
, 
y
 + 
∑r
[0]);

759 i‡(!
∑r
[0])

760 
∑r
[0]++;

761 
	`gŸoxy
 (
x
 + 
∑r
[0], 
y
);

765 i‡(!
∑r
[0])

766 
∑r
[0]++;

767 
	`gŸoxy
 (
x
 - 
∑r
[0], 
y
);

771 i‡(!
∑r
[0])

772 
∑r
[0]++;

773 
	`gŸoxy
 (0, 
y
 + 
∑r
[0]);

777 i‡(!
∑r
[0])

778 
∑r
[0]++;

779 
	`gŸoxy
 (0, 
y
 - 
∑r
[0]);

783 i‡(
∑r
[0])

784 
∑r
[0]--;

785 
	`gŸoxy
 (
x
, 
∑r
[0]);

790 i‡(
∑r
[0])

791 
∑r
[0]--;

792 i‡(
∑r
[1])

793 
∑r
[1]--;

794 
	`gŸoxy
 (
∑r
[1],Öar[0]);

799 
	`csi_J
 (
∑r
[0]);

804 
	`csi_K
 (
∑r
[0]);

808 
	`csi_L
 (
∑r
[0]);

812 
	`csi_M
 (
∑r
[0]);

816 
	`csi_P
 (
∑r
[0]);

820 
	`csi_©
 (
∑r
[0]);

825 
	`csi_m
 ();

829 i‡(
∑r
[0])

830 
∑r
[0]--;

831 i‡(!
∑r
[1])

832 
∑r
[1] = 
video_num_löes
;

833 i‡(
∑r
[0] <Ö¨[1] &&Ö¨[1] <
video_num_löes
)

835 
t›
 = 
∑r
[0];

836 
bŸtom
 = 
∑r
[1];

841 
	`ßve_cur
 ();

845 
	`ª°‹e_cur
 ();

851 
	`£t_curs‹
 ();

852 
	}
}

872 
	$c⁄_öô
 ()

874 
a
;

875 *
di•œy_desc
 = "????";

876 *
di•œy_±r
;

878 
video_num_cﬁumns
 = 
ORIG_VIDEO_COLS
;

879 
video_size_row
 = 
video_num_cﬁumns
 * 2;

880 
video_num_löes
 = 
ORIG_VIDEO_LINES
;

881 
video_∑ge
 = 
ORIG_VIDEO_PAGE
;

882 
video_îa£_ch¨
 = 0x0720;

885 i‡(
ORIG_VIDEO_MODE
 == 7)

887 
video_mem_°¨t
 = 0xb0000;

888 
video_p‹t_ªg
 = 0x3b4;

889 
video_p‹t_vÆ
 = 0x3b5;

894 i‡((
ORIG_VIDEO_EGA_BX
 & 0xff) != 0x10)

896 
video_ty≥
 = 
VIDEO_TYPE_EGAM
;

897 
video_mem_íd
 = 0xb8000;

898 
di•œy_desc
 = "EGAm";

903 
video_ty≥
 = 
VIDEO_TYPE_MDA
;

904 
video_mem_íd
 = 0xb2000;

905 
di•œy_desc
 = "*MDA";

912 
video_mem_°¨t
 = 0xb8000;

913 
video_p‹t_ªg
 = 0x3d4;

914 
video_p‹t_vÆ
 = 0x3d5;

916 i‡((
ORIG_VIDEO_EGA_BX
 & 0xff) != 0x10)

918 
video_ty≥
 = 
VIDEO_TYPE_EGAC
;

919 
video_mem_íd
 = 0xbc000;

920 
di•œy_desc
 = "EGAc";

925 
video_ty≥
 = 
VIDEO_TYPE_CGA
;

926 
video_mem_íd
 = 0xba000;

927 
di•œy_desc
 = "*CGA";

936 
di•œy_±r
 = ((*Ë
video_mem_°¨t
Ë+ 
video_size_row
 - 8;

938 *
di•œy_desc
)

940 *
di•œy_±r
++ = *
di•œy_desc
++;

941 
di•œy_±r
++;

947 
‹igö
 = 
video_mem_°¨t
;

948 
s¸_íd
 = 
video_mem_°¨t
 + 
video_num_löes
 * 
video_size_row
;

949 
t›
 = 0;

950 
bŸtom
 = 
video_num_löes
;

952 
	`gŸoxy
 (
ORIG_X
, 
ORIG_Y
);

953 
	`£t_å≠_g©e
 (0x21, &
keybﬂrd_öãºu±
);

954 
	`outb_p
 (
	`öb_p
 (0x21) & 0xfd, 0x21);

955 
a
 = 
	`öb_p
 (0x61);

956 
	`outb_p
 (
a
 | 0x80, 0x61);

957 
	`outb
 (
a
, 0x61);

958 
	}
}

965 
	$sysbìp°›
 ()

968 
	`outb
 (
	`öb_p
 (0x61) & 0xFC, 0x61);

969 
	}
}

971 
	gbìpcou¡
 = 0;

978 
	$sysbìp
 ()

981 
	`outb_p
 (
	`öb_p
 (0x61) | 3, 0x61);

983 
	`outb_p
 (0xB6, 0x43);

985 
	`outb_p
 (0x37, 0x42);

986 
	`outb
 (0x06, 0x42);

988 
bìpcou¡
 = 
HZ
 / 8;

989 
	}
}

	@kernel/chr_drv/serial.c

23 
	~<löux/ây.h
>

24 
	~<löux/sched.h
>

26 
	~<asm/sy°em.h
>

27 
	~<asm/io.h
>

29 
	#WAKEUP_CHARS
 (
TTY_BUF_SIZE
/4)

30 

	)

31 
rs1_öãºu±
 ();

32 
rs2_öãºu±
 ();

37 
	$öô
 (
p‹t
)

39 
	`outb_p
 (0x80, 
p‹t
 + 3);

41 
	`outb_p
 (0x30, 
p‹t
);

43 
	`outb_p
 (0x00, 
p‹t
 + 1);

45 
	`outb_p
 (0x03, 
p‹t
 + 3);

47 
	`outb_p
 (0x0b, 
p‹t
 + 4);

49 
	`outb_p
 (0x0d, 
p‹t
 + 1);

51 (Ë
	`öb
 (
p‹t
);

53 
	}
}

57 
	$rs_öô
 ()

59 
	`£t_öå_g©e
 (0x24, 
rs1_öãºu±
);

60 
	`£t_öå_g©e
 (0x23, 
rs2_öãºu±
);

61 
	`öô
 (
ây_èbÀ
[1].
ªad_q
.
d©a
);

62 
	`öô
 (
ây_èbÀ
[2].
ªad_q
.
d©a
);

63 
	`outb
 (
	`öb_p
 (0x21) & 0xE7, 0x21);

64 
	}
}

80 
	$rs_wrôe
 (
ây_°ru˘
 *
ây
)

82 
	`˛i
 ();

85 i‡(!
	`EMPTY
 (
ây
->
wrôe_q
))

86 
	`outb
 (
	`öb_p
 (
ây
->
wrôe_q
.
d©a
 + 1) | 0x02,Åty->write_q.data + 1);

87 
	`°i
 ();

88 
	}
}

	@kernel/chr_drv/tty_io.c

19 
	~<˘y≥.h
>

20 
	~<î∫o.h
>

21 
	~<sig«l.h
>

24 
	#ALRMMASK
 (1<<(
SIGALRM
-1))

25 
	#KILLMASK
 (1<<(
SIGKILL
-1))

26 
	#INTMASK
 (1<<(
SIGINT
-1))

27 
	#QUITMASK
 (1<<(
SIGQUIT
-1))

28 
	#TSTPMASK
 (1<<(
SIGTSTP
-1))

29 

	)

30 
	~<löux/sched.h
>

32 
	~<löux/ây.h
>

33 
	~<asm/£gmít.h
>

34 
	~<asm/sy°em.h
>

36 
	#_L_FLAG
(
ây
,
f
Ë(—ty)->
ãrmios
.
c_lÊag
 & f)

37 
	#_I_FLAG
(
ây
,
f
Ë(—ty)->
ãrmios
.
c_iÊag
 & f)

38 
	#_O_FLAG
(
ây
,
f
Ë(—ty)->
ãrmios
.
c_oÊag
 & f)

39 

	)

41 
	#L_CANON
(
ây
Ë
	`_L_FLAG
(—ty),
ICANON
)

42 
	#L_ISIG
(
ây
Ë
	`_L_FLAG
(—ty),
ISIG
)

43 
	#L_ECHO
(
ây
Ë
	`_L_FLAG
(—ty),
ECHO
)

44 
	#L_ECHOE
(
ây
Ë
	`_L_FLAG
(—ty),
ECHOE
)

45 
	#L_ECHOK
(
ây
Ë
	`_L_FLAG
(—ty),
ECHOK
)

46 
	#L_ECHOCTL
(
ây
Ë
	`_L_FLAG
(—ty),
ECHOCTL
)

47 
	#L_ECHOKE
(
ây
Ë
	`_L_FLAG
(—ty),
ECHOKE
)

48 

	)

50 
	#I_UCLC
(
ây
Ë
	`_I_FLAG
(—ty),
IUCLC
)

51 
	#I_NLCR
(
ây
Ë
	`_I_FLAG
(—ty),
INLCR
)

52 
	#I_CRNL
(
ây
Ë
	`_I_FLAG
(—ty),
ICRNL
)

53 
	#I_NOCR
(
ây
Ë
	`_I_FLAG
(—ty),
IGNCR
)

54 

	)

56 
	#O_POST
(
ây
Ë
	`_O_FLAG
(—ty),
OPOST
)

57 
	#O_NLCR
(
ây
Ë
	`_O_FLAG
(—ty),
ONLCR
)

58 
	#O_CRNL
(
ây
Ë
	`_O_FLAG
(—ty),
OCRNL
)

59 
	#O_NLRET
(
ây
Ë
	`_O_FLAG
(—ty),
ONLRET
)

60 
	#O_LCUC
(
ây
Ë
	`_O_FLAG
(—ty),
OLCUC
)

61 

	)

64 
ây_°ru˘
 
	gây_èbÀ
[] = {

66 {
ICRNL
,

67 
OPOST
 | 
ONLCR
,

69 
ISIG
 | 
ICANON
 | 
ECHO
 | 
ECHOCTL
 | 
ECHOKE
,

71 
INIT_C_CC
},

74 
c⁄_wrôe
,

81 
B2400
 | 
CS8
,

84 
INIT_C_CC
},

87 
rs_wrôe
,

94 
B2400
 | 
CS8
,

97 
INIT_C_CC
},

100 
rs_wrôe
,

117 
ây_queue
 *
	gèbÀ_li°
[] = {

118 &
ây_èbÀ
[0].
ªad_q
, &ây_èbÀ[0].
wrôe_q
,

119 &
ây_èbÀ
[1].
ªad_q
, &ây_èbÀ[1].
wrôe_q
,

120 &
ây_èbÀ
[2].
ªad_q
, &ây_èbÀ[2].
wrôe_q


126 
	$ây_öô
 ()

128 
	`rs_öô
 ();

129 
	`c⁄_öô
 ();

130 
	}
}

135 
	$ây_öå
 (
ây_°ru˘
 *
ây
, 
mask
)

137 
i
;

140 i‡(
ây
->
pgΩ
 <= 0)

143 
i
 = 0; i < 
NR_TASKS
; i++)

145 i‡(
èsk
[
i
] &&Åask[i]->
pgΩ
 =
ây
->pgrp)

146 
èsk
[
i
]->
sig«l
 |
mask
;

147 
	}
}

153 
	$¶ìp_if_em±y
 (
ây_queue
 *
queue
)

155 
	`˛i
 ();

158 !
cuºít
->
sig«l
 && 
	`EMPTY
 (*
queue
))

159 
	`öãºu±ibÀ_¶ìp_⁄
 (&
queue
->
¥oc_li°
);

160 
	`°i
 ();

161 
	}
}

167 
	$¶ìp_if_fuŒ
 (
ây_queue
 *
queue
)

170 i‡(!
	`FULL
 (*
queue
))

172 
	`˛i
 ();

175 !
cuºít
->
sig«l
 && 
	`LEFT
 (*
queue
) < 128)

176 
	`öãºu±ibÀ_¶ìp_⁄
 (&
queue
->
¥oc_li°
);

177 
	`°i
 ();

178 
	}
}

183 
	$waô_f‹_key¥ess
 ()

185 
	`¶ìp_if_em±y
 (&
ây_èbÀ
[0].
£c⁄d¨y
);

186 
	}
}

192 
	$c›y_to_cooked
 (
ây_°ru˘
 *
ây
)

194 sig√d 
c
;

197 !
	`EMPTY
 (
ây
->
ªad_q
Ë&& !
	`FULL
 (ây->
£c⁄d¨y
))

200 
	`GETCH
 (
ây
->
ªad_q
, 
c
);

204 i‡(
c
 == 13)

205 i‡(
	`I_CRNL
 (
ây
))

206 
c
 = 10;

207 i‡(
	`I_NOCR
 (
ây
))

211 i‡(
c
 =10 && 
	`I_NLCR
 (
ây
))

212 
c
 = 13;

214 i‡(
	`I_UCLC
 (
ây
))

215 
c
 = 
	`tﬁowî
 (c);

217 i‡(
	`L_CANON
 (
ây
))

220 i‡(
c
 =
	`KILL_CHAR
 (
ây
))

225 !(
	`EMPTY
 (
ây
->
£c⁄d¨y
) ||

226 (
c
 = 
	`LAST
 (
ây
->
£c⁄d¨y
)) == 10 ||

227 
c
 =
	`EOF_CHAR
 (
ây
)))

231 i‡(
	`L_ECHO
 (
ây
))

233 i‡(
c
 < 32)

234 
	`PUTCH
 (127, 
ây
->
wrôe_q
);

235 
	`PUTCH
 (127, 
ây
->
wrôe_q
);

236 
ây
->
	`wrôe
 (tty);

239 
	`DEC
 (
ây
->
£c⁄d¨y
.
hód
);

244 i‡(
c
 =
	`ERASE_CHAR
 (
ây
))

248 i‡(
	`EMPTY
 (
ây
->
£c⁄d¨y
) ||

249 (
c
 = 
	`LAST
 (
ây
->
£c⁄d¨y
)Ë=10 || c =
	`EOF_CHAR
 (tty))

253 i‡(
	`L_ECHO
 (
ây
))

255 i‡(
c
 < 32)

256 
	`PUTCH
 (127, 
ây
->
wrôe_q
);

257 
	`PUTCH
 (127, 
ây
->
wrôe_q
);

258 
ây
->
	`wrôe
 (tty);

261 
	`DEC
 (
ây
->
£c⁄d¨y
.
hód
);

265 i‡(
c
 =
	`STOP_CHAR
 (
ây
))

267 
ây
->
°›≥d
 = 1;

271 i‡(
c
 =
	`START_CHAR
 (
ây
))

273 
ây
->
°›≥d
 = 0;

279 i‡(
	`L_ISIG
 (
ây
))

282 i‡(
c
 =
	`INTR_CHAR
 (
ây
))

284 
	`ây_öå
 (
ây
, 
INTMASK
);

288 i‡(
c
 =
	`QUIT_CHAR
 (
ây
))

290 
	`ây_öå
 (
ây
, 
QUITMASK
);

295 i‡(
c
 =10 || c =
	`EOF_CHAR
 (
ây
))

296 
ây
->
£c⁄d¨y
.
d©a
++;

301 i‡(
	`L_ECHO
 (
ây
))

303 i‡(
c
 == 10)

305 
	`PUTCH
 (10, 
ây
->
wrôe_q
);

306 
	`PUTCH
 (13, 
ây
->
wrôe_q
);

308 i‡(
c
 < 32)

310 i‡(
	`L_ECHOCTL
 (
ây
))

312 
	`PUTCH
 ('^', 
ây
->
wrôe_q
);

313 
	`PUTCH
 (
c
 + 64, 
ây
->
wrôe_q
);

317 
	`PUTCH
 (
c
, 
ây
->
wrôe_q
);

318 
ây
->
	`wrôe
 (tty);

321 
	`PUTCH
 (
c
, 
ây
->
£c⁄d¨y
);

324 
	`wake_up
 (&
ây
->
£c⁄d¨y
.
¥oc_li°
);

325 
	}
}

331 
	$ây_ªad
 (
ch™√l
, *
buf
, 
ƒ
)

333 
ây_°ru˘
 *
ây
;

334 
c
, *
b
 = 
buf
;

335 
möimum
, 
time
, 
Êag
 = 0;

336 
ﬁdÆ¨m
;

340 i‡(
ch™√l
 > 2 || 
ƒ
 < 0)

343 
ây
 = &
ây_èbÀ
[
ch™√l
];

348 
ﬁdÆ¨m
 = 
cuºít
->
Æ¨m
;

350 
time
 = 10L * 
ây
->
ãrmios
.
c_cc
[
VTIME
];

351 
möimum
 = 
ây
->
ãrmios
.
c_cc
[
VMIN
];

354 i‡(
time
 && !
möimum
)

356 
möimum
 = 1;

359 i‡(
Êag
 = (!
ﬁdÆ¨m
 || 
time
 + 
jiffõs
 < oldalarm))

360 
cuºít
->
Æ¨m
 = 
time
 + 
jiffõs
;

363 i‡(
möimum
 > 
ƒ
)

364 
möimum
 = 
ƒ
;

366 
ƒ
 > 0)

370 i‡(
Êag
 && (
cuºít
->
sig«l
 & 
ALRMMASK
))

372 
cuºít
->
sig«l
 &~
ALRMMASK
;

376 i‡(
cuºít
->
sig«l
)

380 i‡(
	`EMPTY
 (
ây
->
£c⁄d¨y
Ë|| (
	`L_CANON
 (tty) &&

381 !
ây
->
£c⁄d¨y
.
d©a


382 && 
	`LEFT
 (
ây
->
£c⁄d¨y
) > 20))

384 
	`¶ìp_if_em±y
 (&
ây
->
£c⁄d¨y
);

391 
	`GETCH
 (
ây
->
£c⁄d¨y
, 
c
);

393 i‡(
c
 =
	`EOF_CHAR
 (
ây
) || c == 10)

394 
ây
->
£c⁄d¨y
.
d©a
--;

396 i‡(
c
 =
	`EOF_CHAR
 (
ây
Ë&& 
	`L_CANON
 (tty))

397  (
b
 - 
buf
);

401 
	`put_fs_byã
 (
c
, 
b
++);

402 i‡(!--
ƒ
)

406 
ƒ
 > 0 && !
	`EMPTY
 (
ây
->
£c⁄d¨y
));

408 i‡(
time
 && !
	`L_CANON
 (
ây
))

411 i‡(
Êag
 = (!
ﬁdÆ¨m
 || 
time
 + 
jiffõs
 < oldalarm))

412 
cuºít
->
Æ¨m
 = 
time
 + 
jiffõs
;

414 
cuºít
->
Æ¨m
 = 
ﬁdÆ¨m
;

417 i‡(
	`L_CANON
 (
ây
))

419 i‡(
b
 - 
buf
)

422 i‡(
b
 - 
buf
 >
möimum
)

426 
cuºít
->
Æ¨m
 = 
ﬁdÆ¨m
;

428 i‡(
cuºít
->
sig«l
 && !(
b
 - 
buf
))

429  -
EINTR
;

430  (
b
 - 
buf
);

431 
	}
}

437 
	$ây_wrôe
 (
ch™√l
, *
buf
, 
ƒ
)

439 
¸_Êag
 = 0;

440 
ây_°ru˘
 *
ây
;

441 
c
, *
b
 = 
buf
;

445 i‡(
ch™√l
 > 2 || 
ƒ
 < 0)

448 
ây
 = 
ch™√l
 + 
ây_èbÀ
;

450 
ƒ
 > 0)

453 
	`¶ìp_if_fuŒ
 (&
ây
->
wrôe_q
);

455 i‡(
cuºít
->
sig«l
)

458 
ƒ
 > 0 && !
	`FULL
 (
ây
->
wrôe_q
))

461 
c
 = 
	`gë_fs_byã
 (
b
);

463 i‡(
	`O_POST
 (
ây
))

468 i‡(
c
 ='\r' && 
	`O_CRNL
 (
ây
))

469 
c
 = '\n';

470 i‡(
c
 ='\n' && 
	`O_NLRET
 (
ây
))

471 
c
 = '\r';

474 i‡(
c
 ='\n' && !
¸_Êag
 && 
	`O_NLCR
 (
ây
))

476 
¸_Êag
 = 1;

477 
	`PUTCH
 (13, 
ây
->
wrôe_q
);

481 i‡(
	`O_LCUC
 (
ây
))

482 
c
 = 
	`touµî
 (c);

486 
b
++;

487 
ƒ
--;

488 
¸_Êag
 = 0;

489 
	`PUTCH
 (
c
, 
ây
->
wrôe_q
);

493 
ây
->
	`wrôe
 (tty);

494 i‡(
ƒ
 > 0)

495 
	`scheduÀ
 ();

497  (
b
 - 
buf
);

498 
	}
}

527 
	$do_ây_öãºu±
 (
ây
)

529 
	`c›y_to_cooked
 (
ây_èbÀ
 + 
ây
);

530 
	}
}

534 
	$chr_dev_öô
 ()

536 
	}
}

	@kernel/chr_drv/tty_ioctl.c

7 
	~<î∫o.h
>

8 
	~<ãrmios.h
>

10 
	~<löux/sched.h
>

12 
	~<löux/kî√l.h
>

13 
	~<löux/ây.h
>

15 
	~<asm/io.h
>

16 
	~<asm/£gmít.h
>

17 
	~<asm/sy°em.h
>

20 
	gquŸõ¡
[] = {

31 
	$ch™ge_•ìd
 (
ây_°ru˘
 *
ây
)

33 
p‹t
, 
quŸ
;

36 i‡(!(
p‹t
 = 
ây
->
ªad_q
.
d©a
))

40 
quŸ
 = 
quŸõ¡
[
ây
->
ãrmios
.
c_cÊag
 & 
CBAUD
];

41 
	`˛i
 ();

42 
	`outb_p
 (0x80, 
p‹t
 + 3);

43 
	`outb_p
 (
quŸ
 & 0xff, 
p‹t
);

44 
	`outb_p
 (
quŸ
 >> 8, 
p‹t
 + 1);

45 
	`outb
 (0x03, 
p‹t
 + 3);

46 
	`°i
 ();

47 
	}
}

53 
	$Êush
 (
ây_queue
 *
queue
)

55 
	`˛i
 ();

56 
queue
->
hód
 = queue->
èû
;

57 
	`°i
 ();

58 
	}
}

62 
	$waô_u¡û_£¡
 (
ây_°ru˘
 *
ây
)

65 
	}
}

69 
	$£nd_bªak
 (
ây_°ru˘
 *
ây
)

72 
	}
}

78 
	$gë_ãrmios
 (
ây_°ru˘
 *
ây
, 
ãrmios
 *termios)

80 
i
;

83 
	`vîify_¨ó
 (
ãrmios
,  (*termios));

85 
i
 = 0; i < ( (*
ãrmios
)); i++)

86 
	`put_fs_byã
 (((*Ë&
ây
->
ãrmios
)[
i
], i + (*)Åermios);

88 
	}
}

94 
	$£t_ãrmios
 (
ây_°ru˘
 *
ây
, 
ãrmios
 *termios)

96 
i
;

99 
i
 = 0; i < ( (*
ãrmios
)); i++)

100 ((*Ë&
ây
->
ãrmios
)[
i
] = 
	`gë_fs_byã
 (i + (*)Åermios);

103 
	`ch™ge_•ìd
 (
ây
);

105 
	}
}

111 
	$gë_ãrmio
 (
ây_°ru˘
 *
ây
, 
ãrmio
 *termio)

113 
i
;

114 
ãrmio
 
tmp_ãrmio
;

117 
	`vîify_¨ó
 (
ãrmio
,  (*termio));

120 
tmp_ãrmio
.
c_iÊag
 = 
ây
->
ãrmios
.c_iflag;

121 
tmp_ãrmio
.
c_oÊag
 = 
ây
->
ãrmios
.c_oflag;

122 
tmp_ãrmio
.
c_cÊag
 = 
ây
->
ãrmios
.c_cflag;

123 
tmp_ãrmio
.
c_lÊag
 = 
ây
->
ãrmios
.c_lflag;

125 
tmp_ãrmio
.
c_löe
 = 
ây
->
ãrmios
.c_line;

126 
i
 = 0; i < 
NCC
; i++)

127 
tmp_ãrmio
.
c_cc
[
i
] = 
ây
->
ãrmios
.c_cc[i];

129 
i
 = 0; i < ( (*
ãrmio
)); i++)

130 
	`put_fs_byã
 (((*Ë&
tmp_ãrmio
)[
i
], i + (*Ë
ãrmio
);

132 
	}
}

144 
	$£t_ãrmio
 (
ây_°ru˘
 *
ây
, 
ãrmio
 *termio)

146 
i
;

147 
ãrmio
 
tmp_ãrmio
;

150 
i
 = 0; i < ( (*
ãrmio
)); i++)

151 ((*Ë&
tmp_ãrmio
)[
i
] = 
	`gë_fs_byã
 (ò+ (*Ë
ãrmio
);

154 *(*Ë&
ây
->
ãrmios
.
c_iÊag
 = 
tmp_ãrmio
.c_iflag;

155 *(*Ë&
ây
->
ãrmios
.
c_oÊag
 = 
tmp_ãrmio
.c_oflag;

156 *(*Ë&
ây
->
ãrmios
.
c_cÊag
 = 
tmp_ãrmio
.c_cflag;

157 *(*Ë&
ây
->
ãrmios
.
c_lÊag
 = 
tmp_ãrmio
.c_lflag;

159 
ây
->
ãrmios
.
c_löe
 = 
tmp_ãrmio
.c_line;

160 
i
 = 0; i < 
NCC
; i++)

161 
ây
->
ãrmios
.
c_cc
[
i
] = 
tmp_ãrmio
.c_cc[i];

164 
	`ch™ge_•ìd
 (
ây
);

166 
	}
}

171 
	$ây_io˘l
 (
dev
, 
cmd
, 
¨g
)

173 
ây_°ru˘
 *
ây
;

176 i‡(
	`MAJOR
 (
dev
) == 5)

178 
dev
 = 
cuºít
->
ây
;

179 i‡(
dev
 < 0)

180 
	`∑nic
 ("tty_ioctl: dev<0");

184 
dev
 = 
	`MINOR
 (dev);

187 
ây
 = 
dev
 + 
ây_èbÀ
;

189 
cmd
)

191 
TCGETS
:

193  
	`gë_ãrmios
 (
ây
, (
ãrmios
 *Ë
¨g
);

194 
TCSETSF
:

197 
	`Êush
 (&
ây
->
ªad_q
);

198 
TCSETSW
:

201 
	`waô_u¡û_£¡
 (
ây
);

202 
TCSETS
:

204  
	`£t_ãrmios
 (
ây
, (
ãrmios
 *Ë
¨g
);

205 
TCGETA
:

207  
	`gë_ãrmio
 (
ây
, (
ãrmio
 *Ë
¨g
);

208 
TCSETAF
:

211 
	`Êush
 (&
ây
->
ªad_q
);

212 
TCSETAW
:

215 
	`waô_u¡û_£¡
 (
ây
);

216 
TCSETA
:

218  
	`£t_ãrmio
 (
ây
, (
ãrmio
 *Ë
¨g
);

219 
TCSBRK
:

221 i‡(!
¨g
)

223 
	`waô_u¡û_£¡
 (
ây
);

224 
	`£nd_bªak
 (
ây
);

227 
TCXONC
:

230  -
EINVAL
;

231 
TCFLSH
:

234 i‡(
¨g
 == 0)

235 
	`Êush
 (&
ây
->
ªad_q
);

236 i‡(
¨g
 == 1)

237 
	`Êush
 (&
ây
->
wrôe_q
);

238 i‡(
¨g
 == 2)

240 
	`Êush
 (&
ây
->
ªad_q
);

241 
	`Êush
 (&
ây
->
wrôe_q
);

244  -
EINVAL
;

246 
TIOCEXCL
:

248  -
EINVAL
;

249 
TIOCNXCL
:

251  -
EINVAL
;

252 
TIOCSCTTY
:

254  -
EINVAL
;

255 
TIOCGPGRP
:

257 
	`vîify_¨ó
 ((*Ë
¨g
, 4);

258 
	`put_fs_l⁄g
 (
ây
->
pgΩ
, (*Ë
¨g
);

260 
TIOCSPGRP
:

262 
ây
->
pgΩ
 = 
	`gë_fs_l⁄g
 ((*Ë
¨g
);

264 
TIOCOUTQ
:

266 
	`vîify_¨ó
 ((*Ë
¨g
, 4);

267 
	`put_fs_l⁄g
 (
	`CHARS
 (
ây
->
wrôe_q
), (*Ë
¨g
);

269 
TIOCINQ
:

271 
	`vîify_¨ó
 ((*Ë
¨g
, 4);

272 
	`put_fs_l⁄g
 (
	`CHARS
 (
ây
->
£c⁄d¨y
), (*Ë
¨g
);

274 
TIOCSTI
:

277  -
EINVAL
;

278 
TIOCGWINSZ
:

280  -
EINVAL
;

281 
TIOCSWINSZ
:

283  -
EINVAL
;

284 
TIOCMGET
:

286  -
EINVAL
;

287 
TIOCMBIS
:

289  -
EINVAL
;

290 
TIOCMBIC
:

292  -
EINVAL
;

293 
TIOCMSET
:

295  -
EINVAL
;

296 
TIOCGSOFTCAR
:

298  -
EINVAL
;

299 
TIOCSSOFTCAR
:

301  -
EINVAL
;

303  -
EINVAL
;

305 
	}
}

	@kernel/exit.c

7 
	~<î∫o.h
>

8 
	~<sig«l.h
>

9 
	~<sys/waô.h
>

11 
	~<löux/sched.h
>

13 
	~<löux/kî√l.h
>

14 
	~<löux/ây.h
>

15 
	~<asm/£gmít.h
>

17 
sys_∑u£
 ();

18 
sys_˛o£
 (
fd
);

22 
	$ªÀa£
 (
èsk_°ru˘
 *
p
)

24 
i
;

26 i‡(!
p
)

28 
i
 = 1; i < 
NR_TASKS
; i++)

29 i‡(
èsk
[
i
] =
p
)

31 
èsk
[
i
] = 
NULL
;

32 
	`‰ì_∑ge
 ((Ë
p
);

33 
	`scheduÀ
 ();

36 
	`∑nic
 ("tryingÅoÑeleaseÇon-existentÅask");

37 
	}
}

40 
ölöe
 

41 
	$£nd_sig
 (
sig
, 
èsk_°ru˘
 *
p
, 
¥iv
)

44 i‡(!
p
 || 
sig
 < 1 || sig > 32)

45  -
EINVAL
;

48 i‡(
¥iv
 || (
cuºít
->
euid
 =
p
->euidË|| 
	`su£r
 ())

49 
p
->
sig«l
 |(1 << (
sig
 - 1));

51  -
EPERM
;

53 
	}
}

57 
	$kûl_£ssi⁄
 ()

59 
èsk_°ru˘
 **
p
 = 
NR_TASKS
 + 
èsk
;

62 --
p
 > &
FIRST_TASK
)

64 i‡(*
p
 && (*p)->
£ssi⁄
 =
cuºít
->session)

65 (*
p
)->
sig«l
 |1 << (
SIGHUP
 - 1);

67 
	}
}

83 
	$sys_kûl
 (
pid
, 
sig
)

85 
èsk_°ru˘
 **
p
 = 
NR_TASKS
 + 
èsk
;

86 
îr
, 
ªtvÆ
 = 0;

88 i‡(!
pid
)

89 --
p
 > &
FIRST_TASK
)

91 i‡(*
p
 && (*p)->
pgΩ
 =
cuºít
->
pid
)

92 i‡(
îr
 = 
	`£nd_sig
 (
sig
, *
p
, 1))

93 
ªtvÆ
 = 
îr
;

95 i‡(
pid
 > 0)

96 --
p
 > &
FIRST_TASK
)

98 i‡(*
p
 && (*p)->
pid
 ==Öid)

99 i‡(
îr
 = 
	`£nd_sig
 (
sig
, *
p
, 0))

100 
ªtvÆ
 = 
îr
;

102 i‡(
pid
 == -1)

103 --
p
 > &
FIRST_TASK
)

104 i‡(
îr
 = 
	`£nd_sig
 (
sig
, *
p
, 0))

105 
ªtvÆ
 = 
îr
;

107 --
p
 > &
FIRST_TASK
)

108 i‡(*
p
 && (*p)->
pgΩ
 =-
pid
)

109 i‡(
îr
 = 
	`£nd_sig
 (
sig
, *
p
, 0))

110 
ªtvÆ
 = 
îr
;

111  
ªtvÆ
;

112 
	}
}

117 
	$ãŒ_Áthî
 (
pid
)

119 
i
;

121 i‡(
pid
)

122 
i
 = 0; i < 
NR_TASKS
; i++)

124 i‡(!
èsk
[
i
])

126 i‡(
èsk
[
i
]->
pid
 !=Öid)

128 
èsk
[
i
]->
sig«l
 |(1 << (
SIGCHLD
 - 1));

133 
	`¥ötk
 ("BAD BAD -Ço father found\n\r");

134 
	`ªÀa£
 (
cuºít
);

135 
	}
}

139 
	$do_exô
 (
code
)

141 
i
;

144 
	`‰ì_∑ge_èbÀs
 (
	`gë_ba£
 (
cuºít
->
ldt
[1]), 
	`gë_limô
 (0x0f));

145 
	`‰ì_∑ge_èbÀs
 (
	`gë_ba£
 (
cuºít
->
ldt
[2]), 
	`gë_limô
 (0x17));

148 
i
 = 0; i < 
NR_TASKS
; i++)

149 i‡(
èsk
[
i
] &&Åask[i]->
Áthî
 =
cuºít
->
pid
)

151 
èsk
[
i
]->
Áthî
 = 1;

152 i‡(
èsk
[
i
]->
°©e
 =
TASK_ZOMBIE
)

154 (Ë
	`£nd_sig
 (
SIGCHLD
, 
èsk
[1], 1);

157 
i
 = 0; i < 
NR_OPEN
; i++)

158 i‡(
cuºít
->
fûp
[
i
])

159 
	`sys_˛o£
 (
i
);

161 
	`ùut
 (
cuºít
->
pwd
);

162 
cuºít
->
pwd
 = 
NULL
;

163 
	`ùut
 (
cuºít
->
roŸ
);

164 
cuºít
->
roŸ
 = 
NULL
;

165 
	`ùut
 (
cuºít
->
execuèbÀ
);

166 
cuºít
->
execuèbÀ
 = 
NULL
;

168 i‡(
cuºít
->
Àadî
 && cuºít->
ây
 >= 0)

169 
ây_èbÀ
[
cuºít
->
ây
].
pgΩ
 = 0;

171 i‡(
œ°_èsk_u£d_m©h
 =
cuºít
)

172 
œ°_èsk_u£d_m©h
 = 
NULL
;

174 i‡(
cuºít
->
Àadî
)

175 
	`kûl_£ssi⁄
 ();

177 
cuºít
->
°©e
 = 
TASK_ZOMBIE
;

178 
cuºít
->
exô_code
 = 
code
;

180 
	`ãŒ_Áthî
 (
cuºít
->
Áthî
);

181 
	`scheduÀ
 ();

183 
	}
}

187 
	$sys_exô
 (
îr‹_code
)

189  
	`do_exô
 ((
îr‹_code
 & 0xff) << 8);

190 
	}
}

203 
	$sys_waôpid
 (
pid_t
 
pid
, *
°©_addr
, 
›ti⁄s
)

205 
Êag
, 
code
;

206 
èsk_°ru˘
 **
p
;

208 
	`vîify_¨ó
 (
°©_addr
, 4);

209 
ª≥©
:

210 
Êag
 = 0;

211 
p
 = &
LAST_TASK
;Ö > &
FIRST_TASK
; --p)

213 i‡(!*
p
 || *∞=
cuºít
)

215 i‡((*
p
)->
Áthî
 !
cuºít
->
pid
)

217 i‡(
pid
 > 0)

219 i‡((*
p
)->
pid
 !=Öid)

222 i‡(!
pid
)

224 i‡((*
p
)->
pgΩ
 !
cuºít
->pgrp)

227 i‡(
pid
 != -1)

229 ∫≈i‡((*
p
)->
pgΩ
 !-
pid
)

232 (*
p
)->
°©e
)

234 
TASK_STOPPED
:

235 i‡(!(
›ti⁄s
 & 
WUNTRACED
))

237 
	`put_fs_l⁄g
 (0x7f, 
°©_addr
);

238  (*
p
)->
pid
;

239 
TASK_ZOMBIE
:

240 
cuºít
->
cutime
 +(*
p
)->
utime
;

241 
cuºít
->
c°ime
 +(*
p
)->
°ime
;

242 
Êag
 = (*
p
)->
pid
;

243 
code
 = (*
p
)->
exô_code
;

244 
	`ªÀa£
 (*
p
);

245 
	`put_fs_l⁄g
 (
code
, 
°©_addr
);

246  
Êag
;

248 
Êag
 = 1;

252 i‡(
Êag
)

254 i‡(
›ti⁄s
 & 
WNOHANG
)

256 
cuºít
->
°©e
 = 
TASK_INTERRUPTIBLE
;

257 
	`scheduÀ
 ();

258 i‡(!(
cuºít
->
sig«l
 &~(1 << (
SIGCHLD
 - 1))))

259 
ª≥©
;

261  -
EINTR
;

263  -
ECHILD
;

264 
	}
}

	@kernel/fork.c

18 
	~<î∫o.h
>

20 
	~<löux/sched.h
>

22 
	~<löux/kî√l.h
>

23 
	~<asm/£gmít.h
>

24 
	~<asm/sy°em.h
>

26 
wrôe_vîify
 (
addªss
);

28 
	gœ°_pid
 = 0;

34 
	$vîify_¨ó
 (*
addr
, 
size
)

36 
°¨t
;

38 
°¨t
 = (Ë
addr
;

41 
size
 +
°¨t
 & 0xfff;

42 
°¨t
 &= 0xfffff000;

43 
°¨t
 +
	`gë_ba£
 (
cuºít
->
ldt
[2]);

44 
size
 > 0)

46 
size
 -= 4096;

48 
	`wrôe_vîify
 (
°¨t
);

49 
°¨t
 += 4096;

51 
	}
}

56 
	$c›y_mem
 (
ƒ
, 
èsk_°ru˘
 *
p
)

58 
ﬁd_d©a_ba£
, 
√w_d©a_ba£
, 
d©a_limô
;

59 
ﬁd_code_ba£
, 
√w_code_ba£
, 
code_limô
;

61 
code_limô
 = 
	`gë_limô
 (0x0f);

62 
d©a_limô
 = 
	`gë_limô
 (0x17);

63 
ﬁd_code_ba£
 = 
	`gë_ba£
 (
cuºít
->
ldt
[1]);

64 
ﬁd_d©a_ba£
 = 
	`gë_ba£
 (
cuºít
->
ldt
[2]);

65 i‡(
ﬁd_d©a_ba£
 !
ﬁd_code_ba£
)

66 
	`∑nic
 ("We don't support separate I&D");

67 i‡(
d©a_limô
 < 
code_limô
)

68 
	`∑nic
 ("Bad data_limit");

69 
√w_d©a_ba£
 = 
√w_code_ba£
 = 
ƒ
 * 0x4000000;

70 
p
->
°¨t_code
 = 
√w_code_ba£
;

71 
	`£t_ba£
 (
p
->
ldt
[1], 
√w_code_ba£
);

72 
	`£t_ba£
 (
p
->
ldt
[2], 
√w_d©a_ba£
);

73 i‡(
	`c›y_∑ge_èbÀs
 (
ﬁd_d©a_ba£
, 
√w_d©a_ba£
, 
d©a_limô
))

75 
	`‰ì_∑ge_èbÀs
 (
√w_d©a_ba£
, 
d©a_limô
);

76  -
ENOMEM
;

79 
	}
}

92 
	$c›y_¥o˚ss
 (
ƒ
, 
ebp
, 
edi
, 
esi
, 
gs
, 
n⁄e
,

93 
ebx
, 
ecx
, 
edx
,

94 
fs
, 
es
, 
ds
,

95 
eù
, 
cs
, 
eÊags
, 
e•
, 
ss
)

97 
èsk_°ru˘
 *
p
;

98 
i
;

99 
fûe
 *
f
;

101 
p
 = (
èsk_°ru˘
 *Ë
	`gë_‰ì_∑ge
 ();

102 i‡(!
p
)

103  -
EAGAIN
;

104 
èsk
[
ƒ
] = 
p
;

106 *
p
 = *
cuºít
;

108 
p
->
°©e
 = 
TASK_UNINTERRUPTIBLE
;

109 
p
->
pid
 = 
œ°_pid
;

110 
p
->
Áthî
 = 
cuºít
->
pid
;

111 
p
->
cou¡î
 =Ö->
¥i‹ôy
;

112 
p
->
sig«l
 = 0;

113 
p
->
Æ¨m
 = 0;

114 
p
->
Àadî
 = 0;

116 
p
->
utime
 =Ö->
°ime
 = 0;

117 
p
->
cutime
 =Ö->
c°ime
 = 0;

118 
p
->
°¨t_time
 = 
jiffõs
;

120 
p
->
tss
.
back_lök
 = 0;

121 
p
->
tss
.
e•0
 = 
PAGE_SIZE
 + ()Ö;

123 
p
->
tss
.
ss0
 = 0x10;

124 
p
->
tss
.
eù
 =Éip;

125 
p
->
tss
.
eÊags
 =Éflags;

126 
p
->
tss
.
óx
 = 0;

127 
p
->
tss
.
ecx
 =Écx;

128 
p
->
tss
.
edx
 =Édx;

129 
p
->
tss
.
ebx
 =Ébx;

130 
p
->
tss
.
e•
 =Ésp;

131 
p
->
tss
.
ebp
 =Ébp;

132 
p
->
tss
.
esi
 =Ési;

133 
p
->
tss
.
edi
 =Édi;

134 
p
->
tss
.
es
 =És & 0xffff;

135 
p
->
tss
.
cs
 = cs & 0xffff;

136 
p
->
tss
.
ss
 = ss & 0xffff;

137 
p
->
tss
.
ds
 = ds & 0xffff;

138 
p
->
tss
.
fs
 = fs & 0xffff;

139 
p
->
tss
.
gs
 = gs & 0xffff;

140 
p
->
tss
.
ldt
 = 
	`_LDT
 (
ƒ
);

141 
p
->
tss
.
åa˚_bôm≠
 = 0x80000000;

144 i‡(
œ°_èsk_u£d_m©h
 =
cuºít
)

145 
	`__asm__
 ("˛t†; fnßvê%0"::"m" (
p
->
tss
.
i387
));

148 i‡(
	`c›y_mem
 (
ƒ
, 
p
))

150 
èsk
[
ƒ
] = 
NULL
;

151 
	`‰ì_∑ge
 ((Ë
p
);

152  -
EAGAIN
;

155 
i
 = 0; i < 
NR_OPEN
; i++)

156 i‡(
f
 = 
p
->
fûp
[
i
])

157 
f
->
f_cou¡
++;

159 i‡(
cuºít
->
pwd
)

160 
cuºít
->
pwd
->
i_cou¡
++;

161 i‡(
cuºít
->
roŸ
)

162 
cuºít
->
roŸ
->
i_cou¡
++;

163 i‡(
cuºít
->
execuèbÀ
)

164 
cuºít
->
execuèbÀ
->
i_cou¡
++;

167 
	`£t_tss_desc
 (
gdt
 + (
ƒ
 << 1Ë+ 
FIRST_TSS_ENTRY
, &(
p
->
tss
));

168 
	`£t_ldt_desc
 (
gdt
 + (
ƒ
 << 1Ë+ 
FIRST_LDT_ENTRY
, &(
p
->
ldt
));

169 
p
->
°©e
 = 
TASK_RUNNING
;

171  
œ°_pid
;

172 
	}
}

176 
	$föd_em±y_¥o˚ss
 ()

178 
i
;

180 
ª≥©
:

181 i‡((++
œ°_pid
) < 0)

182 
œ°_pid
 = 1;

183 
i
 = 0; i < 
NR_TASKS
; i++)

184 i‡(
èsk
[
i
] &&Åask[i]->
pid
 =
œ°_pid
)

185 
ª≥©
;

186 
i
 = 1; i < 
NR_TASKS
; i++)

187 i‡(!
èsk
[
i
])

188  
i
;

189  -
EAGAIN
;

190 
	}
}

	@kernel/math/math_emulate.c

15 
	~<sig«l.h
>

17 
	~<löux/sched.h
>

19 
	~<löux/kî√l.h
>

20 
	~<asm/£gmít.h
>

25 
	$m©h_emuœã
 (
edi
, 
esi
, 
ebp
, 
sys_ˇŒ_ªt
,

26 
óx
, 
ebx
, 
ecx
, 
edx
,

27 
fs
, 
es
, 
ds
,

28 
eù
, 
cs
, 
eÊags
,

29 
ss
, 
e•
)

31 
fú°
, 
£c⁄d
;

38 i‡(
cs
 != 0x000F)

40 
	`¥ötk
 ("m©h_emuœã: %04x:%08x\n\r", 
cs
, 
eù
);

41 
	`∑nic
 ("MathÉmulationÇeeded in kernel");

44 
fú°
 = 
	`gë_fs_byã
 ((*Ë((*&
eù
)++));

45 
£c⁄d
 = 
	`gë_fs_byã
 ((*Ë((*&
eù
)++));

46 
	`¥ötk
 ("%04x:%08x %02x %02x\n\r", 
cs
, 
eù
 - 2, 
fú°
, 
£c⁄d
);

47 
cuºít
->
sig«l
 |1 << (
SIGFPE
 - 1);

48 
	}
}

53 
	$m©h_îr‹
 ()

56 
	`__asm__
 ("fnclex");

58 i‡(
œ°_èsk_u£d_m©h
)

59 
œ°_èsk_u£d_m©h
->
sig«l
 |1 << (
SIGFPE
 - 1);

60 
	}
}

	@kernel/mktime.c

7 
	~<time.h
>

27 
	#MINUTE
 60

28 
	#HOUR
 (60*
MINUTE
)

29 
	#DAY
 (24*
HOUR
)

30 
	#YEAR
 (365*
DAY
)

31 

	)

35 
	gm⁄th
[12] = {

37 
DAY
 * (31),

38 
DAY
 * (31 + 29),

39 
DAY
 * (31 + 29 + 31),

40 
DAY
 * (31 + 29 + 31 + 30),

41 
DAY
 * (31 + 29 + 31 + 30 + 31),

42 
DAY
 * (31 + 29 + 31 + 30 + 31 + 30),

43 
DAY
 * (31 + 29 + 31 + 30 + 31 + 30 + 31),

44 
DAY
 * (31 + 29 + 31 + 30 + 31 + 30 + 31 + 31),

45 
DAY
 * (31 + 29 + 31 + 30 + 31 + 30 + 31 + 31 + 30),

46 
DAY
 * (31 + 29 + 31 + 30 + 31 + 30 + 31 + 31 + 30 + 31),

47 
DAY
 * (31 + 29 + 31 + 30 + 31 + 30 + 31 + 31 + 30 + 31 + 30)

52 
	$kî√l_mktime
 (
tm
 *tm)

54 
ªs
;

55 
yór
;

57 
yór
 = 
tm
->
tm_yór
 - 70;

61 
ªs
 = 
YEAR
 * 
yór
 + 
DAY
 * ((year + 1) / 4);

62 
ªs
 +
m⁄th
[
tm
->
tm_m⁄
];

65 i‡(
tm
->
tm_m⁄
 > 1 && ((
yór
 + 2) % 4))

66 
ªs
 -
DAY
;

67 
ªs
 +
DAY
 * (
tm
->
tm_mday
 - 1);

68 
ªs
 +
HOUR
 * 
tm
->
tm_hour
;

69 
ªs
 +
MINUTE
 * 
tm
->
tm_mö
;

70 
ªs
 +
tm
->
tm_£c
;

71  
ªs
;

72 
	}
}

	@kernel/panic.c

15 
	~<löux/kî√l.h
>

16 
	~<löux/sched.h
>

19 
sys_sync
 ();

24 
	$∑nic
 (c⁄° *
s
)

26 
	`¥ötk
 ("Kî√»∑nic: %s\n\r", 
s
);

27 i‡(
cuºít
 =
èsk
[0])

28 
	`¥ötk
 ("In swapperÅask -Çot syncing\n\r");

30 
	`sys_sync
 ();

32 
	}
}

	@kernel/printk.c

16 
	~<°d¨g.h
>

19 
	~<°ddef.h
>

21 
	~<löux/kî√l.h
>

23 
	gbuf
[1024];

26 
v•rötf
 (*
buf
, c⁄° *
fmt
, 
va_li°
 
¨gs
);

30 
	$¥ötk
 (c⁄° *
fmt
, ...)

32 
va_li°
 
¨gs
;

33 
i
;

35 
	`va_°¨t
 (
¨gs
, 
fmt
);

36 
i
 = 
	`v•rötf
 (
buf
, 
fmt
, 
¨gs
);

38 
	`va_íd
 (
¨gs
);

39 
	`__asm__
 ("push %%fs\n\t"

48 ::"r" (
i
):"ax", "cx", "dx");

49  
i
;

50 
	}
}

	@kernel/sched.c

17 
	~<löux/sched.h
>

20 
	~<löux/kî√l.h
>

21 
	~<löux/sys.h
>

22 
	~<löux/fdªg.h
>

23 
	~<asm/sy°em.h
>

24 
	~<asm/io.h
>

25 
	~<asm/£gmít.h
>

27 
	~<sig«l.h
>

29 
	#_S
(
ƒ
) (1<<((nr)-1))

31 
	#_BLOCKABLE
 (~(
	`_S
(
SIGKILL
Ë| _S(
SIGSTOP
)))

33 

	)

36 
	$show_èsk
 (
ƒ
, 
èsk_°ru˘
 *
p
)

38 
i
, 
j
 = 4096 -  (
èsk_°ru˘
);

40 
	`¥ötk
 ("%d:Öid=%d, sèã=%d, ", 
ƒ
, 
p
->
pid
,Ö->
°©e
);

41 
i
 = 0;

42 
i
 < 
j
 && !((*Ë(
p
 + 1))[i])

43 
i
++;

44 
	`¥ötk
 ("%d (o‡%dËch¨†‰ì i¿kî√»°ack\n\r", 
i
, 
j
);

45 
	}
}

49 
	$show_°©
 ()

51 
i
;

53 
i
 = 0; i < 
NR_TASKS
; i++)

54 i‡(
èsk
[
i
])

55 
	`show_èsk
 (
i
, 
èsk
[i]);

56 
	}
}

59 
	#LATCH
 (1193180/
HZ
)

	)

61 
mem_u£
 ();

63 
timî_öãºu±
 ();

64 
sy°em_ˇŒ
 ();

66 
	uèsk_uni⁄


68 
èsk_°ru˘
 
	mèsk
;

69 
	m°ack
[
PAGE_SIZE
];

72 
èsk_uni⁄
 
	göô_èsk
 = { 
INIT_TASK
, };

74 vﬁ©ûê
	gjiffõs
 = 0;

77 
	g°¨tup_time
 = 0;

78 
èsk_°ru˘
 *
	gcuºít
 = &(
öô_èsk
.
èsk
);

79 
èsk_°ru˘
 *
	gœ°_èsk_u£d_m©h
 = 
NULL
;

81 
èsk_°ru˘
 *
	gèsk
[
NR_TASKS
] = { &(
öô_èsk
.
èsk
), };

83 
	gu£r_°ack
[
PAGE_SIZE
 >> 2];

88 *
	ma
;

89 
	mb
;

91 
	g°ack_°¨t
 =

93 &
u£r_°ack
[
PAGE_SIZE
 >> 2], 0x10};

106 
	$m©h_°©e_ª°‹e
 ()

108 i‡(
œ°_èsk_u£d_m©h
 =
cuºít
)

110 
	`__asm__
 ("fwait");

111 i‡(
œ°_èsk_u£d_m©h
)

113 
	`__asm__
 ("‚ßvê%0"::"m" (
œ°_èsk_u£d_m©h
->
tss
.
i387
));

115 
œ°_èsk_u£d_m©h
 = 
cuºít
;

117 i‡(
cuºít
->
u£d_m©h
)

119 
	`__asm__
 ("‰°‹ %0"::"m" (
cuºít
->
tss
.
i387
));

123 
	`__asm__
 ("fninit"::);

124 
cuºít
->
u£d_m©h
 = 1;

126 
	}
}

146 
	$scheduÀ
 ()

148 
i
, 
√xt
, 
c
;

149 
èsk_°ru˘
 **
p
;

155 
p
 = &
LAST_TASK
;Ö > &
FIRST_TASK
; --p)

156 i‡(*
p
)

160 i‡((*
p
)->
Æ¨m
 && (*p)->Æ¨m < 
jiffõs
)

162 (*
p
)->
sig«l
 |(1 << (
SIGALRM
 - 1));

163 (*
p
)->
Æ¨m
 = 0;

167 i‡(((*
p
)->
sig«l
 & ~(
_BLOCKABLE
 & (*p)->
blocked
)) &&

168 (*
p
)->
°©e
 =
TASK_INTERRUPTIBLE
)

169 (*
p
)->
°©e
 = 
TASK_RUNNING
;

177 
c
 = -1;

178 
√xt
 = 0;

179 
i
 = 
NR_TASKS
;

180 
p
 = &
èsk
[
NR_TASKS
];

184 --
i
)

186 i‡(!*--
p
)

188 i‡((*
p
)->
°©e
 =
TASK_RUNNING
 && (*p)->
cou¡î
 > 
c
)

189 
c
 = (*
p
)->
cou¡î
, 
√xt
 = 
i
;

192 i‡(
c
)

196 
p
 = &
LAST_TASK
;Ö > &
FIRST_TASK
; --p)

197 i‡(*
p
)

198 (*
p
)->
cou¡î
 = ((*p)->cou¡î >> 1Ë+ (*p)->
¥i‹ôy
;

200 
	`swôch_to
 (
√xt
);

201 
	}
}

208 
	$sys_∑u£
 ()

210 
cuºít
->
°©e
 = 
TASK_INTERRUPTIBLE
;

211 
	`scheduÀ
 ();

213 
	}
}

219 
	$¶ìp_⁄
 (
èsk_°ru˘
 **
p
)

221 
èsk_°ru˘
 *
tmp
;

224 i‡(!
p
)

226 i‡(
cuºít
 =&(
öô_èsk
.
èsk
))

227 
	`∑nic
 ("task[0]ÅryingÅo sleep");

228 
tmp
 = *
p
;

229 *
p
 = 
cuºít
;

230 
cuºít
->
°©e
 = 
TASK_UNINTERRUPTIBLE
;

231 
	`scheduÀ
 ();

236 i‡(
tmp
)

237 
tmp
->
°©e
 = 0;

238 
	}
}

242 
	$öãºu±ibÀ_¶ìp_⁄
 (
èsk_°ru˘
 **
p
)

244 
èsk_°ru˘
 *
tmp
;

246 i‡(!
p
)

248 i‡(
cuºít
 =&(
öô_èsk
.
èsk
))

249 
	`∑nic
 ("task[0]ÅryingÅo sleep");

250 
tmp
 = *
p
;

251 *
p
 = 
cuºít
;

252 
ª≥©
:
cuºít
->
°©e
 = 
TASK_INTERRUPTIBLE
;

253 
	`scheduÀ
 ();

258 i‡(*
p
 && *∞!
cuºít
)

260 (**
p
).
°©e
 = 0;

261 
ª≥©
;

265 *
p
 = 
NULL
;

266 i‡(
tmp
)

267 
tmp
->
°©e
 = 0;

268 
	}
}

272 
	$wake_up
 (
èsk_°ru˘
 **
p
)

274 i‡(
p
 && *p)

276 (**
p
).
°©e
 = 0;

277 *
p
 = 
NULL
;

279 
	}
}

290 
èsk_°ru˘
 *
	gwaô_mŸ‹
[4] = { 
NULL
, NULL, NULL, NULL };

291 
	gm⁄_timî
[4] = { 0, 0, 0, 0 };

292 
	gmoff_timî
[4] = { 0, 0, 0, 0 };

293 
	gcuºít_DOR
 = 0x0C;

298 
	$ticks_to_Ê›py_⁄
 (
ƒ
)

300 
£À˘ed
;

301 
mask
 = 0x10 << 
ƒ
;

303 i‡(
ƒ
 > 3)

304 
	`∑nic
 ("floppy_on:Çr>3");

305 
moff_timî
[
ƒ
] = 10000;

306 
	`˛i
 ();

307 
mask
 |
cuºít_DOR
;

309 i‡(!
£À˘ed
)

311 
mask
 &= 0xFC;

312 
mask
 |
ƒ
;

317 i‡(
mask
 !
cuºít_DOR
)

319 
	`outb
 (
mask
, 
FD_DOR
);

320 i‡((
mask
 ^ 
cuºít_DOR
) & 0xf0)

321 
m⁄_timî
[
ƒ
] = 
HZ
 / 2;

322 i‡(
m⁄_timî
[
ƒ
] < 2)

323 
m⁄_timî
[
ƒ
] = 2;

324 
cuºít_DOR
 = 
mask
;

326 
	`°i
 ();

327  
m⁄_timî
[
ƒ
];

328 
	}
}

332 
	$Ê›py_⁄
 (
ƒ
)

334 
	`˛i
 ();

335 
	`ticks_to_Ê›py_⁄
 (
ƒ
))

336 
	`¶ìp_⁄
 (
ƒ
 + 
waô_mŸ‹
);

337 
	`°i
 ();

338 
	}
}

342 
	$Ê›py_off
 (
ƒ
)

344 
moff_timî
[
ƒ
] = 3 * 
HZ
;

345 
	}
}

351 
	$do_Ê›py_timî
 ()

353 
i
;

354 
mask
 = 0x10;

356 
i
 = 0; i < 4; i++, 
mask
 <<= 1)

358 i‡(!(
mask
 & 
cuºít_DOR
))

360 i‡(
m⁄_timî
[
i
])

362 i‡(!--
m⁄_timî
[
i
])

363 
	`wake_up
 (
i
 + 
waô_mŸ‹
);

365 i‡(!
moff_timî
[
i
])

367 
cuºít_DOR
 &~
mask
;

368 
	`outb
 (
cuºít_DOR
, 
FD_DOR
);

371 
moff_timî
[
i
]--;

373 
	}
}

375 
	#TIME_REQUESTS
 64

376 

	)

378 
	stimî_li°


380 
	mjiffõs
;

381 (*
	m‚
) ();

382 
timî_li°
 *
	m√xt
;

384 
	gtimî_li°
[
TIME_REQUESTS
], *
	g√xt_timî
 = 
NULL
;

389 
add_timî
 (
jiffõs
, (*
‚
) ())

391 
timî_li°
 *
p
;

394 i‡(!
‚
)

396 
	`˛i
 ();

398 i‡(
jiffõs
 <= 0)

399 (
‚
) ();

403 
p
 = 
timî_li°
;Ö <Åimî_li° + 
TIME_REQUESTS
;Ö++)

404 i‡(!
p
->
‚
)

407 i‡(
p
 >
timî_li°
 + 
TIME_REQUESTS
)

408 
	`∑nic
 ("No moreÅimeÑequests free");

410 
p
->
‚
 = fn;

411 
p
->
jiffõs
 = jiffies;

412 
p
->
√xt
 = 
√xt_timî
;

413 
√xt_timî
 = 
p
;

417 
p
->
√xt
 &&Ö->√xt->
jiffõs
 <Ö->jiffies)

419 
p
->
jiffõs
 -p->
√xt
->jiffies;

420 
‚
 = 
p
->fn;

421 
p
->
‚
 =Ö->
√xt
->fn;

422 
p
->
√xt
->
‚
 = fn;

423 
jiffõs
 = 
p
->jiffies;

424 
p
->
jiffõs
 =Ö->
√xt
->jiffies;

425 
p
->
√xt
->
jiffõs
 = jiffies;

426 
p
 =Ö->
√xt
;

429 
	`°i
 ();

430 
	}
}

436 
	$do_timî
 (
˝l
)

438 
bìpcou¡
;

439 
	`sysbìp°›
 ();

443 i‡(
bìpcou¡
)

444 i‡(!--
bìpcou¡
)

445 
	`sysbìp°›
 ();

449 i‡(
˝l
)

450 
cuºít
->
utime
++;

452 
cuºít
->
°ime
++;

456 i‡(
√xt_timî
)

458 
√xt_timî
->
jiffõs
--;

459 
√xt_timî
 &&Çext_timî->
jiffõs
 <= 0)

461 (*
‚
) ();

463 
‚
 = 
√xt_timî
->fn;

464 
√xt_timî
->
‚
 = 
NULL
;

465 
√xt_timî
 =Çext_timî->
√xt
;

466 (
‚
) ();

470 i‡(
cuºít_DOR
 & 0xf0)

471 
	`do_Ê›py_timî
 ();

472 i‡((--
cuºít
->
cou¡î
) > 0)

474 
cuºít
->
cou¡î
 = 0;

475 i‡(!
˝l
)

477 
	`scheduÀ
 ();

478 
	}
}

483 
	$sys_Æ¨m
 (
£c⁄ds
)

485 
ﬁd
 = 
cuºít
->
Æ¨m
;

487 i‡(
ﬁd
)

488 
ﬁd
 = (ﬁd - 
jiffõs
Ë/ 
HZ
;

489 
cuºít
->
Æ¨m
 = (
£c⁄ds
 > 0Ë? (
jiffõs
 + 
HZ
 * seconds) : 0;

490  (
ﬁd
);

491 
	}
}

495 
	$sys_gëpid
 ()

497  
cuºít
->
pid
;

498 
	}
}

502 
	$sys_gëµid
 ()

504  
cuºít
->
Áthî
;

505 
	}
}

509 
	$sys_gëuid
 ()

511  
cuºít
->
uid
;

512 
	}
}

516 
	$sys_gëeuid
 ()

518  
cuºít
->
euid
;

519 
	}
}

523 
	$sys_gëgid
 ()

525  
cuºít
->
gid
;

526 
	}
}

530 
	$sys_gëegid
 ()

532  
cuºít
->
egid
;

533 
	}
}

538 
	$sys_ni˚
 (
ö¸emít
)

540 i‡(
cuºít
->
¥i‹ôy
 - 
ö¸emít
 > 0)

541 
cuºít
->
¥i‹ôy
 -
ö¸emít
;

543 
	}
}

547 
	$sched_öô
 ()

549 
i
;

550 
desc_°ru˘
 *
p
;

552 i‡( (
siga˘i⁄
) != 16)

553 
	`∑nic
 ("Struct sigaction MUST be 16 bytes");

555 
	`£t_tss_desc
 (
gdt
 + 
FIRST_TSS_ENTRY
, &(
öô_èsk
.
èsk
.
tss
));

556 
	`£t_ldt_desc
 (
gdt
 + 
FIRST_LDT_ENTRY
, &(
öô_èsk
.
èsk
.
ldt
));

558 
p
 = 
gdt
 + 2 + 
FIRST_TSS_ENTRY
;

559 
i
 = 1; i < 
NR_TASKS
; i++)

561 
èsk
[
i
] = 
NULL
;

562 
p
->
a
 =Ö->
b
 = 0;

563 
p
++;

564 
p
->
a
 =Ö->
b
 = 0;

565 
p
++;

571 
	`__asm__
 ("pushfl ;ándl $0xffffbfff,(%esp) ;Öopfl");

572 
	`…r
 (0);

573 
	`Œdt
 (0);

577 
	`outb_p
 (0x36, 0x43);

578 
	`outb_p
 (
LATCH
 & 0xff, 0x40);

579 
	`outb
 (
LATCH
 >> 8, 0x40);

581 
	`£t_öå_g©e
 (0x20, &
timî_öãºu±
);

583 
	`outb
 (
	`öb_p
 (0x21) & ~0x01, 0x21);

585 
	`£t_sy°em_g©e
 (0x80, &
sy°em_ˇŒ
);

586 
	}
}

	@kernel/signal.c

7 
	~<löux/sched.h
>

9 
	~<löux/kî√l.h
>

10 
	~<asm/£gmít.h
>

12 
	~<sig«l.h
>

14 vﬁ©ûê
do_exô
 (
îr‹_code
);

18 
	$sys_sgëmask
 ()

20  
cuºít
->
blocked
;

21 
	}
}

25 
	$sys_s£tmask
 (
√wmask
)

27 
ﬁd
 = 
cuºít
->
blocked
;

29 
cuºít
->
blocked
 = 
√wmask
 & ~(1 << (
SIGKILL
 - 1));

30  
ﬁd
;

31 
	}
}

34 
ölöe
 

35 
	$ßve_ﬁd
 (*
‰om
, *
to
)

37 
i
;

39 
	`vîify_¨ó
 (
to
,  (
siga˘i⁄
));

40 
i
 = 0; i <  (
siga˘i⁄
); i++)

42 
	`put_fs_byã
 (*
‰om
, 
to
);

43 
‰om
++;

44 
to
++;

46 
	}
}

49 
ölöe
 

50 
	$gë_√w
 (*
‰om
, *
to
)

52 
i
;

54 
i
 = 0; i <  (
siga˘i⁄
); i++)

55 *(
to
++Ë
	`gë_fs_byã
 (
‰om
++);

56 
	}
}

63 
	$sys_sig«l
 (
signum
, 
h™dÀr
, 
ª°‹î
)

65 
siga˘i⁄
 
tmp
;

67 i‡(
signum
 < 1 || signum > 32 || signum =
SIGKILL
)

69 
tmp
.
ß_h™dÀr
 = ((*)()Ë
h™dÀr
;

70 
tmp
.
ß_mask
 = 0;

71 
tmp
.
ß_Êags
 = 
SA_ONESHOT
 | 
SA_NOMASK
;

73 
tmp
.
ß_ª°‹î
 = ((*)()Ë
ª°‹î
;

74 
h™dÀr
 = (Ë
cuºít
->
siga˘i⁄
[
signum
 - 1].
ß_h™dÀr
;

75 
cuºít
->
siga˘i⁄
[
signum
 - 1] = 
tmp
;

76  
h™dÀr
;

77 
	}
}

83 
	$sys_siga˘i⁄
 (
signum
, c⁄° 
siga˘i⁄
 *
a˘i⁄
,

84 
siga˘i⁄
 *
ﬁda˘i⁄
)

86 
siga˘i⁄
 
tmp
;

89 i‡(
signum
 < 1 || signum > 32 || signum =
SIGKILL
)

92 
tmp
 = 
cuºít
->
siga˘i⁄
[
signum
 - 1];

93 
	`gë_√w
 ((*Ë
a˘i⁄
, (*Ë(
signum
 - 1 + 
cuºít
->
siga˘i⁄
));

95 i‡(
ﬁda˘i⁄
)

96 
	`ßve_ﬁd
 ((*Ë&
tmp
, (*Ë
ﬁda˘i⁄
);

98 i‡(
cuºít
->
siga˘i⁄
[
signum
 - 1].
ß_Êags
 & 
SA_NOMASK
)

99 
cuºít
->
siga˘i⁄
[
signum
 - 1].
ß_mask
 = 0;

101 
cuºít
->
siga˘i⁄
[
signum
 - 1].
ß_mask
 |= (1 << (signum - 1));

103 
	}
}

109 
	$do_sig«l
 (
sigƒ
, 
óx
, 
ebx
, 
ecx
, 
edx
,

110 
fs
, 
es
, 
ds
,

111 
eù
, 
cs
, 
eÊags
, *
e•
, 
ss
)

113 
ß_h™dÀr
;

114 
ﬁd_eù
 = 
eù
;

115 
siga˘i⁄
 *
ß
 = 
cuºít
->siga˘i⁄ + 
sigƒ
 - 1;

116 
l⁄gs
;

117 *
tmp_e•
;

119 
ß_h™dÀr
 = (Ë
ß
->sa_handler;

122 i‡(
ß_h™dÀr
 == 1)

124 i‡(!
ß_h™dÀr
)

126 i‡(
sigƒ
 =
SIGCHLD
)

129 
	`do_exô
 (1 << (
sigƒ
 - 1));

133 i‡(
ß
->
ß_Êags
 & 
SA_ONESHOT
)

134 
ß
->
ß_h™dÀr
 = 
NULL
;

140 *(&
eù
Ë
ß_h™dÀr
;

142 
l⁄gs
 = (
ß
->
ß_Êags
 & 
SA_NOMASK
) ? 7 : 8;

145 *(&
e•
Ë-
l⁄gs
;

146 
	`vîify_¨ó
 (
e•
, 
l⁄gs
 * 4);

149 
tmp_e•
 = 
e•
;

150 
	`put_fs_l⁄g
 ((Ë
ß
->
ß_ª°‹î
, 
tmp_e•
++);

151 
	`put_fs_l⁄g
 (
sigƒ
, 
tmp_e•
++);

152 i‡(!(
ß
->
ß_Êags
 & 
SA_NOMASK
))

153 
	`put_fs_l⁄g
 (
cuºít
->
blocked
, 
tmp_e•
++);

154 
	`put_fs_l⁄g
 (
óx
, 
tmp_e•
++);

155 
	`put_fs_l⁄g
 (
ecx
, 
tmp_e•
++);

156 
	`put_fs_l⁄g
 (
edx
, 
tmp_e•
++);

157 
	`put_fs_l⁄g
 (
eÊags
, 
tmp_e•
++);

158 
	`put_fs_l⁄g
 (
ﬁd_eù
, 
tmp_e•
++);

159 
cuºít
->
blocked
 |
ß
->
ß_mask
;

160 
	}
}

	@kernel/sys.c

7 
	~<î∫o.h
>

9 
	~<löux/sched.h
>

11 
	~<löux/ây.h
>

12 
	~<löux/kî√l.h
>

13 
	~<asm/£gmít.h
>

14 
	~<sys/times.h
>

15 
	~<sys/ut¢ame.h
>

19 
	$sys_·ime
 ()

21  -
ENOSYS
;

22 
	}
}

26 
	$sys_bªak
 ()

28  -
ENOSYS
;

29 
	}
}

33 
	$sys_±ø˚
 ()

35  -
ENOSYS
;

36 
	}
}

40 
	$sys_°ty
 ()

42  -
ENOSYS
;

43 
	}
}

47 
	$sys_gây
 ()

49  -
ENOSYS
;

50 
	}
}

54 
	$sys_ª«me
 ()

56  -
ENOSYS
;

57 
	}
}

61 
	$sys_¥of
 ()

63  -
ENOSYS
;

64 
	}
}

70 
	$sys_£åegid
 (
rgid
, 
egid
)

72 i‡(
rgid
 > 0)

74 i‡((
cuºít
->
gid
 =
rgid
Ë|| 
	`su£r
 ())

75 
cuºít
->
gid
 = 
rgid
;

77  (-
EPERM
);

79 i‡(
egid
 > 0)

81 i‡((
cuºít
->
gid
 =
egid
) ||

82 (
cuºít
->
egid
 =egidË|| (cuºít->
sgid
 =egidË|| 
	`su£r
 ())

83 
cuºít
->
egid
 =Égid;

85  (-
EPERM
);

88 
	}
}

94 
	$sys_£tgid
 (
gid
)

96  (
	`sys_£åegid
 (
gid
, gid));

97 
	}
}

101 
	$sys_ac˘
 ()

103  -
ENOSYS
;

104 
	}
}

108 
	$sys_phys
 ()

110  -
ENOSYS
;

111 
	}
}

114 
	$sys_lock
 ()

116  -
ENOSYS
;

117 
	}
}

120 
	$sys_mpx
 ()

122  -
ENOSYS
;

123 
	}
}

126 
	$sys_ulimô
 ()

128  -
ENOSYS
;

129 
	}
}

134 
	$sys_time
 (*
éoc
)

136 
i
;

138 
i
 = 
CURRENT_TIME
;

139 i‡(
éoc
)

141 
	`vîify_¨ó
 (
éoc
, 4);

142 
	`put_fs_l⁄g
 (
i
, (*Ë
éoc
);

144  
i
;

145 
	}
}

158 
	$sys_£åeuid
 (
ruid
, 
euid
)

160 
ﬁd_ruid
 = 
cuºít
->
uid
;

162 i‡(
ruid
 > 0)

164 i‡((
cuºít
->
euid
 =
ruid
Ë|| (
ﬁd_ruid
 =ruidË|| 
	`su£r
 ())

165 
cuºít
->
uid
 = 
ruid
;

167  (-
EPERM
);

169 i‡(
euid
 > 0)

171 i‡((
ﬁd_ruid
 =
euid
Ë|| (
cuºít
->euid =euidË|| 
	`su£r
 ())

172 
cuºít
->
euid
 =Éuid;

175 
cuºít
->
uid
 = 
ﬁd_ruid
;

176  (-
EPERM
);

180 
	}
}

186 
	$sys_£tuid
 (
uid
)

188  (
	`sys_£åeuid
 (
uid
, uid));

189 
	}
}

194 
	$sys_°ime
 (*
çå
)

196 i‡(!
	`su£r
 ())

197  -
EPERM
;

198 
°¨tup_time
 = 
	`gë_fs_l⁄g
 ((*Ë
çå
Ë- 
jiffõs
 / 
HZ
;

200 
	}
}

204 
	$sys_times
 (
tms
 *
tbuf
)

206 i‡(
tbuf
)

208 
	`vîify_¨ó
 (
tbuf
,  *tbuf);

209 
	`put_fs_l⁄g
 (
cuºít
->
utime
, (*Ë&
tbuf
->
tms_utime
);

210 
	`put_fs_l⁄g
 (
cuºít
->
°ime
, (*Ë&
tbuf
->
tms_°ime
);

211 
	`put_fs_l⁄g
 (
cuºít
->
cutime
, (*Ë&
tbuf
->
tms_cutime
);

212 
	`put_fs_l⁄g
 (
cuºít
->
c°ime
, (*Ë&
tbuf
->
tms_c°ime
);

214  
jiffõs
;

215 
	}
}

222 
	$sys_brk
 (
íd_d©a_£g
)

224 i‡(
íd_d©a_£g
 >
cuºít
->
íd_code
 &&

225 
íd_d©a_£g
 < 
cuºít
->
°¨t_°ack
 - 16384)

226 
cuºít
->
brk
 = 
íd_d©a_£g
;

227  
cuºít
->
brk
;

228 
	}
}

244 
	$sys_£çgid
 (
pid
, 
pgid
)

246 
i
;

248 i‡(!
pid
)

249 
pid
 = 
cuºít
->pid;

250 i‡(!
pgid
)

251 
pgid
 = 
cuºít
->
pid
;

252 
i
 = 0; i < 
NR_TASKS
; i++)

253 i‡(
èsk
[
i
] &&Åask[i]->
pid
 ==Öid)

255 i‡(
èsk
[
i
]->
Àadî
)

256  -
EPERM
;

257 i‡(
èsk
[
i
]->
£ssi⁄
 !
cuºít
->session)

258  -
EPERM
;

259 
èsk
[
i
]->
pgΩ
 = 
pgid
;

262  -
ESRCH
;

263 
	}
}

267 
	$sys_gëpgΩ
 ()

269  
cuºít
->
pgΩ
;

270 
	}
}

274 
	$sys_£tsid
 ()

276 i‡(
cuºít
->
Àadî
 && !
	`su£r
 ())

277  -
EPERM
;

278 
cuºít
->
Àadî
 = 1;

279 
cuºít
->
£ssi⁄
 = cuºít->
pgΩ
 = cuºít->
pid
;

280 
cuºít
->
ây
 = -1;

281  
cuºít
->
pgΩ
;

282 
	}
}

287 
	$sys_u«me
 (
ut¢ame
 *
«me
)

289 
ut¢ame
 
thi¢ame
 = {

292 
i
;

294 i‡(!
«me
)

295  -
ERROR
;

296 
	`vîify_¨ó
 (
«me
,  *name);

297 
i
 = 0; i <  *
«me
; i++)

298 
	`put_fs_byã
 (((*Ë&
thi¢ame
)[
i
], i + (*Ë
«me
);

300 
	}
}

304 
	$sys_umask
 (
mask
)

306 
ﬁd
 = 
cuºít
->
umask
;

308 
cuºít
->
umask
 = 
mask
 & 0777;

309  (
ﬁd
);

310 
	}
}

	@kernel/vsprintf.c

12 
	~<°d¨g.h
>

15 
	~<°rög.h
>

19 
	#is_digô
(
c
) ((c) >= '' && (c) <= '9')

20 

	)

23 
	$skù_©oi
 (c⁄° **
s
)

25 
i
 = 0;

27 
	`is_digô
 (**
s
))

28 
i
 = i * 10 + *((*
s
)++) - '';

29  
i
;

30 
	}
}

33 
	#ZEROPAD
 1

	)

34 
	#SIGN
 2

	)

35 
	#PLUS
 4

	)

36 
	#SPACE
 8

	)

37 
	#LEFT
 16

	)

38 
	#SPECIAL
 32

	)

39 
	#SMALL
 64

	)

43 
	#do_div
(
n
,
ba£
) ({ \

44 
__ªs
; \

45 
	`__asm__
–"div»%4": "˜" (
n
), "=d" (
__ªs
): "" (n), "1" (0), "r" (
ba£
)); \

46 
__ªs
; })

	)

52 
	$numbî
 (*
°r
, 
num
, 
ba£
, 
size
, 
¥ecisi⁄
, 
ty≥
)

54 
c
, 
sign
, 
tmp
[36];

55 c⁄° *
digôs
 = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";

56 
i
;

61 i‡(
ty≥
 & 
SMALL
)

62 
digôs
 = "0123456789abcdefghijklmnopqrstuvwxyz";

63 i‡(
ty≥
 & 
LEFT
)

64 
ty≥
 &~
ZEROPAD
;

65 i‡(
ba£
 < 2 || base > 36)

70 
c
 = (
ty≥
 & 
ZEROPAD
) ? '' : ' ';

71 i‡(
ty≥
 & 
SIGN
 && 
num
 < 0)

73 
sign
 = '-';

74 
num
 = -num;

77 
sign
 = (
ty≥
 & 
PLUS
Ë? '+' : (—y≥ & 
SPACE
) ? ' ' : 0);

80 i‡(
sign
)

81 
size
--;

82 i‡(
ty≥
 & 
SPECIAL
)

83 i‡(
ba£
 == 16)

84 
size
 -= 2;

85 i‡(
ba£
 == 8)

86 
size
--;

88 
i
 = 0;

89 i‡(
num
 == 0)

90 
tmp
[
i
++] = '';

92 
num
 != 0)

93 
tmp
[
i
++] = 
digôs
[
	`do_div
 (
num
, 
ba£
)];

96 i‡(
i
 > 
¥ecisi⁄
)

97 
¥ecisi⁄
 = 
i
;

98 
size
 -
¥ecisi⁄
;

102 i‡(!(
ty≥
 & (
ZEROPAD
 + 
LEFT
)))

103 
size
-- > 0)

104 *
°r
++ = ' ';

105 i‡(
sign
)

106 *
°r
++ = 
sign
;

108 i‡(
ty≥
 & 
SPECIAL
)

109 i‡(
ba£
 == 8)

110 *
°r
++ = '';

111 i‡(
ba£
 == 16)

113 *
°r
++ = '';

114 *
°r
++ = 
digôs
[33];

117 i‡(!(
ty≥
 & 
LEFT
))

118 
size
-- > 0)

119 *
°r
++ = 
c
;

121 
i
 < 
¥ecisi⁄
--)

122 *
°r
++ = '';

124 
i
-- > 0)

125 *
°r
++ = 
tmp
[
i
];

127 
size
-- > 0)

128 *
°r
++ = ' ';

129  
°r
;

130 
	}
}

137 
	$v•rötf
 (*
buf
, c⁄° *
fmt
, 
va_li°
 
¨gs
)

139 
Àn
;

140 
i
;

141 *
°r
;

142 *
s
;

143 *
ù
;

145 
Êags
;

147 
fõld_width
;

149 
¥ecisi⁄
;

152 
quÆifõr
;

155 
°r
 = 
buf
; *
fmt
; ++fmt)

159 i‡(*
fmt
 != '%')

161 *
°r
++ = *
fmt
;

167 
Êags
 = 0;

168 
ª≥©
:

169 ++
fmt
;

170 *
fmt
)

173 
Êags
 |
LEFT
;

174 
ª≥©
;

176 
Êags
 |
PLUS
;

177 
ª≥©
;

179 
Êags
 |
SPACE
;

180 
ª≥©
;

182 
Êags
 |
SPECIAL
;

183 
ª≥©
;

185 
Êags
 |
ZEROPAD
;

186 
ª≥©
;

194 
fõld_width
 = -1;

195 i‡(
	`is_digô
 (*
fmt
))

196 
fõld_width
 = 
	`skù_©oi
 (&
fmt
);

197 i‡(*
fmt
 == '*')

200 
fõld_width
 = 
	`va_¨g
 (
¨gs
, );

201 i‡(
fõld_width
 < 0)

203 
fõld_width
 = -field_width;

204 
Êags
 |
LEFT
;

213 
¥ecisi⁄
 = -1;

214 i‡(*
fmt
 == '.')

216 ++
fmt
;

217 i‡(
	`is_digô
 (*
fmt
))

218 
¥ecisi⁄
 = 
	`skù_©oi
 (&
fmt
);

219 i‡(*
fmt
 == '*')

222 
¥ecisi⁄
 = 
	`va_¨g
 (
¨gs
, );

224 i‡(
¥ecisi⁄
 < 0)

225 
¥ecisi⁄
 = 0;

230 
quÆifõr
 = -1;

231 i‡(*
fmt
 == 'h' || *fmt == 'l' || *fmt == 'L')

233 
quÆifõr
 = *
fmt
;

234 ++
fmt
;

238 *
fmt
)

244 i‡(!(
Êags
 & 
LEFT
))

245 --
fõld_width
 > 0)

246 *
°r
++ = ' ';

247 *
°r
++ = (Ë
	`va_¨g
 (
¨gs
, );

248 --
fõld_width
 > 0)

249 *
°r
++ = ' ';

257 
s
 = 
	`va_¨g
 (
¨gs
, *);

258 
Àn
 = 
	`°æí
 (
s
);

259 i‡(
¥ecisi⁄
 < 0)

260 
¥ecisi⁄
 = 
Àn
;

261 i‡(
Àn
 > 
¥ecisi⁄
)

262 
Àn
 = 
¥ecisi⁄
;

264 i‡(!(
Êags
 & 
LEFT
))

265 
Àn
 < 
fõld_width
--)

266 *
°r
++ = ' ';

267 
i
 = 0; i < 
Àn
; ++i)

268 *
°r
++ = *
s
++;

269 
Àn
 < 
fõld_width
--)

270 *
°r
++ = ' ';

275 
°r
 = 
	`numbî
 (°r, 
	`va_¨g
 (
¨gs
, ), 8,

276 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

282 i‡(
fõld_width
 == -1)

284 
fõld_width
 = 8;

285 
Êags
 |
ZEROPAD
;

287 
°r
 = 
	`numbî
 (str,

288 (Ë
	`va_¨g
 (
¨gs
, *), 16,

289 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

294 
Êags
 |
SMALL
;

296 
°r
 = 
	`numbî
 (°r, 
	`va_¨g
 (
¨gs
, ), 16,

297 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

304 
Êags
 |
SIGN
;

306 
°r
 = 
	`numbî
 (°r, 
	`va_¨g
 (
¨gs
, ), 10,

307 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

314 
ù
 = 
	`va_¨g
 (
¨gs
, *);

315 *
ù
 = (
°r
 - 
buf
);

322 i‡(*
fmt
 != '%')

323 *
°r
++ = '%';

324 i‡(*
fmt
)

325 *
°r
++ = *
fmt
;

327 --
fmt
;

331 *
°r
 = '\0';

332  
°r
 - 
buf
;

333 
	}
}

	@lib/_exit.c

7 
	#__LIBRARY__


8 8

	)

9 
	~<uni°d.h
>

16 
_exô
 (
exô_code
)

20 12 
__asm__
 ("öà$0x80"::"a" (
__NR_exô
), "b" (
exô_code
));

	@lib/close.c

7 
	#__LIBRARY__


	)

8 
	~<uni°d.h
>

14 
_sysˇŒ1
 (, 
˛o£
, , 
fd
)

	@lib/ctype.c

8 
	~<˘y≥.h
>

10 
	g_˘mp
;

13 
	g_˘y≥
[] = { 0x00,

14 
_C
, _C, _C, _C, _C, _C, _C, _C,

15 
_C
, _C | 
_S
, _C | _S, _C | _S, _C | _S, _C | _S, _C, _C,

16 
_C
, _C, _C, _C, _C, _C, _C, _C,

17 
_C
, _C, _C, _C, _C, _C, _C, _C,

18 
_S
 | 
_SP
, 
_P
, _P, _P, _P, _P, _P, _P,

19 
_P
, _P, _P, _P, _P, _P, _P, _P,

20 
_D
, _D, _D, _D, _D, _D, _D, _D,

21 
_D
, _D, 
_P
, _P, _P, _P, _P, _P,

22 
_P
, 
_U
 | 
_X
, _U | _X, _U | _X, _U | _X, _U | _X, _U | _X, _U,

23 
_U
, _U, _U, _U, _U, _U, _U, _U,

24 
_U
, _U, _U, _U, _U, _U, _U, _U,

25 
_U
, _U, _U, 
_P
, _P, _P, _P, _P,

26 
_P
, 
_L
 | 
_X
, _L | _X, _L | _X, _L | _X, _L | _X, _L | _X, _L,

27 
_L
, _L, _L, _L, _L, _L, _L, _L,

28 
_L
, _L, _L, _L, _L, _L, _L, _L,

29 
_L
, _L, _L, 
_P
, _P, _P, _P, 
_C
,

	@lib/dup.c

8 
	#__LIBRARY__


	)

9 
	~<uni°d.h
>

15 
_sysˇŒ1
 (, 
dup
, , 
fd
)

	@lib/errno.c

7 
	gî∫o
;

	@lib/execve.c

7 
	#__LIBRARY__


	)

8 
	~<uni°d.h
>

16 
_sysˇŒ3
 (, 
execve
, c⁄° *, 
fûe
, **, 
¨gv
, **, 
ívp
)

	@lib/malloc.c

82 
	~<löux/kî√l.h
>

83 
	~<löux/mm.h
>

84 
	~<asm/sy°em.h
>

87 
	sbuckë_desc


89 *
	m∑ge
;

90 
buckë_desc
 *
	m√xt
;

91 *
	m‰ì±r
;

92 
	mªf˙t
;

93 
	mbuckë_size
;

97 
	s_buckë_dú


99 
	msize
;

100 
buckë_desc
 *
	mchaö
;

124 
_buckë_dú
 
	gbuckë_dú
[] = {

125 {16, (
buckë_desc
 *) 0},

126 {32, (
buckë_desc
 *) 0},

127 {64, (
buckë_desc
 *) 0},

128 {128, (
buckë_desc
 *) 0},

129 {256, (
buckë_desc
 *) 0},

130 {512, (
buckë_desc
 *) 0},

131 {1024, (
buckë_desc
 *) 0},

132 {2048, (
buckë_desc
 *) 0},

133 {4096, (
buckë_desc
 *) 0},

134 {0, (
buckë_desc
 *) 0}

143 
buckë_desc
 *
	g‰ì_buckë_desc
 = (bucket_desc *) 0;

153 
ölöe
 

154 
	$öô_buckë_desc
 ()

156 
buckë_desc
 *
bdesc
, *
fú°
;

157 
i
;

160 
fú°
 = 
bdesc
 = (
buckë_desc
 *Ë
	`gë_‰ì_∑ge
 ();

161 i‡(!
bdesc
)

162 
	`∑nic
 ("Out of memory in init_bucket_desc()");

164 
i
 = 
PAGE_SIZE
 /  (
buckë_desc
); i > 1; i--)

166 
bdesc
->
√xt
 = bdesc + 1;

167 
bdesc
++;

179 
bdesc
->
√xt
 = 
‰ì_buckë_desc
;

180 
‰ì_buckë_desc
 = 
fú°
;

181 
	}
}

187 
	$mÆloc
 (
Àn
)

189 
_buckë_dú
 *
bdú
;

190 
buckë_desc
 *
bdesc
;

191 *
ªtvÆ
;

202 
bdú
 = 
buckë_dú
; bdú->
size
; bdir++)

203 i‡(
bdú
->
size
 >
Àn
)

207 i‡(!
bdú
->
size
)

209 
	`¥ötk
 ("mÆlo¯ˇŒed wôh impossiblyÜ¨gê¨gumíà(%d)\n", 
Àn
);

210 
	`∑nic
 ("malloc: badárg");

218 
	`˛i
 ();

221 
bdesc
 = 
bdú
->
chaö
; bdesc; bdes¯bdesc->
√xt
)

222 i‡(
bdesc
->
‰ì±r
)

231 i‡(!
bdesc
)

233 *
˝
;

235 
i
;

239 i‡(!
‰ì_buckë_desc
)

240 
	`öô_buckë_desc
 ();

242 
bdesc
 = 
‰ì_buckë_desc
;

243 
‰ì_buckë_desc
 = 
bdesc
->
√xt
;

246 
bdesc
->
ªf˙t
 = 0;

247 
bdesc
->
buckë_size
 = 
bdú
->
size
;

248 
bdesc
->
∑ge
 = bdesc->
‰ì±r
 = (*Ë
˝
 = 
	`gë_‰ì_∑ge
 ();

250 i‡(!
˝
)

251 
	`∑nic
 ("Out of memory in kernel malloc()");

256 
i
 = 
PAGE_SIZE
 / 
bdú
->
size
; i > 1; i--)

258 *((**Ë
˝
Ë˝ + 
bdú
->
size
;

259 
˝
 +
bdú
->
size
;

264 *((**Ë
˝
) = 0;

265 
bdesc
->
√xt
 = 
bdú
->
chaö
;

266 
bdú
->
chaö
 = 
bdesc
;

270 
ªtvÆ
 = (*Ë
bdesc
->
‰ì±r
;

271 
bdesc
->
‰ì±r
 = *((**Ë
ªtvÆ
);

272 
bdesc
->
ªf˙t
++;

274 
	`°i
 ();

275  (
ªtvÆ
);

276 
	}
}

295 
	$‰ì_s
 (*
obj
, 
size
)

297 *
∑ge
;

298 
_buckë_dú
 *
bdú
;

299 
buckë_desc
 *
bdesc
, *
¥ev
;

303 
∑ge
 = (*Ë((Ë
obj
 & 0xfffff000);

307 
bdú
 = 
buckë_dú
; bdú->
size
; bdir++)

309 
¥ev
 = 0;

312 i‡(
bdú
->
size
 < size)

316 
bdesc
 = 
bdú
->
chaö
; bdesc; bdes¯bdesc->
√xt
)

318 i‡(
bdesc
->
∑ge
 ==Öage)

319 
found
;

320 
¥ev
 = 
bdesc
;

324 
	`∑nic
 ("BadáddressÖassedÅo kernel free_s()");

325 
found
:

328 
	`˛i
 ();

329 *((**Ë
obj
Ë
bdesc
->
‰ì±r
;

330 
bdesc
->
‰ì±r
 = 
obj
;

331 
bdesc
->
ªf˙t
--;

333 i‡(
bdesc
->
ªf˙t
 == 0)

344 i‡((
¥ev
 && (¥ev->
√xt
 !
bdesc
)) ||

345 (!
¥ev
 && (
bdú
->
chaö
 !
bdesc
)))

346 
¥ev
 = 
bdú
->
chaö
;Öªv;Öªv =Öªv->
√xt
)

348 i‡(
¥ev
->
√xt
 =
bdesc
)

351 i‡(
¥ev
)

352 
¥ev
->
√xt
 = 
bdesc
->next;

358 i‡(
bdú
->
chaö
 !
bdesc
)

359 
	`∑nic
 ("malloc bucket chains corrupted");

360 
bdú
->
chaö
 = 
bdesc
->
√xt
;

363 
	`‰ì_∑ge
 ((Ë
bdesc
->
∑ge
);

364 
bdesc
->
√xt
 = 
‰ì_buckë_desc
;

365 
‰ì_buckë_desc
 = 
bdesc
;

368 
	`°i
 ();

370 
	}
}

	@lib/open.c

7 
	#__LIBRARY__


	)

8 
	~<uni°d.h
>

10 
	~<°d¨g.h
>

19 
	$›í
 (c⁄° *
fûíame
, 
Êag
, ...)

21 
ªs
;

22 
va_li°
 
¨g
;

28 
	`va_°¨t
 (
¨g
, 
Êag
);

29 
	`__asm__
 ("öà$0x80": "˜" (
ªs
):"" (
__NR_›í
), "b" (
fûíame
), "c" (
Êag
),

30 "d" (
	`va_¨g
 (
¨g
, )));

32 i‡(
ªs
 >= 0)

33  
ªs
;

35 
î∫o
 = -
ªs
;

37 
	}
}

	@lib/setsid.c

7 
	#__LIBRARY__


	)

8 
	~<uni°d.h
>

14 
_sysˇŒ0
 (
pid_t
, 
£tsid
)

	@lib/string.c

7 #i‚de‡
__GNUC__


8 #îr‹ 
I
 
w™t
 
gcc
!

11 

	)

12 
	#ölöe


	)

13 
	#__LIBRARY__


	)

14 
	~<°rög.h
>

	@lib/wait.c

7 
	#__LIBRARY__


	)

8 
	~<uni°d.h
>

10 
	~<sys/waô.h
>

17 
	$_sysˇŒ3
 (
pid_t
, 
waôpid
,Öid_t, 
pid
, *, 
waô_°©
, , 
›ti⁄s
)

19 
pid_t
 
	$waô
 (*
waô_°©
)

21  
	`waôpid
 (-1, 
waô_°©
, 0);

22 
	}
}

	@lib/write.c

7 
	#__LIBRARY__


	)

8 
	~<uni°d.h
>

15 
_sysˇŒ3
 (, 
wrôe
, , 
fd
, c⁄° *, 
buf
, 
off_t
, 
cou¡
)

	@mm/memory.c

36 
	~<sig«l.h
>

38 
	~<asm/sy°em.h
>

40 
	~<löux/sched.h
>

42 
	~<löux/hód.h
>

43 
	~<löux/kî√l.h
>

45 vﬁ©ûê
do_exô
 (
code
);

48 
ölöe
 volatile 

49 
	$oom
 ()

51 
	`¥ötk
 ("out of memory\n\r");

52 
	`do_exô
 (
SIGSEGV
);

53 
	}
}

59 
	#övÆid©e
() \

60 
	`__asm__
–"mov»%%óx,%%¸3":: "a" (0))

	)

65 
	#LOW_MEM
 0x100000

66 
	#PAGING_MEMORY
 (15*1024*1024)

67 
	#PAGING_PAGES
 (
PAGING_MEMORY
>>12)

68 
	#MAP_NR
(
addr
Ë((◊ddr)-
LOW_MEM
)>>12)

69 
	#USED
 100

70 

	)

73 
	#CODE_SPACE
(
addr
) ((((addr)+4095)&~4095) < \

74 
cuºít
->
°¨t_code
 + cuºít->
íd_code
)

	)

76 
	gHIGH_MEMORY
 = 0;

79 
	#c›y_∑ge
(
‰om
,
to
) \

80 
	`__asm__
–"˛d ;Ñï ; mov¶":: "S" (
‰om
), "D" (
to
), "c" (1024): "cx", "di", "si")

	)

83 
	gmem_m≠
[
PAGING_PAGES
] = { 0, };

101 
	$gë_‰ì_∑ge
 ()

103 
__ªs
 
	`asm
 ("ax");

105 
	`__asm__
 ("std ;Ñepne ; scasb\n\t"

115 "1:": "˜" (
__ªs
): "" (0), "i" (
LOW_MEM
), "c" (
PAGING_PAGES
), "D" (
mem_m≠
 + PAGING_PAGES - 1):"di", "cx",

117  
__ªs
;

118 
	}
}

130 
	$‰ì_∑ge
 (
addr
)

132 i‡(
addr
 < 
LOW_MEM
)

134 i‡(
addr
 >
HIGH_MEMORY
)

135 
	`∑nic
 ("tryingÅo freeÇonexistentÖage");

136 
addr
 -
LOW_MEM
;

137 
addr
 >>= 12;

138 i‡(
mem_m≠
[
addr
]--)

140 
mem_m≠
[
addr
] = 0;

141 
	`∑nic
 ("tryingÅo free freeÖage");

142 
	}
}

158 
	$‰ì_∑ge_èbÀs
 (
‰om
, 
size
)

160 *
pg_èbÀ
;

161 *
dú
, 
ƒ
;

163 i‡(
‰om
 & 0x3fffff)

164 
	`∑nic
 ("free_page_tables called with wrongálignment");

165 i‡(!
‰om
)

166 
	`∑nic
 ("TryingÅo free up swapper memory space");

168 
size
 = (size + 0x3fffff) >> 22;

172 
dú
 = (*Ë((
‰om
 >> 20) & 0xffc);

173 ; 
size
-- > 0; 
dú
++)

175 i‡(!(1 & *
dú
))

177 
pg_èbÀ
 = (*Ë(0xfffff000 & *
dú
);

178 
ƒ
 = 0;Çr < 1024;Çr++)

180 i‡(1 & *
pg_èbÀ
)

181 
	`‰ì_∑ge
 (0xfffff000 & *
pg_èbÀ
);

182 *
pg_èbÀ
 = 0;

183 
pg_èbÀ
++;

185 
	`‰ì_∑ge
 (0xfffff000 & *
dú
);

187 *
dú
 = 0;

189 
	`övÆid©e
 ();

191 
	}
}

230 
	$c›y_∑ge_èbÀs
 (
‰om
, 
to
, 
size
)

232 *
‰om_∑ge_èbÀ
;

233 *
to_∑ge_èbÀ
;

234 
this_∑ge
;

235 *
‰om_dú
, *
to_dú
;

236 
ƒ
;

239 i‡((
‰om
 & 0x3fffffË|| (
to
 & 0x3fffff))

240 
	`∑nic
 ("copy_page_tables called with wrongálignment");

242 
‰om_dú
 = (*Ë((
‰om
 >> 20) & 0xffc);

243 
to_dú
 = (*Ë((
to
 >> 20) & 0xffc);

245 
size
 = (() (size + 0x3fffff)) >> 22;

247 ; 
size
-- > 0; 
‰om_dú
++, 
to_dú
++)

250 i‡(1 & *
to_dú
)

251 
	`∑nic
 ("copy_page_tables:álreadyÉxist");

253 i‡(!(1 & *
‰om_dú
))

256 
‰om_∑ge_èbÀ
 = (*Ë(0xfffff000 & *
‰om_dú
);

258 i‡(!(
to_∑ge_èbÀ
 = (*Ë
	`gë_‰ì_∑ge
 ()))

261 *
to_dú
 = ((Ë
to_∑ge_èbÀ
) | 7;

264 
ƒ
 = (
‰om
 == 0) ? 0xA0 : 1024;

266 ; 
ƒ
-- > 0; 
‰om_∑ge_èbÀ
++, 
to_∑ge_èbÀ
++)

268 
this_∑ge
 = *
‰om_∑ge_èbÀ
;

269 i‡(!(1 & 
this_∑ge
))

273 
this_∑ge
 &= ~2;

274 *
to_∑ge_èbÀ
 = 
this_∑ge
;

277 i‡(
this_∑ge
 > 
LOW_MEM
)

282 *
‰om_∑ge_èbÀ
 = 
this_∑ge
;

283 
this_∑ge
 -
LOW_MEM
;

284 
this_∑ge
 >>= 12;

285 
mem_m≠
[
this_∑ge
]++;

289 
	`övÆid©e
 ();

291 
	}
}

306 
	$put_∑ge
 (
∑ge
, 
addªss
)

308 
tmp
, *
∑ge_èbÀ
;

314 i‡(
∑ge
 < 
LOW_MEM
 ||Öagê>
HIGH_MEMORY
)

315 
	`¥ötk
 ("TryögÅÿpuà∑gê%∞© %p\n", 
∑ge
, 
addªss
);

317 i‡(
mem_m≠
[(
∑ge
 - 
LOW_MEM
) >> 12] != 1)

318 
	`¥ötk
 ("mem_m≠ dißgªe†wôh %∞© %p\n", 
∑ge
, 
addªss
);

320 
∑ge_èbÀ
 = (*Ë((
addªss
 >> 20) & 0xffc);

322 i‡((*
∑ge_èbÀ
) & 1)

323 
∑ge_èbÀ
 = (*) (0xfffff000 & *page_table);

328 i‡(!(
tmp
 = 
	`gë_‰ì_∑ge
 ()))

330 *
∑ge_èbÀ
 = 
tmp
 | 7;

331 
∑ge_èbÀ
 = (*Ë
tmp
;

334 
∑ge_èbÀ
[(
addªss
 >> 12Ë& 0x3ff] = 
∑ge
 | 7;

337  
∑ge
;

338 
	}
}

344 
	$un_wp_∑ge
 (*
èbÀ_íåy
)

346 
ﬁd_∑ge
, 
√w_∑ge
;

348 
ﬁd_∑ge
 = 0xfffff000 & *
èbÀ_íåy
;

352 i‡(
ﬁd_∑ge
 >
LOW_MEM
 && 
mem_m≠
[
	`MAP_NR
 (old_page)] == 1)

354 *
èbÀ_íåy
 |= 2;

355 
	`övÆid©e
 ();

359 i‡(!(
√w_∑ge
 = 
	`gë_‰ì_∑ge
 ()))

360 
	`oom
 ();

364 i‡(
ﬁd_∑ge
 >
LOW_MEM
)

365 
mem_m≠
[
	`MAP_NR
 (
ﬁd_∑ge
)]--;

366 *
èbÀ_íåy
 = 
√w_∑ge
 | 7;

367 
	`övÆid©e
 ();

368 
	`c›y_∑ge
 (
ﬁd_∑ge
, 
√w_∑ge
);

369 
	}
}

388 
	$do_wp_∑ge
 (
îr‹_code
, 
addªss
)

395 i‡(
	`CODE_SPACE
 (
addªss
))

396 
	`do_exô
 (
SIGSEGV
);

403 
	`un_wp_∑ge
 ((*)

404 (((
addªss
 >> 10) & 0xffc) + (0xfffff000 &

406 *Ë((
addªss
 >> 20) &

409 
	}
}

414 
	$wrôe_vîify
 (
addªss
)

416 
∑ge
;

419 i‡(!((
∑ge
 = *((*Ë((
addªss
 >> 20) & 0xffc))) & 1))

422 
∑ge
 &= 0xfffff000;

423 
∑ge
 +((
addªss
 >> 10) & 0xffc);

425 i‡((3 & *(*Ë
∑ge
) == 1)

426 
	`un_wp_∑ge
 ((*Ë
∑ge
);

428 
	}
}

435 
	$gë_em±y_∑ge
 (
addªss
)

437 
tmp
;

442 i‡(!(
tmp
 = 
	`gë_‰ì_∑ge
 ()Ë|| !
	`put_∑ge
 (tmp, 
addªss
))

444 
	`‰ì_∑ge
 (
tmp
);

445 
	`oom
 ();

447 
	}
}

467 
	$åy_to_sh¨e
 (
addªss
, 
èsk_°ru˘
 *
p
)

469 
‰om
;

470 
to
;

471 
‰om_∑ge
;

472 
to_∑ge
;

473 
phys_addr
;

476 
‰om_∑ge
 = 
to_∑ge
 = ((
addªss
 >> 20) & 0xffc);

478 
‰om_∑ge
 +((
p
->
°¨t_code
 >> 20) & 0xffc);

480 
to_∑ge
 +((
cuºít
->
°¨t_code
 >> 20) & 0xffc);

485 
‰om
 = *(*Ë
‰om_∑ge
;

486 i‡(!(
‰om
 & 1))

488 
‰om
 &= 0xfffff000;

490 
‰om_∑ge
 = 
‰om
 + ((
addªss
 >> 10) & 0xffc);

491 
phys_addr
 = *(*Ë
‰om_∑ge
;

495 i‡((
phys_addr
 & 0x41) != 0x01)

498 
phys_addr
 &= 0xfffff000;

499 i‡(
phys_addr
 >
HIGH_MEMORY
 ||Öhys_add∏< 
LOW_MEM
)

503 
to
 = *(*Ë
to_∑ge
;

504 i‡(!(
to
 & 1))

505 i‡(
to
 = 
	`gë_‰ì_∑ge
 ())

506 *(*Ë
to_∑ge
 = 
to
 | 7;

508 
	`oom
 ();

510 
to
 &= 0xfffff000;

511 
to_∑ge
 = 
to
 + ((
addªss
 >> 10) & 0xffc);

512 i‡(1 & *(*Ë
to_∑ge
)

513 
	`∑nic
 ("try_to_share:Åo_pageálreadyÉxists");

517 *(*Ë
‰om_∑ge
 &= ~2;

518 *(*Ë
to_∑ge
 = *(*Ë
‰om_∑ge
;

520 
	`övÆid©e
 ();

522 
phys_addr
 -
LOW_MEM
;

523 
phys_addr
 >>= 12;

524 
mem_m≠
[
phys_addr
]++;

526 
	}
}

546 
	$sh¨e_∑ge
 (
addªss
)

548 
èsk_°ru˘
 **
p
;

551 i‡(!
cuºít
->
execuèbÀ
)

554 i‡(
cuºít
->
execuèbÀ
->
i_cou¡
 < 2)

557 
p
 = &
LAST_TASK
;Ö > &
FIRST_TASK
; --p)

559 i‡(!*
p
)

561 i‡(
cuºít
 =*
p
)

563 i‡((*
p
)->
execuèbÀ
 !
cuºít
->executable)

565 i‡(
	`åy_to_sh¨e
 (
addªss
, *
p
))

569 
	}
}

574 
	$do_no_∑ge
 (
îr‹_code
, 
addªss
)

576 
ƒ
[4];

577 
tmp
;

578 
∑ge
;

579 
block
, 
i
;

581 
addªss
 &= 0xfffff000;

583 
tmp
 = 
addªss
 - 
cuºít
->
°¨t_code
;

590 i‡(!
cuºít
->
execuèbÀ
 || 
tmp
 >cuºít->
íd_d©a
)

592 
	`gë_em±y_∑ge
 (
addªss
);

596 i‡(
	`sh¨e_∑ge
 (
tmp
))

599 i‡(!(
∑ge
 = 
	`gë_‰ì_∑ge
 ()))

600 
	`oom
 ();

604 
block
 = 1 + 
tmp
 / 
BLOCK_SIZE
;

606 
i
 = 0; i < 4; 
block
++, i++)

607 
ƒ
[
i
] = 
	`bm≠
 (
cuºít
->
execuèbÀ
, 
block
);

609 
	`bªad_∑ge
 (
∑ge
, 
cuºít
->
execuèbÀ
->
i_dev
, 
ƒ
);

612 
i
 = 
tmp
 + 4096 - 
cuºít
->
íd_d©a
;

613 
tmp
 = 
∑ge
 + 4096;

614 
i
-- > 0)

616 
tmp
--;

617 *(*Ë
tmp
 = 0;

620 i‡(
	`put_∑ge
 (
∑ge
, 
addªss
))

622 
	`‰ì_∑ge
 (
∑ge
);

623 
	`oom
 ();

624 
	}
}

632 
	$mem_öô
 (
°¨t_mem
, 
íd_mem
)

634 
i
;

636 
HIGH_MEMORY
 = 
íd_mem
;

637 
i
 = 0; i < 
PAGING_PAGES
; i++)

638 
mem_m≠
[
i
] = 
USED
;

639 
i
 = 
	`MAP_NR
 (
°¨t_mem
);

640 
íd_mem
 -
°¨t_mem
;

641 
íd_mem
 >>= 12;

642 
íd_mem
-- > 0)

643 
mem_m≠
[
i
++] = 0;

644 
	}
}

648 
	$ˇlc_mem
 ()

650 
i
, 
j
, 
k
, 
‰ì
 = 0;

651 *
pg_tbl
;

654 
i
 = 0; i < 
PAGING_PAGES
; i++)

655 i‡(!
mem_m≠
[
i
])

656 
‰ì
++;

657 
	`¥ötk
 ("%dÖage†‰ì (o‡%d)\n\r", 
‰ì
, 
PAGING_PAGES
);

659 
i
 = 2; i < 1024; i++)

661 i‡(1 & 
pg_dú
[
i
])

663 
pg_tbl
 = (*Ë(0xfffff000 & 
pg_dú
[
i
]);

664 10.5 
∑ge
.
s
 ≥ Ã–Ú
j
 = 
k
 = 0; j < 1024; j++)

665 i‡(
pg_tbl
[
j
] & 1)

666 
k
++;

667 
	`¥ötk
 ("Pg-dú[%d] u£†%dÖages\n", 
i
, 
k
);

670 
	}
}

	@tools/build.c

36 
	~<°dio.h
>

37 
	~<°rög.h
>

38 
	~<°dlib.h
>

39 
	~<sys/ty≥s.h
>

40 
	~<sys/°©.h
>

41 
	~<löux/fs.h
>

42 
	~<uni°d.h
>

43 
	~<f˙é.h
>

45 
	#MINIX_HEADER
 32

46 
	#GCC_HEADER
 1024

47 

	)

48 
	#SYS_SIZE
 0x2000

49 

	)

51 
	#DEFAULT_MAJOR_ROOT
 3

52 
	#DEFAULT_MINOR_ROOT
 6

53 

	)

59 
	#STRINGIFY
(
x
) #x

60 

	)

63 
	$dõ
 (*
°r
)

65 
	`Ârötf
 (
°dîr
, "%s\n", 
°r
);

66 
	`exô
 (1);

67 
	}
}

71 
	$ußge
 ()

73 
	`dõ
 ("Usage: build bootsect setup system [rootdev] [> image]");

74 
	}
}

77 
	$maö
 (
¨gc
, **
¨gv
)

79 
i
, 
c
, 
id
;

80 
buf
[1024];

81 
maj‹_roŸ
, 
mö‹_roŸ
;

82 
°©
 
sb
;

85 i‡((
¨gc
 != 4) && (argc != 5))

86 
	`ußge
 ();

88 i‡(
¨gc
 == 5)

91 i‡(
	`°rcmp
 (
¨gv
[4], "FLOPPY"))

93 i‡(
	`°©
 (
¨gv
[4], &
sb
))

95 
	`≥º‹
 (
¨gv
[4]);

96 
	`dõ
 ("Couldn't statÑoot device.");

99 
maj‹_roŸ
 = 
	`MAJOR
 (
sb
.
°_rdev
);

100 
mö‹_roŸ
 = 
	`MINOR
 (
sb
.
°_rdev
);

105 
maj‹_roŸ
 = 0;

106 
mö‹_roŸ
 = 0;

112 
maj‹_roŸ
 = 
DEFAULT_MAJOR_ROOT
;

113 
mö‹_roŸ
 = 
DEFAULT_MINOR_ROOT
;

117 
	`Ârötf
 (
°dîr
, "RoŸ devi˚ i†(%d, %d)\n", 
maj‹_roŸ
, 
mö‹_roŸ
);

119 i‡((
maj‹_roŸ
 != 2) && (major_root != 3) && (major_root != 0))

121 
	`Ârötf
 (
°dîr
, "IŒegÆÑoŸ devi˚ (maj‹ = %d)\n", 
maj‹_roŸ
);

122 
	`dõ
 ("BadÑoot device --- major #");

125 
i
 = 0; i <  
buf
; i++)

126 
buf
[
i
] = 0;

128 i‡((
id
 = 
	`›í
 (
¨gv
[1], 
O_RDONLY
, 0)) < 0)

129 
	`dõ
 ("UnableÅo open 'boot'");

131 i‡(
	`ªad
 (
id
, 
buf
, 
MINIX_HEADER
) != MINIX_HEADER)

132 
	`dõ
 ("UnableÅoÑead header of 'boot'");

134 i‡(((*Ë
buf
)[0] != 0x04100301)

135 
	`dõ
 ("Non-Minix header of 'boot'");

137 i‡(((*Ë
buf
)[1] !
MINIX_HEADER
)

138 
	`dõ
 ("Non-Minix header of 'boot'");

140 i‡(((*Ë
buf
)[3] != 0)

141 
	`dõ
 ("Illegal data segment in 'boot'");

143 i‡(((*Ë
buf
)[4] != 0)

144 
	`dõ
 ("Illegal bss in 'boot'");

146 i‡(((*Ë
buf
)[5] != 0)

147 
	`dõ
 ("Non-Minix header of 'boot'");

149 i‡(((*Ë
buf
)[7] != 0)

150 
	`dõ
 ("Illegal symbolÅable in 'boot'");

152 
i
 = 
	`ªad
 (
id
, 
buf
,  buf);

153 
	`Ârötf
 (
°dîr
, "BoŸ se˘‹ %d byãs.\n", 
i
);

154 i‡(
i
 != 512)

155 
	`dõ
 ("Boot block must beÉxactly 512 bytes");

157 i‡((*(*Ë(
buf
 + 510)) != 0xAA55)

158 
	`dõ
 ("Boot block hasn't got boot flag (0xAA55)");

160 
buf
[508] = (Ë
mö‹_roŸ
;

161 
buf
[509] = (Ë
maj‹_roŸ
;

163 
i
 = 
	`wrôe
 (1, 
buf
, 512);

164 i‡(
i
 != 512)

165 
	`dõ
 ("Write call failed");

167 
	`˛o£
 (
id
);

171 i‡((
id
 = 
	`›í
 (
¨gv
[2], 
O_RDONLY
, 0)) < 0)

172 
	`dõ
 ("UnableÅo open 'setup'");

174 i‡(
	`ªad
 (
id
, 
buf
, 
MINIX_HEADER
) != MINIX_HEADER)

175 
	`dõ
 ("UnableÅoÑead header of 'setup'");

177 i‡(((*Ë
buf
)[0] != 0x04100301)

178 
	`dõ
 ("Non-Minix header of 'setup'");

180 i‡(((*Ë
buf
)[1] !
MINIX_HEADER
)

181 
	`dõ
 ("Non-Minix header of 'setup'");

183 i‡(((*Ë
buf
)[3] != 0)

184 
	`dõ
 ("Illegal data segment in 'setup'");

186 i‡(((*Ë
buf
)[4] != 0)

187 
	`dõ
 ("Illegal bss in 'setup'");

189 i‡(((*Ë
buf
)[5] != 0)

190 
	`dõ
 ("Non-Minix header of 'setup'");

192 i‡(((*Ë
buf
)[7] != 0)

193 
	`dõ
 ("Illegal symbolÅable in 'setup'");

195 
i
 = 0; (
c
 = 
	`ªad
 (
id
, 
buf
,  buf)) > 0; i += c)

196 i‡(
	`wrôe
 (1, 
buf
, 
c
) != c)

197 
	`dõ
 ("Write call failed");

199 
	`˛o£
 (
id
);

201 i‡(
i
 > 
SETUP_SECTS
 * 512)

202 
	`dõ
 ("Sëu∞ex˚ed†" 
	`STRINGIFY
 (
SETUP_SECTS
)

205 
	`Ârötf
 (
°dîr
, "Sëu∞i†%d byãs.\n", 
i
);

207 
c
 = 0; c <  (
buf
); c++)

208 
buf
[
c
] = '\0';

210 
i
 < 
SETUP_SECTS
 * 512)

212 
c
 = 
SETUP_SECTS
 * 512 - 
i
;

213 i‡(
c
 >  (
buf
))

214 
c
 =  (
buf
);

215 i‡(
	`wrôe
 (1, 
buf
, 
c
) != c)

216 
	`dõ
 ("Write call failed");

217 
i
 +
c
;

221 i‡((
id
 = 
	`›í
 (
¨gv
[3], 
O_RDONLY
, 0)) < 0)

222 
	`dõ
 ("UnableÅo open 'system'");

225 i‡(
	`ªad
 (
id
, 
buf
, 
GCC_HEADER
) != GCC_HEADER)

226 
	`dõ
 ("UnableÅoÑead header of 'system'");

228 i‡(((*Ë
buf
)[5] != 0)

229 
	`dõ
 ("Non-GCC header of 'system'");

231 
i
 = 0; (
c
 = 
	`ªad
 (
id
, 
buf
,  buf)) > 0; i += c)

232 i‡(
	`wrôe
 (1, 
buf
, 
c
) != c)

233 
	`dõ
 ("Write call failed");

235 
	`˛o£
 (
id
);

236 
	`Ârötf
 (
°dîr
, "Sy°em i†%d byãs.\n", 
i
);

238 i‡(
i
 > 
SYS_SIZE
 * 16)

239 
	`dõ
 ("System isÅoo big");

241 
	}
}

	@/usr/include/a.out.h

1 #i‚de‡
__A_OUT_GNU_H__


2 
	#__A_OUT_GNU_H__


	)

4 
	~<bôs/a.out.h
>

6 
	#__GNU_EXEC_MACROS__


	)

8 
	sexec


10 
	ma_öfo
;

11 
	ma_ãxt
;

12 
	ma_d©a
;

13 
	ma_bss
;

14 
	ma_syms
;

15 
	ma_íåy
;

16 
	ma_åsize
;

17 
	ma_drsize
;

20 
	emachöe_ty≥


22 
	mM_OLDSUN2
 = 0,

23 
	mM_68010
 = 1,

24 
	mM_68020
 = 2,

25 
	mM_SPARC
 = 3,

26 
	mM_386
 = 100,

27 
	mM_MIPS1
 = 151,

28 
	mM_MIPS2
 = 152

31 
	#N_MAGIC
(
exec
Ë(”xec).
a_öfo
 & 0xffff)

	)

32 
	#N_MACHTYPE
(
exec
Ë((
machöe_ty≥
)((”xec).
a_öfo
 >> 16Ë& 0xff))

	)

33 
	#N_FLAGS
(
exec
Ë((”xec).
a_öfo
 >> 24Ë& 0xff)

	)

34 
	#N_SET_INFO
(
exec
, 
magic
, 
ty≥
, 
Êags
) \

35 ((
exec
).
a_öfo
 = ((
magic
) & 0xffff) \

36 | ((()(
ty≥
) & 0xff) << 16) \

37 | (((
Êags
Ë& 0xffË<< 24))

	)

38 
	#N_SET_MAGIC
(
exec
, 
magic
) \

39 ((
exec
).
a_öfo
 = (”xec).a_öfÿ& 0xffff0000Ë| ((
magic
Ë& 0xffff))

	)

40 
	#N_SET_MACHTYPE
(
exec
, 
machty≥
) \

41 ((
exec
).
a_öfo
 = \

42 ((
exec
).
a_öfo
&0xff00ffffË| (((()(
machty≥
))&0xffË<< 16))

	)

43 
	#N_SET_FLAGS
(
exec
, 
Êags
) \

44 ((
exec
).
a_öfo
 = \

45 ((
exec
).
a_öfo
&0x00ffffffË| (((
Êags
Ë& 0xffË<< 24))

	)

48 
	#OMAGIC
 0407

	)

50 
	#NMAGIC
 0410

	)

52 
	#ZMAGIC
 0413

	)

55 
	#QMAGIC
 0314

	)

57 
	#CMAGIC
 0421

	)

59 
	#N_TRSIZE
(
a
Ë(◊).
a_åsize
)

	)

60 
	#N_DRSIZE
(
a
Ë(◊).
a_drsize
)

	)

61 
	#N_SYMSIZE
(
a
Ë(◊).
a_syms
)

	)

62 
	#N_BADMAG
(
x
) \

63 (
	`N_MAGIC
(
x
Ë!
OMAGIC
 && N_MAGIC(xË!
NMAGIC
 \

64 && 
	`N_MAGIC
(
x
Ë!
ZMAGIC
 && N_MAGIC(xË!
QMAGIC
)

	)

65 
	#_N_HDROFF
(
x
Ë(1024 -  (
exec
))

	)

66 
	#N_TXTOFF
(
x
) \

67 (
	`N_MAGIC
(
x
Ë=
ZMAGIC
 ? 
	`_N_HDROFF
((x)Ë+  (
exec
) : \

68 (
	`N_MAGIC
(
x
Ë=
QMAGIC
 ? 0 :  (
exec
)))

	)

69 
	#N_DATOFF
(
x
Ë(
	`N_TXTOFF
(xË+ (x).
a_ãxt
)

	)

70 
	#N_TRELOFF
(
x
Ë(
	`N_DATOFF
(xË+ (x).
a_d©a
)

	)

71 
	#N_DRELOFF
(
x
Ë(
	`N_TRELOFF
(xË+ 
	`N_TRSIZE
(x))

	)

72 
	#N_SYMOFF
(
x
Ë(
	`N_DRELOFF
(xË+ 
	`N_DRSIZE
(x))

	)

73 
	#N_STROFF
(
x
Ë(
	`N_SYMOFF
(xË+ 
	`N_SYMSIZE
(x))

	)

76 
	#N_TXTADDR
(
x
Ë(
	`N_MAGIC
(xË=
QMAGIC
 ? 4096 : 0)

	)

79 
	#SEGMENT_SIZE
 1024

	)

81 
	#_N_SEGMENT_ROUND
(
x
Ë(((xË+ 
SEGMENT_SIZE
 - 1Ë& ~(SEGMENT_SIZE - 1))

	)

82 
	#_N_TXTENDADDR
(
x
Ë(
	`N_TXTADDR
(x)+(x).
a_ãxt
)

	)

84 
	#N_DATADDR
(
x
) \

85 (
	`N_MAGIC
(
x
)==
OMAGIC
? (
	`_N_TXTENDADDR
(x)) \

86 : (
	`_N_SEGMENT_ROUND
 (
	`_N_TXTENDADDR
(
x
))))

	)

87 
	#N_BSSADDR
(
x
Ë(
	`N_DATADDR
(xË+ (x).
a_d©a
)

	)

89 #i‡!
deföed
 (
N_NLIST_DECLARED
)

90 
	s∆i°


94 *
	mn_«me
;

95 
∆i°
 *
	mn_√xt
;

96 
	mn_°rx
;

97 } 
	mn_un
;

98 
	mn_ty≥
;

99 
	mn_Ÿhî
;

100 
	mn_desc
;

101 
	mn_vÆue
;

105 
	#N_UNDF
 0

	)

106 
	#N_ABS
 2

	)

107 
	#N_TEXT
 4

	)

108 
	#N_DATA
 6

	)

109 
	#N_BSS
 8

	)

110 
	#N_FN
 15

	)

111 
	#N_EXT
 1

	)

112 
	#N_TYPE
 036

	)

113 
	#N_STAB
 0340

	)

114 
	#N_INDR
 0xa

	)

115 
	#N_SETA
 0x14

	)

116 
	#N_SETT
 0x16

	)

117 
	#N_SETD
 0x18

	)

118 
	#N_SETB
 0x1A

	)

119 
	#N_SETV
 0x1C

	)

121 #i‡!
deföed
 (
N_RELOCATION_INFO_DECLARED
)

127 
	sªloˇti⁄_öfo


129 
	mr_addªss
;

130 
	mr_symbﬁnum
:24;

131 
	mr_p¸ñ
:1;

132 
	mr_Àngth
:2;

133 
	mr_exã∫
:1;

134 
	mr_∑d
:4;

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #ifde‡
__USE_XOPEN


38 
	~<sys/°©.h
>

41 #ifdef 
__USE_MISC


42 #i‚de‡
R_OK


45 
	#R_OK
 4

	)

46 
	#W_OK
 2

	)

47 
	#X_OK
 1

	)

48 
	#F_OK
 0

	)

53 #ifde‡
__USE_XOPEN


54 
	#SEEK_SET
 0

	)

55 
	#SEEK_CUR
 1

	)

56 
	#SEEK_END
 2

	)

64 
f˙é
 (
__fd
, 
__cmd
, ...);

72 #i‚de‡
__USE_FILE_OFFSET64


73 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

75 #ifde‡
__REDIRECT


76 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

77 
	`__n⁄nuŒ
 ((1));

79 
	#›í
 
›í64


	)

82 #ifde‡
__USE_LARGEFILE64


83 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

86 #ifde‡
__USE_ATFILE


96 #i‚de‡
__USE_FILE_OFFSET64


97 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

98 
	`__n⁄nuŒ
 ((2));

100 #ifde‡
__REDIRECT


101 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

102 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

104 
	#›í©
 
›í©64


	)

108 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

109 
	`__n⁄nuŒ
 ((2));

117 #i‚de‡
__USE_FILE_OFFSET64


118 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

120 #ifde‡
__REDIRECT


121 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

122 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

124 
	#¸ót
 
¸ót64


	)

127 #ifde‡
__USE_LARGEFILE64


128 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

131 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

132 && !
deföed
 
__USE_POSIX
))

141 
	#F_ULOCK
 0

	)

142 
	#F_LOCK
 1

	)

143 
	#F_TLOCK
 2

	)

144 
	#F_TEST
 3

	)

146 #i‚de‡
__USE_FILE_OFFSET64


147 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

149 #ifde‡
__REDIRECT


150 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

152 
	#lockf
 
lockf64


	)

155 #ifde‡
__USE_LARGEFILE64


156 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

160 #ifde‡
__USE_XOPEN2K


163 #i‚de‡
__USE_FILE_OFFSET64


164 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

165 
__advi£
Ë
__THROW
;

167 #ifde‡
__REDIRECT_NTH


168 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

169 
__off64_t
 
__Àn
, 
__advi£
),

170 
posix_Ádvi£64
);

172 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

175 #ifde‡
__USE_LARGEFILE64


176 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

177 
__advi£
Ë
__THROW
;

185 #i‚de‡
__USE_FILE_OFFSET64


186 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

188 #ifde‡
__REDIRECT


189 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

190 
__off64_t
 
__Àn
),

191 
posix_ÁŒoˇã64
);

193 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

196 #ifde‡
__USE_LARGEFILE64


197 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

203 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

204 && 
deföed
 
__va_¨g_∑ck_Àn


205 
	~<bôs/f˙é2.h
>

208 
__END_DECLS


	@/usr/include/linux/fdreg.h

1 #i‚de‡
_LINUX_FDREG_H


2 
	#_LINUX_FDREG_H


	)

9 #ifde‡
FDPATCHES


10 
	#FD_IOPORT
 
fdc_°©e
[
fdc
].
addªss


	)

14 
	#FD_IOPORT
 0x3f0

	)

18 
	#FD_STATUS
 (4 + 
FD_IOPORT
 )

	)

19 
	#FD_DATA
 (5 + 
FD_IOPORT
 )

	)

22 
	#FD_DOR
 (2 + 
FD_IOPORT
 )

	)

25 
	#FD_DIR
 (7 + 
FD_IOPORT
 )

	)

28 
	#FD_DCR
 (7 + 
FD_IOPORT
 )

	)

31 
	#STATUS_BUSYMASK
 0x0F

	)

32 
	#STATUS_BUSY
 0x10

	)

33 
	#STATUS_DMA
 0x20

	)

34 
	#STATUS_DIR
 0x40

	)

35 
	#STATUS_READY
 0x80

	)

38 
	#ST0_DS
 0x03

	)

39 
	#ST0_HA
 0x04

	)

40 
	#ST0_NR
 0x08

	)

41 
	#ST0_ECE
 0x10

	)

42 
	#ST0_SE
 0x20

	)

43 
	#ST0_INTR
 0xC0

	)

46 
	#ST1_MAM
 0x01

	)

47 
	#ST1_WP
 0x02

	)

48 
	#ST1_ND
 0x04

	)

49 
	#ST1_OR
 0x10

	)

50 
	#ST1_CRC
 0x20

	)

51 
	#ST1_EOC
 0x80

	)

54 
	#ST2_MAM
 0x01

	)

55 
	#ST2_BC
 0x02

	)

56 
	#ST2_SNS
 0x04

	)

57 
	#ST2_SEH
 0x08

	)

58 
	#ST2_WC
 0x10

	)

59 
	#ST2_CRC
 0x20

	)

60 
	#ST2_CM
 0x40

	)

63 
	#ST3_HA
 0x04

	)

64 
	#ST3_DS
 0x08

	)

65 
	#ST3_TZ
 0x10

	)

66 
	#ST3_RY
 0x20

	)

67 
	#ST3_WP
 0x40

	)

68 
	#ST3_FT
 0x80

	)

71 
	#FD_RECALIBRATE
 0x07

	)

72 
	#FD_SEEK
 0x0F

	)

73 
	#FD_READ
 0xE6

	)

74 
	#FD_WRITE
 0xC5

	)

75 
	#FD_SENSEI
 0x08

	)

76 
	#FD_SPECIFY
 0x03

	)

77 
	#FD_FORMAT
 0x4D

	)

78 
	#FD_VERSION
 0x10

	)

79 
	#FD_CONFIGURE
 0x13

	)

80 
	#FD_PERPENDICULAR
 0x12

	)

81 
	#FD_GETSTATUS
 0x04

	)

82 
	#FD_DUMPREGS
 0x0E

	)

83 
	#FD_READID
 0xEA

	)

84 
	#FD_UNLOCK
 0x14

	)

85 
	#FD_LOCK
 0x94

	)

86 
	#FD_RSEEK_OUT
 0x8‡

	)

87 
	#FD_RSEEK_IN
 0xc‡

	)

94 
	#FD_PARTID
 0x18

	)

95 
	#FD_SAVE
 0x2ê

	)

96 
	#FD_DRIVESPEC
 0x8ê

	)

100 
	#FD_RESTORE
 0x4ê

	)

101 
	#FD_POWERDOWN
 0x27

	)

102 
	#FD_FORMAT_N_WRITE
 0xe‡

	)

103 
	#FD_OPTION
 0x33

	)

107 
	#DMA_READ
 0x46

	)

108 
	#DMA_WRITE
 0x4A

	)

111 
	#FDC_NONE
 0x00

	)

112 
	#FDC_UNKNOWN
 0x10

	)

114 
	#FDC_8272A
 0x20

	)

115 
	#FDC_765ED
 0x30

	)

116 
	#FDC_82072
 0x40

	)

117 
	#FDC_82072A
 0x45

	)

118 
	#FDC_82077_ORIG
 0x51

	)

119 
	#FDC_82077
 0x52

	)

120 
	#FDC_82078_UNKN
 0x5‡

	)

121 
	#FDC_82078
 0x60

	)

122 
	#FDC_82078_1
 0x61

	)

123 
	#FDC_S82078B
 0x62

	)

125 
	#FDC_87306
 0x63

	)

136 
	#FD_RESET_DELAY
 20

	)

	@/usr/include/linux/fs.h

1 #i‚de‡
_LINUX_FS_H


2 
	#_LINUX_FS_H


	)

9 
	~<löux/limôs.h
>

10 
	~<löux/io˘l.h
>

23 #unde‡
NR_OPEN


24 
	#INR_OPEN
 1024

	)

26 
	#BLOCK_SIZE_BITS
 10

	)

27 
	#BLOCK_SIZE
 (1<<
BLOCK_SIZE_BITS
)

	)

29 
	#SEEK_SET
 0

	)

30 
	#SEEK_CUR
 1

	)

31 
	#SEEK_END
 2

	)

32 
	#SEEK_MAX
 
SEEK_END


	)

35 
	sfûes_°©_°ru˘
 {

36 
	mƒ_fûes
;

37 
	mƒ_‰ì_fûes
;

38 
	mmax_fûes
;

41 
	söodes_°©_t
 {

42 
	mƒ_öodes
;

43 
	mƒ_unu£d
;

44 
	mdummy
[5];

48 
	#NR_FILE
 8192

	)

50 
	#MAY_EXEC
 1

	)

51 
	#MAY_WRITE
 2

	)

52 
	#MAY_READ
 4

	)

53 
	#MAY_APPEND
 8

	)

54 
	#MAY_ACCESS
 16

	)

55 
	#MAY_OPEN
 32

	)

63 
	#FMODE_READ
 ((
fmode_t
)1)

	)

65 
	#FMODE_WRITE
 ((
fmode_t
)2)

	)

67 
	#FMODE_LSEEK
 ((
fmode_t
)4)

	)

69 
	#FMODE_PREAD
 ((
fmode_t
)8)

	)

71 
	#FMODE_PWRITE
 ((
fmode_t
)16)

	)

73 
	#FMODE_EXEC
 ((
fmode_t
)32)

	)

75 
	#FMODE_NDELAY
 ((
fmode_t
)64)

	)

77 
	#FMODE_EXCL
 ((
fmode_t
)128)

	)

80 
	#FMODE_WRITE_IOCTL
 ((
fmode_t
)256)

	)

88 
	#FMODE_NOCMTIME
 ((
fmode_t
)2048)

	)

91 
	#FMODE_RANDOM
 ((
fmode_t
)4096)

	)

147 
	#RW_MASK
 1

	)

148 
	#RWA_MASK
 16

	)

149 
	#READ
 0

	)

150 
	#WRITE
 1

	)

151 
	#READA
 16

	)

152 
	#SWRITE
 17

	)

153 
	#READ_SYNC
 (
READ
 | (1 << 
BIO_RW_SYNCIO
Ë| (1 << 
BIO_RW_UNPLUG
))

	)

154 
	#READ_META
 (
READ
 | (1 << 
BIO_RW_META
))

	)

155 
	#WRITE_SYNC_PLUG
 (
WRITE
 | (1 << 
BIO_RW_SYNCIO
Ë| (1 << 
BIO_RW_NOIDLE
))

	)

156 
	#WRITE_SYNC
 (
WRITE_SYNC_PLUG
 | (1 << 
BIO_RW_UNPLUG
))

	)

157 
	#WRITE_ODIRECT
 (
WRITE
 | (1 << 
BIO_RW_SYNCIO
Ë| (1 << 
BIO_RW_UNPLUG
))

	)

158 
	#SWRITE_SYNC_PLUG
 \

159 (
SWRITE
 | (1 << 
BIO_RW_SYNCIO
Ë| (1 << 
BIO_RW_NOIDLE
))

	)

160 
	#SWRITE_SYNC
 (
SWRITE_SYNC_PLUG
 | (1 << 
BIO_RW_UNPLUG
))

	)

161 
	#WRITE_BARRIER
 (
WRITE
 | (1 << 
BIO_RW_BARRIER
))

	)

167 
	#DISCARD_NOBARRIER
 (
WRITE
 | (1 << 
BIO_RW_DISCARD
))

	)

168 
	#DISCARD_BARRIER
 (
DISCARD_NOBARRIER
 | (1 << 
BIO_RW_BARRIER
))

	)

170 
	#SEL_IN
 1

	)

171 
	#SEL_OUT
 2

	)

172 
	#SEL_EX
 4

	)

175 
	#FS_REQUIRES_DEV
 1

	)

176 
	#FS_BINARY_MOUNTDATA
 2

	)

177 
	#FS_HAS_SUBTYPE
 4

	)

178 
	#FS_REVAL_DOT
 16384

	)

179 
	#FS_RENAME_DOES_D_MOVE
 32768

	)

186 
	#MS_RDONLY
 1

	)

187 
	#MS_NOSUID
 2

	)

188 
	#MS_NODEV
 4

	)

189 
	#MS_NOEXEC
 8

	)

190 
	#MS_SYNCHRONOUS
 16

	)

191 
	#MS_REMOUNT
 32

	)

192 
	#MS_MANDLOCK
 64

	)

193 
	#MS_DIRSYNC
 128

	)

194 
	#MS_NOATIME
 1024

	)

195 
	#MS_NODIRATIME
 2048

	)

196 
	#MS_BIND
 4096

	)

197 
	#MS_MOVE
 8192

	)

198 
	#MS_REC
 16384

	)

199 
	#MS_VERBOSE
 32768

	)

201 
	#MS_SILENT
 32768

	)

202 
	#MS_POSIXACL
 (1<<16Ë

	)

203 
	#MS_UNBINDABLE
 (1<<17Ë

	)

204 
	#MS_PRIVATE
 (1<<18Ë

	)

205 
	#MS_SLAVE
 (1<<19Ë

	)

206 
	#MS_SHARED
 (1<<20Ë

	)

207 
	#MS_RELATIME
 (1<<21Ë

	)

208 
	#MS_KERNMOUNT
 (1<<22Ë

	)

209 
	#MS_I_VERSION
 (1<<23Ë

	)

210 
	#MS_STRICTATIME
 (1<<24Ë

	)

211 
	#MS_ACTIVE
 (1<<30)

	)

212 
	#MS_NOUSER
 (1<<31)

	)

217 
	#MS_RMT_MASK
 (
MS_RDONLY
|
MS_SYNCHRONOUS
|
MS_MANDLOCK
|
MS_I_VERSION
)

	)

222 
	#MS_MGC_VAL
 0xC0ED0000

	)

223 
	#MS_MGC_MSK
 0xffff0000

	)

227 
	#S_SYNC
 1

	)

228 
	#S_NOATIME
 2

	)

229 
	#S_APPEND
 4

	)

230 
	#S_IMMUTABLE
 8

	)

231 
	#S_DEAD
 16

	)

232 
	#S_NOQUOTA
 32

	)

233 
	#S_DIRSYNC
 64

	)

234 
	#S_NOCMTIME
 128

	)

235 
	#S_SWAPFILE
 256

	)

236 
	#S_PRIVATE
 512

	)

251 
	#__IS_FLG
(
öode
,
Êg
Ë((öode)->
i_sb
->
s_Êags
 & (Êg))

	)

253 
	#IS_RDONLY
(
öode
Ë((öode)->
i_sb
->
s_Êags
 & 
MS_RDONLY
)

	)

254 
	#IS_SYNC
(
öode
Ë(
	`__IS_FLG
(öode, 
MS_SYNCHRONOUS
) || \

255 ((
öode
)->
i_Êags
 & 
S_SYNC
))

	)

256 
	#IS_DIRSYNC
(
öode
Ë(
	`__IS_FLG
(öode, 
MS_SYNCHRONOUS
|
MS_DIRSYNC
) || \

257 ((
öode
)->
i_Êags
 & (
S_SYNC
|
S_DIRSYNC
)))

	)

258 
	#IS_MANDLOCK
(
öode
Ë
	`__IS_FLG
(öode, 
MS_MANDLOCK
)

	)

259 
	#IS_NOATIME
(
öode
Ë
	`__IS_FLG
(öode, 
MS_RDONLY
|
MS_NOATIME
)

	)

260 
	#IS_I_VERSION
(
öode
Ë
	`__IS_FLG
(öode, 
MS_I_VERSION
)

	)

262 
	#IS_NOQUOTA
(
öode
Ë((öode)->
i_Êags
 & 
S_NOQUOTA
)

	)

263 
	#IS_APPEND
(
öode
Ë((öode)->
i_Êags
 & 
S_APPEND
)

	)

264 
	#IS_IMMUTABLE
(
öode
Ë((öode)->
i_Êags
 & 
S_IMMUTABLE
)

	)

265 
	#IS_POSIXACL
(
öode
Ë
	`__IS_FLG
(öode, 
MS_POSIXACL
)

	)

267 
	#IS_DEADDIR
(
öode
Ë((öode)->
i_Êags
 & 
S_DEAD
)

	)

268 
	#IS_NOCMTIME
(
öode
Ë((öode)->
i_Êags
 & 
S_NOCMTIME
)

	)

269 
	#IS_SWAPFILE
(
öode
Ë((öode)->
i_Êags
 & 
S_SWAPFILE
)

	)

270 
	#IS_PRIVATE
(
öode
Ë((öode)->
i_Êags
 & 
S_PRIVATE
)

	)

275 
	#BLKROSET
 
	`_IO
(0x12,93Ë

	)

276 
	#BLKROGET
 
	`_IO
(0x12,94Ë

	)

277 
	#BLKRRPART
 
	`_IO
(0x12,95Ë

	)

278 
	#BLKGETSIZE
 
	`_IO
(0x12,96Ë

	)

279 
	#BLKFLSBUF
 
	`_IO
(0x12,97Ë

	)

280 
	#BLKRASET
 
	`_IO
(0x12,98Ë

	)

281 
	#BLKRAGET
 
	`_IO
(0x12,99Ë

	)

282 
	#BLKFRASET
 
	`_IO
(0x12,100)

	)

283 
	#BLKFRAGET
 
	`_IO
(0x12,101)

	)

284 
	#BLKSECTSET
 
	`_IO
(0x12,102)

	)

285 
	#BLKSECTGET
 
	`_IO
(0x12,103)

	)

286 
	#BLKSSZGET
 
	`_IO
(0x12,104)

	)

288 
	#BLKPG
 
	`_IO
(0x12,105)

	)

292 
	#BLKELVGET
 
	`_IOR
(0x12,106,
size_t
)

	)

293 
	#BLKELVSET
 
	`_IOW
(0x12,107,
size_t
)

	)

298 
	#BLKBSZGET
 
	`_IOR
(0x12,112,
size_t
)

	)

299 
	#BLKBSZSET
 
	`_IOW
(0x12,113,
size_t
)

	)

300 
	#BLKGETSIZE64
 
	`_IOR
(0x12,114,
size_t
Ë

	)

301 
	#BLKTRACESETUP
 
	`_IOWR
(0x12,115,
blk_u£r_åa˚_£tup
)

	)

302 
	#BLKTRACESTART
 
	`_IO
(0x12,116)

	)

303 
	#BLKTRACESTOP
 
	`_IO
(0x12,117)

	)

304 
	#BLKTRACETEARDOWN
 
	`_IO
(0x12,118)

	)

305 
	#BLKDISCARD
 
	`_IO
(0x12,119)

	)

306 
	#BLKIOMIN
 
	`_IO
(0x12,120)

	)

307 
	#BLKIOOPT
 
	`_IO
(0x12,121)

	)

308 
	#BLKALIGNOFF
 
	`_IO
(0x12,122)

	)

309 
	#BLKPBSZGET
 
	`_IO
(0x12,123)

	)

311 
	#BMAP_IOCTL
 1

	)

312 
	#FIBMAP
 
	`_IO
(0x00,1Ë

	)

313 
	#FIGETBSZ
 
	`_IO
(0x00,2Ë

	)

314 
	#FIFREEZE
 
	`_IOWR
('X', 119, Ë

	)

315 
	#FITHAW
 
	`_IOWR
('X', 120, Ë

	)

317 
	#FS_IOC_GETFLAGS
 
	`_IOR
('f', 1, )

	)

318 
	#FS_IOC_SETFLAGS
 
	`_IOW
('f', 2, )

	)

319 
	#FS_IOC_GETVERSION
 
	`_IOR
('v', 1, )

	)

320 
	#FS_IOC_SETVERSION
 
	`_IOW
('v', 2, )

	)

321 
	#FS_IOC_FIEMAP
 
	`_IOWR
('f', 11, 
fõm≠
)

	)

322 
	#FS_IOC32_GETFLAGS
 
	`_IOR
('f', 1, )

	)

323 
	#FS_IOC32_SETFLAGS
 
	`_IOW
('f', 2, )

	)

324 
	#FS_IOC32_GETVERSION
 
	`_IOR
('v', 1, )

	)

325 
	#FS_IOC32_SETVERSION
 
	`_IOW
('v', 2, )

	)

330 
	#FS_SECRM_FL
 0x00000001

	)

331 
	#FS_UNRM_FL
 0x00000002

	)

332 
	#FS_COMPR_FL
 0x00000004

	)

333 
	#FS_SYNC_FL
 0x00000008

	)

334 
	#FS_IMMUTABLE_FL
 0x00000010

	)

335 
	#FS_APPEND_FL
 0x00000020

	)

336 
	#FS_NODUMP_FL
 0x00000040

	)

337 
	#FS_NOATIME_FL
 0x00000080

	)

339 
	#FS_DIRTY_FL
 0x00000100

	)

340 
	#FS_COMPRBLK_FL
 0x00000200

	)

341 
	#FS_NOCOMP_FL
 0x00000400

	)

342 
	#FS_ECOMPR_FL
 0x00000800

	)

344 
	#FS_BTREE_FL
 0x00001000

	)

345 
	#FS_INDEX_FL
 0x00001000

	)

346 
	#FS_IMAGIC_FL
 0x00002000

	)

347 
	#FS_JOURNAL_DATA_FL
 0x00004000

	)

348 
	#FS_NOTAIL_FL
 0x00008000

	)

349 
	#FS_DIRSYNC_FL
 0x00010000

	)

350 
	#FS_TOPDIR_FL
 0x00020000

	)

351 
	#FS_EXTENT_FL
 0x00080000

	)

352 
	#FS_DIRECTIO_FL
 0x00100000

	)

353 
	#FS_RESERVED_FL
 0x80000000

	)

355 
	#FS_FL_USER_VISIBLE
 0x0003DFFF

	)

356 
	#FS_FL_USER_MODIFIABLE
 0x000380FF

	)

359 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

360 
	#SYNC_FILE_RANGE_WRITE
 2

	)

361 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

	@/usr/include/linux/hdreg.h

1 #i‚de‡
_LINUX_HDREG_H


2 
	#_LINUX_HDREG_H


	)

4 
	~<löux/ty≥s.h
>

10 
	#HDIO_DRIVE_CMD_HDR_SIZE
 (4 * (
__u8
))

	)

11 
	#HDIO_DRIVE_HOB_HDR_SIZE
 (8 * (
__u8
))

	)

12 
	#HDIO_DRIVE_TASK_HDR_SIZE
 (8 * (
__u8
))

	)

14 
	#IDE_DRIVE_TASK_NO_DATA
 0

	)

15 
	#IDE_DRIVE_TASK_INVALID
 -1

	)

16 
	#IDE_DRIVE_TASK_SET_XFER
 1

	)

17 
	#IDE_DRIVE_TASK_IN
 2

	)

18 
	#IDE_DRIVE_TASK_OUT
 3

	)

19 
	#IDE_DRIVE_TASK_RAW_WRITE
 4

	)

24 
	#IDE_TASKFILE_STD_IN_FLAGS
 0xFE

	)

25 
	#IDE_HOB_STD_IN_FLAGS
 0x3C

	)

26 
	#IDE_TASKFILE_STD_OUT_FLAGS
 0xFE

	)

27 
	#IDE_HOB_STD_OUT_FLAGS
 0x3C

	)

29 
	tèsk_i‹eg_t
;

30 
	tßè_i‹eg_t
;

32 
	uide_ªg_vÆid_s
 {

33 
	mÆl
 : 16;

35 
	md©a
 : 1;

36 
	mîr‹_„©uª
 : 1;

37 
	m£˘‹
 : 1;

38 
	mn£˘‹
 : 1;

39 
	mlcyl
 : 1;

40 
	mhcyl
 : 1;

41 
	m£À˘
 : 1;

42 
	m°©us_comm™d
 : 1;

44 
	md©a_hob
 : 1;

45 
	mîr‹_„©uª_hob
 : 1;

46 
	m£˘‹_hob
 : 1;

47 
	mn£˘‹_hob
 : 1;

48 
	mlcyl_hob
 : 1;

49 
	mhcyl_hob
 : 1;

50 
	m£À˘_hob
 : 1;

51 
	mc⁄åﬁ_hob
 : 1;

52 } 
	mb
;

53 } 
	tide_ªg_vÆid_t
;

55 
	side_èsk_ªque°_s
 {

56 
__u8
 
	mio_p‹ts
[8];

57 
__u8
 
	mhob_p‹ts
[8];

58 
ide_ªg_vÆid_t
 
	mout_Êags
;

59 
ide_ªg_vÆid_t
 
	mö_Êags
;

60 
	md©a_pha£
;

61 
	mªq_cmd
;

62 
	mout_size
;

63 
	mö_size
;

64 } 
	tide_èsk_ªque°_t
;

66 
	side_io˘l_ªque°_s
 {

67 
ide_èsk_ªque°_t
 *
	mèsk_ªque°
;

68 *
	mout_buf„r
;

69 *
	mö_buf„r
;

70 } 
	tide_io˘l_ªque°_t
;

72 
	shd_drive_cmd_hdr
 {

73 
__u8
 
	mcomm™d
;

74 
__u8
 
	m£˘‹_numbî
;

75 
__u8
 
	m„©uª
;

76 
__u8
 
	m£˘‹_cou¡
;

79 
	shd_drive_èsk_hdr
 {

80 
__u8
 
	md©a
;

81 
__u8
 
	m„©uª
;

82 
__u8
 
	m£˘‹_cou¡
;

83 
__u8
 
	m£˘‹_numbî
;

84 
__u8
 
	mlow_cylödî
;

85 
__u8
 
	mhigh_cylödî
;

86 
__u8
 
	mdevi˚_hód
;

87 
__u8
 
	mcomm™d
;

88 } 
	tèsk_°ru˘_t
;

90 
	shd_drive_hob_hdr
 {

91 
__u8
 
	md©a
;

92 
__u8
 
	m„©uª
;

93 
__u8
 
	m£˘‹_cou¡
;

94 
__u8
 
	m£˘‹_numbî
;

95 
__u8
 
	mlow_cylödî
;

96 
__u8
 
	mhigh_cylödî
;

97 
__u8
 
	mdevi˚_hód
;

98 
__u8
 
	mc⁄åﬁ
;

99 } 
	thob_°ru˘_t
;

101 
	#TASKFILE_NO_DATA
 0x0000

	)

103 
	#TASKFILE_IN
 0x0001

	)

104 
	#TASKFILE_MULTI_IN
 0x0002

	)

106 
	#TASKFILE_OUT
 0x0004

	)

107 
	#TASKFILE_MULTI_OUT
 0x0008

	)

108 
	#TASKFILE_IN_OUT
 0x0010

	)

110 
	#TASKFILE_IN_DMA
 0x0020

	)

111 
	#TASKFILE_OUT_DMA
 0x0040

	)

112 
	#TASKFILE_IN_DMAQ
 0x0080

	)

113 
	#TASKFILE_OUT_DMAQ
 0x0100

	)

115 
	#TASKFILE_P_IN
 0x0200

	)

116 
	#TASKFILE_P_OUT
 0x0400

	)

117 
	#TASKFILE_P_IN_DMA
 0x0800

	)

118 
	#TASKFILE_P_OUT_DMA
 0x1000

	)

119 
	#TASKFILE_P_IN_DMAQ
 0x2000

	)

120 
	#TASKFILE_P_OUT_DMAQ
 0x4000

	)

121 
	#TASKFILE_48
 0x8000

	)

122 
	#TASKFILE_INVALID
 0x7fff

	)

125 
	#WIN_NOP
 0x00

	)

129 
	#CFA_REQ_EXT_ERROR_CODE
 0x03

	)

133 
	#WIN_SRST
 0x08

	)

134 
	#WIN_DEVICE_RESET
 0x08

	)

138 
	#WIN_RECAL
 0x10

	)

139 
	#WIN_RESTORE
 
WIN_RECAL


	)

143 
	#WIN_READ
 0x20

	)

144 
	#WIN_READ_ONCE
 0x21

	)

145 
	#WIN_READ_LONG
 0x22

	)

146 
	#WIN_READ_LONG_ONCE
 0x23

	)

147 
	#WIN_READ_EXT
 0x24

	)

148 
	#WIN_READDMA_EXT
 0x25

	)

149 
	#WIN_READDMA_QUEUED_EXT
 0x26

	)

150 
	#WIN_READ_NATIVE_MAX_EXT
 0x27

	)

154 
	#WIN_MULTREAD_EXT
 0x29

	)

158 
	#WIN_WRITE
 0x30

	)

159 
	#WIN_WRITE_ONCE
 0x31

	)

160 
	#WIN_WRITE_LONG
 0x32

	)

161 
	#WIN_WRITE_LONG_ONCE
 0x33

	)

162 
	#WIN_WRITE_EXT
 0x34

	)

163 
	#WIN_WRITEDMA_EXT
 0x35

	)

164 
	#WIN_WRITEDMA_QUEUED_EXT
 0x36

	)

165 
	#WIN_SET_MAX_EXT
 0x37

	)

166 
	#CFA_WRITE_SECT_WO_ERASE
 0x38

	)

167 
	#WIN_MULTWRITE_EXT
 0x39

	)

171 
	#WIN_WRITE_VERIFY
 0x3C

	)

175 
	#WIN_VERIFY
 0x40

	)

176 
	#WIN_VERIFY_ONCE
 0x41

	)

177 
	#WIN_VERIFY_EXT
 0x42

	)

181 
	#WIN_FORMAT
 0x50

	)

185 
	#WIN_INIT
 0x60

	)

189 
	#WIN_SEEK
 0x70

	)

191 
	#CFA_TRANSLATE_SECTOR
 0x87

	)

192 
	#WIN_DIAGNOSE
 0x90

	)

193 
	#WIN_SPECIFY
 0x91

	)

194 
	#WIN_DOWNLOAD_MICROCODE
 0x92

	)

195 
	#WIN_STANDBYNOW2
 0x94

	)

196 
	#WIN_STANDBY2
 0x96

	)

197 
	#WIN_SETIDLE2
 0x97

	)

198 
	#WIN_CHECKPOWERMODE2
 0x98

	)

199 
	#WIN_SLEEPNOW2
 0x99

	)

203 
	#WIN_PACKETCMD
 0xA0

	)

204 
	#WIN_PIDENTIFY
 0xA1

	)

205 
	#WIN_QUEUED_SERVICE
 0xA2

	)

206 
	#WIN_SMART
 0xB0

	)

207 
	#CFA_ERASE_SECTORS
 0xC0

	)

208 
	#WIN_MULTREAD
 0xC4

	)

209 
	#WIN_MULTWRITE
 0xC5

	)

210 
	#WIN_SETMULT
 0xC6

	)

211 
	#WIN_READDMA_QUEUED
 0xC7

	)

212 
	#WIN_READDMA
 0xC8

	)

213 
	#WIN_READDMA_ONCE
 0xC9

	)

214 
	#WIN_WRITEDMA
 0xCA

	)

215 
	#WIN_WRITEDMA_ONCE
 0xCB

	)

216 
	#WIN_WRITEDMA_QUEUED
 0xCC

	)

217 
	#CFA_WRITE_MULTI_WO_ERASE
 0xCD

	)

218 
	#WIN_GETMEDIASTATUS
 0xDA

	)

219 
	#WIN_ACKMEDIACHANGE
 0xDB

	)

220 
	#WIN_POSTBOOT
 0xDC

	)

221 
	#WIN_PREBOOT
 0xDD

	)

222 
	#WIN_DOORLOCK
 0xDE

	)

223 
	#WIN_DOORUNLOCK
 0xDF

	)

224 
	#WIN_STANDBYNOW1
 0xE0

	)

225 
	#WIN_IDLEIMMEDIATE
 0xE1

	)

226 
	#WIN_STANDBY
 0xE2

	)

227 
	#WIN_SETIDLE1
 0xE3

	)

228 
	#WIN_READ_BUFFER
 0xE4

	)

229 
	#WIN_CHECKPOWERMODE1
 0xE5

	)

230 
	#WIN_SLEEPNOW1
 0xE6

	)

231 
	#WIN_FLUSH_CACHE
 0xE7

	)

232 
	#WIN_WRITE_BUFFER
 0xE8

	)

233 
	#WIN_WRITE_SAME
 0xE9

	)

235 
	#WIN_FLUSH_CACHE_EXT
 0xEA

	)

236 
	#WIN_IDENTIFY
 0xEC

	)

237 
	#WIN_MEDIAEJECT
 0xED

	)

238 
	#WIN_IDENTIFY_DMA
 0xEE

	)

239 
	#WIN_SETFEATURES
 0xEF

	)

240 
	#EXABYTE_ENABLE_NEST
 0xF0

	)

241 
	#WIN_SECURITY_SET_PASS
 0xF1

	)

242 
	#WIN_SECURITY_UNLOCK
 0xF2

	)

243 
	#WIN_SECURITY_ERASE_PREPARE
 0xF3

	)

244 
	#WIN_SECURITY_ERASE_UNIT
 0xF4

	)

245 
	#WIN_SECURITY_FREEZE_LOCK
 0xF5

	)

246 
	#WIN_SECURITY_DISABLE
 0xF6

	)

247 
	#WIN_READ_NATIVE_MAX
 0xF8

	)

248 
	#WIN_SET_MAX
 0xF9

	)

249 
	#DISABLE_SEAGATE
 0xFB

	)

253 
	#SMART_READ_VALUES
 0xD0

	)

254 
	#SMART_READ_THRESHOLDS
 0xD1

	)

255 
	#SMART_AUTOSAVE
 0xD2

	)

256 
	#SMART_SAVE
 0xD3

	)

257 
	#SMART_IMMEDIATE_OFFLINE
 0xD4

	)

258 
	#SMART_READ_LOG_SECTOR
 0xD5

	)

259 
	#SMART_WRITE_LOG_SECTOR
 0xD6

	)

260 
	#SMART_WRITE_THRESHOLDS
 0xD7

	)

261 
	#SMART_ENABLE
 0xD8

	)

262 
	#SMART_DISABLE
 0xD9

	)

263 
	#SMART_STATUS
 0xDA

	)

264 
	#SMART_AUTO_OFFLINE
 0xDB

	)

268 
	#SMART_LCYL_PASS
 0x4F

	)

269 
	#SMART_HCYL_PASS
 0xC2

	)

272 
	#SETFEATURES_EN_8BIT
 0x01

	)

273 
	#SETFEATURES_EN_WCACHE
 0x02

	)

274 
	#SETFEATURES_DIS_DEFECT
 0x04

	)

275 
	#SETFEATURES_EN_APM
 0x05

	)

276 
	#SETFEATURES_EN_SAME_R
 0x22

	)

277 
	#SETFEATURES_DIS_MSN
 0x31

	)

278 
	#SETFEATURES_DIS_RETRY
 0x33

	)

279 
	#SETFEATURES_EN_AAM
 0x42

	)

280 
	#SETFEATURES_RW_LONG
 0x44

	)

281 
	#SETFEATURES_SET_CACHE
 0x54

	)

282 
	#SETFEATURES_DIS_RLA
 0x55

	)

283 
	#SETFEATURES_EN_RI
 0x5D

	)

284 
	#SETFEATURES_EN_SI
 0x5E

	)

285 
	#SETFEATURES_DIS_RPOD
 0x66

	)

286 
	#SETFEATURES_DIS_ECC
 0x77

	)

287 
	#SETFEATURES_DIS_8BIT
 0x81

	)

288 
	#SETFEATURES_DIS_WCACHE
 0x82

	)

289 
	#SETFEATURES_EN_DEFECT
 0x84

	)

290 
	#SETFEATURES_DIS_APM
 0x85

	)

291 
	#SETFEATURES_EN_ECC
 0x88

	)

292 
	#SETFEATURES_EN_MSN
 0x95

	)

293 
	#SETFEATURES_EN_RETRY
 0x99

	)

294 
	#SETFEATURES_EN_RLA
 0xAA

	)

295 
	#SETFEATURES_PREFETCH
 0xAB

	)

296 
	#SETFEATURES_EN_REST
 0xAC

	)

297 
	#SETFEATURES_4B_RW_LONG
 0xBB

	)

298 
	#SETFEATURES_DIS_AAM
 0xC2

	)

299 
	#SETFEATURES_EN_RPOD
 0xCC

	)

300 
	#SETFEATURES_DIS_RI
 0xDD

	)

301 
	#SETFEATURES_EN_SAME_M
 0xDD

	)

302 
	#SETFEATURES_DIS_SI
 0xDE

	)

306 
	#SECURITY_SET_PASSWORD
 0xBA

	)

307 
	#SECURITY_UNLOCK
 0xBB

	)

308 
	#SECURITY_ERASE_PREPARE
 0xBC

	)

309 
	#SECURITY_ERASE_UNIT
 0xBD

	)

310 
	#SECURITY_FREEZE_LOCK
 0xBE

	)

311 
	#SECURITY_DISABLE_PASSWORD
 0xBF

	)

313 
	shd_geomëry
 {

314 
	mhóds
;

315 
	m£˘‹s
;

316 
	mcylödîs
;

317 
	m°¨t
;

321 
	#HDIO_GETGEO
 0x0301

	)

322 
	#HDIO_GET_UNMASKINTR
 0x0302

	)

323 
	#HDIO_GET_MULTCOUNT
 0x0304

	)

324 
	#HDIO_GET_QDMA
 0x0305

	)

326 
	#HDIO_SET_XFER
 0x0306

	)

328 
	#HDIO_OBSOLETE_IDENTITY
 0x0307

	)

329 
	#HDIO_GET_KEEPSETTINGS
 0x0308

	)

330 
	#HDIO_GET_32BIT
 0x0309

	)

331 
	#HDIO_GET_NOWERR
 0x030®

	)

332 
	#HDIO_GET_DMA
 0x030b

	)

333 
	#HDIO_GET_NICE
 0x030¯

	)

334 
	#HDIO_GET_IDENTITY
 0x030d

	)

335 
	#HDIO_GET_WCACHE
 0x030ê

	)

336 
	#HDIO_GET_ACOUSTIC
 0x030‡

	)

337 
	#HDIO_GET_ADDRESS
 0x0310

	)

339 
	#HDIO_GET_BUSSTATE
 0x031®

	)

340 
	#HDIO_TRISTATE_HWIF
 0x031b

	)

341 
	#HDIO_DRIVE_RESET
 0x031¯

	)

342 
	#HDIO_DRIVE_TASKFILE
 0x031d

	)

343 
	#HDIO_DRIVE_TASK
 0x031ê

	)

344 
	#HDIO_DRIVE_CMD
 0x031‡

	)

345 
	#HDIO_DRIVE_CMD_AEB
 
HDIO_DRIVE_TASK


	)

348 
	#HDIO_SET_MULTCOUNT
 0x0321

	)

349 
	#HDIO_SET_UNMASKINTR
 0x0322

	)

350 
	#HDIO_SET_KEEPSETTINGS
 0x0323

	)

351 
	#HDIO_SET_32BIT
 0x0324

	)

352 
	#HDIO_SET_NOWERR
 0x0325

	)

353 
	#HDIO_SET_DMA
 0x0326

	)

354 
	#HDIO_SET_PIO_MODE
 0x0327

	)

355 
	#HDIO_SCAN_HWIF
 0x0328

	)

356 
	#HDIO_UNREGISTER_HWIF
 0x032®

	)

357 
	#HDIO_SET_NICE
 0x0329

	)

358 
	#HDIO_SET_WCACHE
 0x032b

	)

359 
	#HDIO_SET_ACOUSTIC
 0x032¯

	)

360 
	#HDIO_SET_BUSSTATE
 0x032d

	)

361 
	#HDIO_SET_QDMA
 0x032ê

	)

362 
	#HDIO_SET_ADDRESS
 0x032‡

	)

366 
	mBUSSTATE_OFF
 = 0,

367 
	mBUSSTATE_ON
,

368 
	mBUSSTATE_TRISTATE


377 
	#__NEW_HD_DRIVE_ID


	)

385 
	shd_driveid
 {

386 
	mc⁄fig
;

387 
	mcyls
;

388 
	mª£rved2
;

389 
	mhóds
;

390 
	måack_byãs
;

391 
	m£˘‹_byãs
;

392 
	m£˘‹s
;

393 
	mvíd‹0
;

394 
	mvíd‹1
;

395 
	mvíd‹2
;

396 
	m£rül_no
[20];

397 
	mbuf_ty≥
;

398 
	mbuf_size
;

401 
	mecc_byãs
;

402 
	mfw_ªv
[8];

403 
	mmodñ
[40];

404 
	mmax_mu…£˘
;

405 
	mvíd‹3
;

406 
	mdw‹d_io
;

407 
	mvíd‹4
;

408 
	mˇ∑bûôy
;

414 
	mª£rved50
;

415 
	mvíd‹5
;

416 
	mtPIO
;

417 
	mvíd‹6
;

418 
	mtDMA
;

419 
	mfõld_vÆid
;

424 
	mcur_cyls
;

425 
	mcur_hóds
;

426 
	mcur_£˘‹s
;

427 
	mcur_ˇ∑côy0
;

428 
	mcur_ˇ∑côy1
;

429 
	mmu…£˘
;

430 
	mmu…£˘_vÆid
;

431 
	mlba_ˇ∑côy
;

432 
	mdma_1w‹d
;

433 
	mdma_mw‹d
;

434 
	meide_pio_modes
;

435 
	meide_dma_mö
;

436 
	meide_dma_time
;

437 
	meide_pio
;

438 
	meide_pio_i‹dy
;

439 
	mw‹ds69_70
[2];

442 
	mw‹ds71_74
[4];

445 
	mqueue_dïth
;

449 
	mw‹ds76_79
[4];

450 
	mmaj‹_ªv_num
;

451 
	mmö‹_ªv_num
;

452 
	mcomm™d_£t_1
;

470 
	mcomm™d_£t_2
;

488 
	mcfs£
;

500 
	mcfs_íabÀ_1
;

519 
	mcfs_íabÀ_2
;

538 
	mcsf_deÁu…
;

550 
	mdma_u…ø
;

551 
	må£uc
;

552 
	måsEuc
;

553 
	mCurAPMvÆues
;

554 
	mm¥c
;

555 
	mhw_c⁄fig
;

573 
	macou°ic
;

577 
	mm§qs
;

578 
	msx„π
;

579 
	mßl
;

580 
	m•g
;

581 
	mlba_ˇ∑côy_2
;

582 
	mw‹ds104_125
[22];

583 
	mœ°_lun
;

584 
	mw‹d127
;

592 
	mdlf
;

604 
	mcsfo
;

612 
	mw‹ds130_155
[26];

613 
	mw‹d156
;

614 
	mw‹ds157_159
[3];

615 
	mcÁ_powî
;

622 
	mw‹ds161_175
[15];

623 
	mw‹ds176_205
[30];

624 
	mw‹ds206_254
[49];

625 
	möãgrôy_w‹d
;

636 
	#IDE_NICE_DSC_OVERLAP
 (0Ë

	)

637 
	#IDE_NICE_ATAPI_OVERLAP
 (1Ë

	)

638 
	#IDE_NICE_1
 (3Ë

	)

639 
	#IDE_NICE_0
 (2Ë

	)

640 
	#IDE_NICE_2
 (4Ë

	)

	@/usr/include/linux/kernel.h

1 #i‚de‡
_LINUX_KERNEL_H


2 
	#_LINUX_KERNEL_H


	)

10 
	#SI_LOAD_SHIFT
 16

	)

11 
	ssysöfo
 {

12 
	mu±ime
;

13 
	mlﬂds
[3];

14 
	mtŸÆøm
;

15 
	m‰ìøm
;

16 
	msh¨edøm
;

17 
	mbuf„ºam
;

18 
	mtŸÆsw≠
;

19 
	m‰ìsw≠
;

20 
	m¥ocs
;

21 
	m∑d
;

22 
	mtŸÆhigh
;

23 
	m‰ìhigh
;

24 
	mmem_unô
;

25 
	m_f
[20-2*()-()];

29 
	#BUILD_BUG_ON
(
c⁄dôi⁄
Ë(()
	`BUILD_BUG_ON_ZERO
(c⁄dôi⁄))

	)

32 
	#MAYBE_BUILD_BUG_ON
(
c⁄d
Ë(()([1 - 2 * !!(c⁄d)]))

	)

38 
	#BUILD_BUG_ON_ZERO
(
e
Ë((°ru˘ { :-!!”); }))

	)

39 
	#BUILD_BUG_ON_NULL
(
e
Ë((*)(°ru˘ { :-!!”); }))

	)

42 
	#__FUNCTION__
 (
__func__
)

	)

45 #ifde‡
CONFIG_NUMA


46 
	#NUMA_BUILD
 1

	)

48 
	#NUMA_BUILD
 0

	)

52 #ifde‡
CONFIG_FTRACE_MCOUNT_RECORD


53 
	#REBUILD_DUE_TO_FTRACE_MCOUNT_RECORD


	)

	@/usr/include/linux/sched.h

1 #i‚de‡
_LINUX_SCHED_H


2 
	#_LINUX_SCHED_H


	)

7 
	#CSIGNAL
 0x000000f‡

	)

8 
	#CLONE_VM
 0x00000100

	)

9 
	#CLONE_FS
 0x00000200

	)

10 
	#CLONE_FILES
 0x00000400

	)

11 
	#CLONE_SIGHAND
 0x00000800

	)

12 
	#CLONE_PTRACE
 0x00002000

	)

13 
	#CLONE_VFORK
 0x00004000

	)

14 
	#CLONE_PARENT
 0x00008000

	)

15 
	#CLONE_THREAD
 0x00010000

	)

16 
	#CLONE_NEWNS
 0x00020000

	)

17 
	#CLONE_SYSVSEM
 0x00040000

	)

18 
	#CLONE_SETTLS
 0x00080000

	)

19 
	#CLONE_PARENT_SETTID
 0x00100000

	)

20 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

21 
	#CLONE_DETACHED
 0x00400000

	)

22 
	#CLONE_UNTRACED
 0x00800000

	)

23 
	#CLONE_CHILD_SETTID
 0x01000000

	)

24 
	#CLONE_STOPPED
 0x02000000

	)

25 
	#CLONE_NEWUTS
 0x04000000

	)

26 
	#CLONE_NEWIPC
 0x08000000

	)

27 
	#CLONE_NEWUSER
 0x10000000

	)

28 
	#CLONE_NEWPID
 0x20000000

	)

29 
	#CLONE_NEWNET
 0x40000000

	)

30 
	#CLONE_IO
 0x80000000

	)

35 
	#SCHED_NORMAL
 0

	)

36 
	#SCHED_FIFO
 1

	)

37 
	#SCHED_RR
 2

	)

38 
	#SCHED_BATCH
 3

	)

40 
	#SCHED_IDLE
 5

	)

42 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

	@/usr/include/linux/tty.h

1 #i‚de‡
_LINUX_TTY_H


2 
	#_LINUX_TTY_H


	)

	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #ifde‡
__USE_XOPEN


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #ifde‡
__USE_XOPEN


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

89 
__BEGIN_NAMESPACE_STD


90 #i‚de‡
__USE_FILE_OFFSET64


91 
_G_Âos_t
 
	tÂos_t
;

93 
_G_Âos64_t
 
	tÂos_t
;

95 
__END_NAMESPACE_STD


96 #ifde‡
__USE_LARGEFILE64


97 
_G_Âos64_t
 
	tÂos64_t
;

101 
	#_IOFBF
 0

	)

102 
	#_IOLBF
 1

	)

103 
	#_IONBF
 2

	)

107 #i‚de‡
BUFSIZ


108 
	#BUFSIZ
 
_IO_BUFSIZ


	)

114 #i‚de‡
EOF


115 
	#EOF
 (-1)

	)

121 
	#SEEK_SET
 0

	)

122 
	#SEEK_CUR
 1

	)

123 
	#SEEK_END
 2

	)

126 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


128 
	#P_tmpdú
 "/tmp"

	)

141 
	~<bôs/°dio_lim.h
>

145 
_IO_FILE
 *
°dö
;

146 
_IO_FILE
 *
°dout
;

147 
_IO_FILE
 *
°dîr
;

149 
	#°dö
 
°dö


	)

150 
	#°dout
 
°dout


	)

151 
	#°dîr
 
°dîr


	)

153 
__BEGIN_NAMESPACE_STD


155 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

157 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

158 
__END_NAMESPACE_STD


160 #ifde‡
__USE_ATFILE


162 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

163 
__c⁄°
 *
__√w
Ë
__THROW
;

166 
__BEGIN_NAMESPACE_STD


171 #i‚de‡
__USE_FILE_OFFSET64


172 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

174 #ifde‡
__REDIRECT


175 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

177 
	#tmpfûe
 
tmpfûe64


	)

181 #ifde‡
__USE_LARGEFILE64


182 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

186 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

187 
__END_NAMESPACE_STD


189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

209 
__BEGIN_NAMESPACE_STD


214 
	`f˛o£
 (
FILE
 *
__°ªam
);

219 
	`fÊush
 (
FILE
 *
__°ªam
);

220 
__END_NAMESPACE_STD


222 #ifde‡
__USE_MISC


229 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

232 #ifde‡
__USE_GNU


239 
	`f˛o£Æl
 ();

243 
__BEGIN_NAMESPACE_STD


244 #i‚de‡
__USE_FILE_OFFSET64


249 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

250 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

255 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

256 
__c⁄°
 *
__ª°ri˘
 
__modes
,

257 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

259 #ifde‡
__REDIRECT


260 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

261 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

262 
__wur
;

263 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

264 
__c⁄°
 *
__ª°ri˘
 
__modes
,

265 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

266 
__wur
;

268 
	#f›í
 
f›í64


	)

269 
	#‰e›í
 
‰e›í64


	)

272 
__END_NAMESPACE_STD


273 #ifde‡
__USE_LARGEFILE64


274 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

275 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

276 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

277 
__c⁄°
 *
__ª°ri˘
 
__modes
,

278 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

281 #ifdef 
__USE_POSIX


283 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

286 #ifdef 
__USE_GNU


289 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

290 
__c⁄°
 *
__ª°ri˘
 
__modes
,

291 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

294 #ifde‡
__USE_XOPEN2K8


296 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

297 
__THROW
 
__wur
;

302 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

306 
__BEGIN_NAMESPACE_STD


309 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

313 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

314 
__modes
, 
size_t
 
__n
Ë
__THROW
;

315 
__END_NAMESPACE_STD


317 #ifdef 
__USE_BSD


320 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

321 
size_t
 
__size
Ë
__THROW
;

324 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

328 
__BEGIN_NAMESPACE_STD


333 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

334 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

339 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

341 
	$•rötf
 (*
__ª°ri˘
 
__s
,

342 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

348 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

349 
_G_va_li°
 
__¨g
);

354 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

356 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

357 
_G_va_li°
 
__¨g
Ë
__THROW
;

358 
__END_NAMESPACE_STD


360 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


361 
__BEGIN_NAMESPACE_C99


363 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

364 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

365 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

367 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

368 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

369 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

370 
__END_NAMESPACE_C99


373 #ifde‡
__USE_GNU


376 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

377 
_G_va_li°
 
__¨g
)

378 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

379 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

380 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

381 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

382 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

383 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

384 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

387 #ifde‡
__USE_XOPEN2K8


394 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

395 
_G_va_li°
 
__¨g
)

396 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

397 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

398 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

402 
__BEGIN_NAMESPACE_STD


407 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

408 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

413 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

415 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

416 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

418 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

419 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

420 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

421 #ifde‡
__REDIRECT


425 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

427 
__isoc99_fsˇnf
Ë
__wur
;

428 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

429 
__isoc99_sˇnf
Ë
__wur
;

430 
	`__REDIRECT
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

431 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

432 
__isoc99_ssˇnf
Ë
__THROW
;

434 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

435 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

436 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

438 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

439 
	#fsˇnf
 
__isoc99_fsˇnf


	)

440 
	#sˇnf
 
__isoc99_sˇnf


	)

441 
	#ssˇnf
 
__isoc99_ssˇnf


	)

445 
__END_NAMESPACE_STD


447 #ifdef 
__USE_ISOC99


448 
__BEGIN_NAMESPACE_C99


453 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

454 
_G_va_li°
 
__¨g
)

455 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

461 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

462 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

465 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

466 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

467 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

469 #i‡!
deföed
 
__USE_GNU
 \

470 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

471 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

472 #ifde‡
__REDIRECT


476 
	`__REDIRECT
 (
vfsˇnf
,

477 (
FILE
 *
__ª°ri˘
 
__s
,

478 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

479 
__isoc99_vfsˇnf
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

481 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

482 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

483 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

484 
	`__REDIRECT
 (
vssˇnf
,

485 (
__c⁄°
 *
__ª°ri˘
 
__s
,

486 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

487 
__isoc99_vssˇnf
)

488 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

490 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

491 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

492 
_G_va_li°
 
__¨g
Ë
__wur
;

493 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

494 
_G_va_li°
 
__¨g
Ë
__wur
;

495 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

496 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

497 
_G_va_li°
 
__¨g
Ë
__THROW
;

498 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

499 
	#vsˇnf
 
__isoc99_vsˇnf


	)

500 
	#vssˇnf
 
__isoc99_vssˇnf


	)

504 
__END_NAMESPACE_C99


508 
__BEGIN_NAMESPACE_STD


513 
	`fgëc
 (
FILE
 *
__°ªam
);

514 
	`gëc
 (
FILE
 *
__°ªam
);

520 
	`gëch¨
 ();

521 
__END_NAMESPACE_STD


525 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

527 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


532 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

533 
	`gëch¨_u∆ocked
 ();

536 #ifde‡
__USE_MISC


543 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

547 
__BEGIN_NAMESPACE_STD


555 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

556 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

562 
	`putch¨
 (
__c
);

563 
__END_NAMESPACE_STD


567 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

569 #ifde‡
__USE_MISC


576 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

579 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


584 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

585 
	`putch¨_u∆ocked
 (
__c
);

589 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

590 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

592 
	`gëw
 (
FILE
 *
__°ªam
);

595 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

599 
__BEGIN_NAMESPACE_STD


604 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

605 
__wur
;

612 *
	$gës
 (*
__s
Ë
__wur
;

613 
__END_NAMESPACE_STD


615 #ifde‡
__USE_GNU


622 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

623 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

627 #ifdef 
__USE_XOPEN2K8


638 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

639 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

640 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

641 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

642 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

643 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

652 
size_t
 *
__ª°ri˘
 
__n
,

653 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

657 
__BEGIN_NAMESPACE_STD


662 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

668 
	`puts
 (
__c⁄°
 *
__s
);

675 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

682 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

683 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

688 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

689 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

690 
__END_NAMESPACE_STD


692 #ifde‡
__USE_GNU


699 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

700 
FILE
 *
__ª°ri˘
 
__°ªam
);

703 #ifde‡
__USE_MISC


710 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

711 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

717 
__BEGIN_NAMESPACE_STD


722 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

727 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

732 
	`ªwöd
 (
FILE
 *
__°ªam
);

733 
__END_NAMESPACE_STD


740 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


741 #i‚de‡
__USE_FILE_OFFSET64


746 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

751 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

753 #ifde‡
__REDIRECT


754 
	`__REDIRECT
 (
f£eko
,

755 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

756 
f£eko64
);

757 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

759 
	#f£eko
 
f£eko64


	)

760 
	#·ñlo
 
·ñlo64


	)

765 
__BEGIN_NAMESPACE_STD


766 #i‚de‡
__USE_FILE_OFFSET64


771 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

776 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

778 #ifde‡
__REDIRECT


779 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

780 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

781 
	`__REDIRECT
 (
f£ços
,

782 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

784 
	#fgëpos
 
fgëpos64


	)

785 
	#f£ços
 
f£ços64


	)

788 
__END_NAMESPACE_STD


790 #ifde‡
__USE_LARGEFILE64


791 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

792 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

793 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

794 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

797 
__BEGIN_NAMESPACE_STD


799 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

801 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

803 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

804 
__END_NAMESPACE_STD


806 #ifde‡
__USE_MISC


808 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

809 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

810 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

814 
__BEGIN_NAMESPACE_STD


819 
	`≥º‹
 (
__c⁄°
 *
__s
);

820 
__END_NAMESPACE_STD


826 
	~<bôs/sys_îæi°.h
>

829 #ifdef 
__USE_POSIX


831 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 #ifde‡
__USE_MISC


836 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

840 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

841 
deföed
 
__USE_MISC
)

846 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

852 
	`p˛o£
 (
FILE
 *
__°ªam
);

856 #ifdef 
__USE_POSIX


858 *
	$˘îmid
 (*
__s
Ë
__THROW
;

862 #ifde‡
__USE_XOPEN


864 *
	`cu£rid
 (*
__s
);

868 #ifdef 
__USE_GNU


869 
ob°ack
;

872 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

873 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

874 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

875 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

876 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

877 
_G_va_li°
 
__¨gs
)

878 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

882 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


886 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

890 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

893 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

896 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


900 
	#__√ed_gë›t


	)

901 
	~<gë›t.h
>

906 #ifde‡
__USE_EXTERN_INLINES


907 
	~<bôs/°dio.h
>

909 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


910 
	~<bôs/°dio2.h
>

912 #ifde‡
__LDBL_COMPAT


913 
	~<bôs/°dio-ldbl.h
>

916 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


502 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

505 #ifde‡
__USE_XOPEN2K


507 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

508 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

511 
__BEGIN_NAMESPACE_STD


513 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

517 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

519 #ifde‡
__USE_GNU


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #ifde‡
__USE_GNU


551 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

553 
__END_NAMESPACE_STD


555 #ifde‡
__USE_ISOC99


556 
__BEGIN_NAMESPACE_C99


559 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

560 
__END_NAMESPACE_C99


564 
__BEGIN_NAMESPACE_STD


566 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

567 
__END_NAMESPACE_STD


571 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


604 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

614 #i‚de‡
__USE_FILE_OFFSET64


615 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

617 #ifde‡
__REDIRECT


618 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

619 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 
	#mk°emp
 
mk°emp64


	)

624 #ifde‡
__USE_LARGEFILE64


625 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

629 #ifde‡
__USE_MISC


636 #i‚de‡
__USE_FILE_OFFSET64


637 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

639 #ifde‡
__REDIRECT


640 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

641 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 
	#mk°emps
 
mk°emps64


	)

646 #ifde‡
__USE_LARGEFILE64


647 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

648 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

652 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


658 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

661 #ifde‡
__USE_GNU


668 #i‚de‡
__USE_FILE_OFFSET64


669 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

671 #ifde‡
__REDIRECT


672 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

673 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 
	#mko°emp
 
mko°emp64


	)

678 #ifde‡
__USE_LARGEFILE64


679 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

688 #i‚de‡
__USE_FILE_OFFSET64


689 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

690 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #ifde‡
__REDIRECT


693 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

694 
__Êags
), 
mko°emps64
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 
	#mko°emps
 
mko°emps64


	)

700 #ifde‡
__USE_LARGEFILE64


701 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

702 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

707 
__BEGIN_NAMESPACE_STD


712 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

713 
__END_NAMESPACE_STD


716 #ifdef 
__USE_GNU


719 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

720 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

723 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


729 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

730 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

735 #i‚de‡
__COMPAR_FN_T


736 
	#__COMPAR_FN_T


	)

737 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

739 #ifdef 
__USE_GNU


740 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

743 #ifde‡
__USE_GNU


744 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

747 
__BEGIN_NAMESPACE_STD


750 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

751 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

752 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

756 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

757 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

758 #ifde‡
__USE_GNU


759 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

760 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

761 
	`__n⁄nuŒ
 ((1, 4));

766 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

767 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

768 
__END_NAMESPACE_STD


770 #ifde‡
__USE_ISOC99


771 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

772 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__BEGIN_NAMESPACE_STD


780 
div_t
 
	$div
 (
__numî
, 
__díom
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

782 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

783 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__END_NAMESPACE_STD


786 #ifde‡
__USE_ISOC99


787 
__BEGIN_NAMESPACE_C99


788 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

789 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
__END_NAMESPACE_C99


795 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


802 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

803 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

808 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

815 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

818 #ifde‡
__USE_MISC


820 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

821 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

822 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

824 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

826 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

827 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

832 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

833 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

834 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

835 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

836 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

837 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

839 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

840 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

841 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

842 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

843 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

844 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

845 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

846 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

851 
__BEGIN_NAMESPACE_STD


854 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

857 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

858 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

861 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

865 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

866 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

868 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

869 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

870 
__THROW
;

871 
__END_NAMESPACE_STD


874 #ifde‡
__USE_SVID


879 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

883 #ifde‡
__USE_XOPEN_EXTENDED


890 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

891 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

892 **
__ª°ri˘
 
__vÆuï
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

897 #ifde‡
__USE_XOPEN


899 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

905 #ifde‡
__USE_XOPEN2K


907 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

910 #ifde‡
__USE_XOPEN


915 
	$gø¡±
 (
__fd
Ë
__THROW
;

919 
	$u∆ock±
 (
__fd
Ë
__THROW
;

924 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

927 #ifde‡
__USE_GNU


931 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

932 
__THROW
 
	`__n⁄nuŒ
 ((2));

935 
	`gë±
 ();

938 #ifde‡
__USE_BSD


942 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

943 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


949 
	~<bôs/°dlib.h
>

951 #ifde‡
__LDBL_COMPAT


952 
	~<bôs/°dlib-ldbl.h
>

956 #unde‡
__√ed_mÆloc_™d_ˇŒoc


958 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

37 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

41 
__BEGIN_NAMESPACE_STD


43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

44 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

45 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

49 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 
__END_NAMESPACE_STD


55 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


56 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
__c
, 
size_t
 
__n
)

58 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

62 
__BEGIN_NAMESPACE_STD


64 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

67 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

68 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

71 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


74 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

76 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

79 #ifde‡
__OPTIMIZE__


80 
__exã∫_Æways_ölöe
 *

81 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


83  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

86 
__exã∫_Æways_ölöe
 
__c⁄°
 *

87 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


89  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

92 
	}
}

94 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

95 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

97 
__END_NAMESPACE_STD


99 #ifde‡
__USE_GNU


102 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


103 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

105 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

108 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

109 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

113 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


114 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

116 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

119 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

120 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

125 
__BEGIN_NAMESPACE_STD


127 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

128 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

130 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

131 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

132 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

135 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

136 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

138 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

139 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

142 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

143 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

145 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

149 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

150 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

152 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

153 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((2));

155 
__END_NAMESPACE_STD


157 #ifde‡
__USE_XOPEN2K8


161 
	~<xloˇÀ.h
>

164 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

165 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

167 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

168 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

171 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


173 *
	$°rdup
 (
__c⁄°
 *
__s
)

174 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

180 #i‡
deföed
 
__USE_XOPEN2K8


181 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

182 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

185 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


187 
	#°rdu∑
(
s
) \

188 (
__exãnsi⁄__
 \

190 
__c⁄°
 *
__ﬁd
 = (
s
); \

191 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

192 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

193 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

194 
	}
}))

	)

197 
	#°∫du∑
(
s
, 
n
) \

198 (
__exãnsi⁄__
 \

200 
__c⁄°
 *
__ﬁd
 = (
s
); \

201 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

202 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

203 
__√w
[
__Àn
] = '\0'; \

204 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

205 }))

	)

208 
	g__BEGIN_NAMESPACE_STD


210 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


213 *
°rchr
 (*
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

215 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 #ifde‡
__OPTIMIZE__


219 
__exã∫_Æways_ölöe
 *

220 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


222  
__buûtö_°rchr
 (
__s
, 
__c
);

225 
__exã∫_Æways_ölöe
 
__c⁄°
 *

226 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


228  
__buûtö_°rchr
 (
__s
, 
__c
);

233 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

234 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


240 *
	`°ºchr
 (*
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

242 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 #ifde‡
__OPTIMIZE__


246 
__exã∫_Æways_ölöe
 *

247 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


249  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

252 
__exã∫_Æways_ölöe
 
__c⁄°
 *

253 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


255  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

258 
	}
}

260 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

261 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

263 
__END_NAMESPACE_STD


265 #ifde‡
__USE_GNU


268 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


269 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

271 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

275 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

279 
__BEGIN_NAMESPACE_STD


282 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

283 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

286 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


292 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

294 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 #ifde‡
__OPTIMIZE__


298 
__exã∫_Æways_ölöe
 *

299 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


301  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

304 
__exã∫_Æways_ölöe
 
__c⁄°
 *

305 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


307  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

310 
	}
}

312 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

313 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

316 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


319 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

321 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

322 
__c⁄°
 *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

325 #ifde‡
__OPTIMIZE__


326 
__exã∫_Æways_ölöe
 *

327 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


329  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

332 
__exã∫_Æways_ölöe
 
__c⁄°
 *

333 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


335  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

338 
	}
}

340 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

341 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

346 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

347 
__THROW
 
	`__n⁄nuŒ
 ((2));

348 
__END_NAMESPACE_STD


352 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

353 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

354 **
__ª°ri˘
 
__ßve_±r
)

355 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

356 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


357 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

358 **
__ª°ri˘
 
__ßve_±r
)

359 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

362 #ifde‡
__USE_GNU


364 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


365 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

367 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

368 
__c⁄°
 *
__√edÀ
)

369 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

371 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

372 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

376 #ifde‡
__USE_GNU


380 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

381 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

382 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

386 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

387 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

389 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

390 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

395 
__BEGIN_NAMESPACE_STD


397 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

398 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

399 
__END_NAMESPACE_STD


401 #ifdef 
__USE_XOPEN2K8


404 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

405 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

409 
__BEGIN_NAMESPACE_STD


411 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

412 
__END_NAMESPACE_STD


413 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


421 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


424 #ifde‡
__REDIRECT_NTH


425 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

426 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

427 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

429 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

430 
__THROW
 
	`__n⁄nuŒ
 ((2));

431 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

436 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

437 
__THROW
 
	`__n⁄nuŒ
 ((2));

441 #ifde‡
__USE_XOPEN2K8


443 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

449 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

451 #ifde‡
__USE_BSD


453 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

454 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

457 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

460 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

461 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

464 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


467 *
	`ödex
 (*
__s
, 
__c
)

468 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

472 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


473 
__exã∫_Æways_ölöe
 *

474 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


476  
	`__buûtö_ödex
 (
__s
, 
__c
);

479 
__exã∫_Æways_ölöe
 
__c⁄°
 *

480 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


482  
	`__buûtö_ödex
 (
__s
, 
__c
);

485 
	}
}

487 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

488 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

492 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


495 *
	`rödex
 (*
__s
, 
__c
)

496 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

500 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


501 
__exã∫_Æways_ölöe
 *

502 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


504  
	`__buûtö_rödex
 (
__s
, 
__c
);

507 
__exã∫_Æways_ölöe
 
__c⁄°
 *

508 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


510  
	`__buûtö_rödex
 (
__s
, 
__c
);

513 
	}
}

515 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

516 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

521 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

525 #ifdef 
__USE_GNU


526 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifde‡
__GNUC__


528 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

529 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/sys/stat.h

24 #i‚def 
_SYS_STAT_H


25 
	#_SYS_STAT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

32 || 
deföed
 
	g__USE_ATFILE


33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_time_t


	)

36 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


37 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


45 #i‚de‡
__dev_t_deföed


46 
__dev_t
 
	tdev_t
;

47 
	#__dev_t_deföed


	)

50 #i‚de‡
__gid_t_deföed


51 
__gid_t
 
	tgid_t
;

52 
	#__gid_t_deföed


	)

55 #i‚de‡
__öo_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__öo_t
 
	töo_t
;

59 
__öo64_t
 
	töo_t
;

61 
	#__öo_t_deföed


	)

64 #i‚de‡
__mode_t_deföed


65 
__mode_t
 
	tmode_t
;

66 
	#__mode_t_deföed


	)

69 #i‚de‡
__∆ök_t_deföed


70 
__∆ök_t
 
	t∆ök_t
;

71 
	#__∆ök_t_deföed


	)

74 #i‚de‡
__off_t_deföed


75 #i‚de‡
__USE_FILE_OFFSET64


76 
__off_t
 
	toff_t
;

78 
__off64_t
 
	toff_t
;

80 
	#__off_t_deföed


	)

83 #i‚de‡
__uid_t_deföed


84 
__uid_t
 
	tuid_t
;

85 
	#__uid_t_deföed


	)

89 #ifde‡
__USE_UNIX98


90 #i‚de‡
__blk˙t_t_deföed


91 #i‚de‡
__USE_FILE_OFFSET64


92 
__blk˙t_t
 
	tblk˙t_t
;

94 
__blk˙t64_t
 
	tblk˙t_t
;

96 
	#__blk˙t_t_deföed


	)

99 #i‚de‡
__blksize_t_deföed


100 
__blksize_t
 
	tblksize_t
;

101 
	#__blksize_t_deföed


	)

105 
	g__BEGIN_DECLS


107 
	~<bôs/°©.h
>

109 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


110 
	#S_IFMT
 
__S_IFMT


	)

111 
	#S_IFDIR
 
__S_IFDIR


	)

112 
	#S_IFCHR
 
__S_IFCHR


	)

113 
	#S_IFBLK
 
__S_IFBLK


	)

114 
	#S_IFREG
 
__S_IFREG


	)

115 #ifde‡
__S_IFIFO


116 
	#S_IFIFO
 
__S_IFIFO


	)

118 #ifde‡
__S_IFLNK


119 
	#S_IFLNK
 
__S_IFLNK


	)

121 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

122 && 
deföed
 
	g__S_IFSOCK


123 
	#S_IFSOCK
 
__S_IFSOCK


	)

129 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

131 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

132 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

133 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

134 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

135 #ifde‡
__S_IFIFO


136 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

138 #ifde‡
__S_IFLNK


139 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

142 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


143 
	#S_ISLNK
(
mode
Ë0

	)

146 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

147 && 
deföed
 
	g__S_IFSOCK


148 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

155 #ifdef 
__USE_POSIX199309


156 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

157 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

158 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

164 
	#S_ISUID
 
__S_ISUID


	)

165 
	#S_ISGID
 
__S_ISGID


	)

167 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


169 
	#S_ISVTX
 
__S_ISVTX


	)

172 
	#S_IRUSR
 
__S_IREAD


	)

173 
	#S_IWUSR
 
__S_IWRITE


	)

174 
	#S_IXUSR
 
__S_IEXEC


	)

176 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

178 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


179 
	#S_IREAD
 
S_IRUSR


	)

180 
	#S_IWRITE
 
S_IWUSR


	)

181 
	#S_IEXEC
 
S_IXUSR


	)

184 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

185 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

186 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

188 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

190 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

191 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

192 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

194 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

197 #ifdef 
__USE_BSD


199 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

200 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

201 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

203 
	#S_BLKSIZE
 512

	)

207 #i‚de‡
__USE_FILE_OFFSET64


209 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

210 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

214 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

216 #ifde‡
__REDIRECT_NTH


217 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

218 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

219 
	`__n⁄nuŒ
 ((1, 2));

220 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

221 
	`__n⁄nuŒ
 ((2));

223 
	#°©
 
°©64


	)

224 
	#f°©
 
f°©64


	)

227 #ifde‡
__USE_LARGEFILE64


228 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

229 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

230 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

233 #ifde‡
__USE_ATFILE


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

239 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

240 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

242 #ifde‡
__REDIRECT_NTH


243 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

244 
°©
 *
__ª°ri˘
 
__buf
,

245 
__Êag
),

246 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

248 
	#f°©©
 
f°©©64


	)

252 #ifde‡
__USE_LARGEFILE64


253 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

254 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

255 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

259 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


260 #i‚de‡
__USE_FILE_OFFSET64


263 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

264 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

266 #ifde‡
__REDIRECT_NTH


267 
	`__REDIRECT_NTH
 (
l°©
,

268 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

269 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

270 
	`__n⁄nuŒ
 ((1, 2));

272 
	#l°©
 
l°©64


	)

275 #ifde‡
__USE_LARGEFILE64


276 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

277 
°©64
 *
__ª°ri˘
 
__buf
)

278 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

284 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

285 
__THROW
 
	`__n⁄nuŒ
 ((1));

287 #ifde‡
__USE_BSD


291 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


297 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

300 #ifde‡
__USE_ATFILE


303 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
,

304 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

312 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

314 #ifdef 
__USE_GNU


317 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

321 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

322 
__THROW
 
	`__n⁄nuŒ
 ((1));

324 #ifde‡
__USE_ATFILE


328 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

329 
__THROW
 
	`__n⁄nuŒ
 ((2));

335 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


336 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

337 
__THROW
 
	`__n⁄nuŒ
 ((1));

339 #ifde‡
__USE_ATFILE


343 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

344 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1));

353 #ifde‡
__USE_ATFILE


357 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

361 #ifde‡
__USE_ATFILE


364 
	$utimíßt
 (
__fd
, 
__c⁄°
 *
__∑th
,

365 
__c⁄°
 
time•ec
 
__times
[2],

366 
__Êags
)

367 
__THROW
 
	`__n⁄nuŒ
 ((2));

370 #ifde‡
__USE_XOPEN2K8


372 
	$futimís
 (
__fd
, 
__c⁄°
 
time•ec
 
__times
[2]Ë
__THROW
;

390 #i‚de‡
_STAT_VER


391 
	#_STAT_VER
 0

	)

393 #i‚de‡
_MKNOD_VER


394 
	#_MKNOD_VER
 0

	)

398 #i‚de‡
__USE_FILE_OFFSET64


399 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

400 
__THROW
 
	`__n⁄nuŒ
 ((3));

401 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

402 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

403 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

404 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

405 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

406 
°©
 *
__°©_buf
, 
__Êag
)

407 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

409 #ifde‡
__REDIRECT_NTH


410 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

411 
°©
 *
__°©_buf
), 
__fx°©64
)

412 
	`__n⁄nuŒ
 ((3));

413 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

414 
°©
 *
__°©_buf
), 
__x°©64
)

415 
	`__n⁄nuŒ
 ((2, 3));

416 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

417 
°©
 *
__°©_buf
), 
__lx°©64
)

418 
	`__n⁄nuŒ
 ((2, 3));

419 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

420 
__c⁄°
 *
__fûíame
,

421 
°©
 *
__°©_buf
, 
__Êag
),

422 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

425 
	#__fx°©
 
__fx°©64


	)

426 
	#__x°©
 
__x°©64


	)

427 
	#__lx°©
 
__lx°©64


	)

431 #ifde‡
__USE_LARGEFILE64


432 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

433 
__THROW
 
	`__n⁄nuŒ
 ((3));

434 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

435 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

436 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

437 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

438 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

439 
°©64
 *
__°©_buf
, 
__Êag
)

440 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

442 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

443 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

445 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

446 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

447 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

449 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES_IN_LIBC


452 
__exã∫_ölöe
 

453 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

455  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

456 
	}
}

458 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


459 
__exã∫_ölöe
 

460 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

462  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

463 
	}
}

466 
__exã∫_ölöe
 

467 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

469  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

470 
	}
}

472 #ifde‡
__USE_ATFILE


473 
__exã∫_ölöe
 

474 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

475 
__Êag
))

477  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

478 
	}
}

481 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


482 
__exã∫_ölöe
 

483 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

485  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

486 
	}
}

489 #ifde‡
__USE_ATFILE


490 
__exã∫_ölöe
 

491 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

492 
__dev_t
 
__dev
))

494  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

495 
	}
}

498 #i‡
deföed
 
__USE_LARGEFILE64
 \

499 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

500 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

501 
__exã∫_ölöe
 

502 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

504  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

505 
	}
}

507 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


508 
__exã∫_ölöe
 

509 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

511  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

512 
	}
}

515 
__exã∫_ölöe
 

516 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

518  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

519 
	}
}

521 #ifde‡
__USE_ATFILE


522 
__exã∫_ölöe
 

523 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

524 
__Êag
))

526  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

527 
	}
}

534 
	g__END_DECLS


	@/usr/include/sys/times.h

23 #i‚def 
_SYS_TIMES_H


24 
	#_SYS_TIMES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	#__√ed_˛ock_t


	)

29 
	~<time.h
>

32 
__BEGIN_DECLS


35 
	stms


37 
˛ock_t
 
	mtms_utime
;

38 
˛ock_t
 
	mtms_°ime
;

40 
˛ock_t
 
	mtms_cutime
;

41 
˛ock_t
 
	mtms_c°ime
;

49 
˛ock_t
 
	$times
 (
tms
 *
__buf„r
Ë
__THROW
;

51 
__END_DECLS


	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/sys/utsname.h

23 #i‚def 
_SYS_UTSNAME_H


24 
	#_SYS_UTSNAME_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ut¢ame.h
>

32 #i‚de‡
_UTSNAME_SYSNAME_LENGTH


33 
	#_UTSNAME_SYSNAME_LENGTH
 
_UTSNAME_LENGTH


	)

35 #i‚de‡
_UTSNAME_NODENAME_LENGTH


36 
	#_UTSNAME_NODENAME_LENGTH
 
_UTSNAME_LENGTH


	)

38 #i‚de‡
_UTSNAME_RELEASE_LENGTH


39 
	#_UTSNAME_RELEASE_LENGTH
 
_UTSNAME_LENGTH


	)

41 #i‚de‡
_UTSNAME_VERSION_LENGTH


42 
	#_UTSNAME_VERSION_LENGTH
 
_UTSNAME_LENGTH


	)

44 #i‚de‡
_UTSNAME_MACHINE_LENGTH


45 
	#_UTSNAME_MACHINE_LENGTH
 
_UTSNAME_LENGTH


	)

49 
	sut¢ame


52 
	msy¢ame
[
_UTSNAME_SYSNAME_LENGTH
];

55 
	mnodíame
[
_UTSNAME_NODENAME_LENGTH
];

58 
	mªÀa£
[
_UTSNAME_RELEASE_LENGTH
];

60 
	mvîsi⁄
[
_UTSNAME_VERSION_LENGTH
];

63 
	mmachöe
[
_UTSNAME_MACHINE_LENGTH
];

65 #i‡
_UTSNAME_DOMAIN_LENGTH
 - 0

67 #ifde‡
__USE_GNU


68 
	mdomaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

70 
	m__domaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

75 #ifde‡
__USE_SVID


77 
	#SYS_NMLN
 
_UTSNAME_LENGTH


	)

82 
	$u«me
 (
ut¢ame
 *
__«me
Ë
__THROW
;

85 
__END_DECLS


	@/usr/include/sys/wait.h

24 #i‚def 
_SYS_WAIT_H


25 
	#_SYS_WAIT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<sig«l.h
>

32 
	~<sys/ªsour˚.h
>

35 #i‡!
deföed
 
_STDLIB_H
 || !deföed 
__USE_XOPEN


38 
	~<bôs/waôÊags.h
>

40 #ifdef 
__USE_BSD


45 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


46 
	#__WAIT_INT
(
°©us
) \

47 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

48 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

50 
	#__WAIT_INT
(
°©us
Ë(*(
__c⁄°
 *Ë&(°©us))

	)

58 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


59 
	#__WAIT_STATUS
 *

	)

60 
	#__WAIT_STATUS_DEFN
 *

	)

65 
waô
 *
	m__u±r
;

66 *
	m__ùå
;

67 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

68 
	#__WAIT_STATUS_DEFN
 *

	)

73 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

74 
	#__WAIT_STATUS
 *

	)

75 
	#__WAIT_STATUS_DEFN
 *

	)

80 
	~<bôs/waô°©us.h
>

82 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

83 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

84 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

88 #ifde‡
__WIFCONTINUED


89 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

93 #ifdef 
__USE_BSD


94 
	#WCOREFLAG
 
__WCOREFLAG


	)

95 
	#WCOREDUMP
(
°©us
Ë
	`__WCOREDUMP
 (
	`__WAIT_INT
 (°©us))

	)

96 
	#W_EXITCODE
(
ªt
, 
sig
Ë
	`__W_EXITCODE
 (ªt, sig)

	)

97 
	#W_STOPCODE
(
sig
Ë
	`__W_STOPCODE
 (sig)

	)

101 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


104 
	mP_ALL
,

105 
	mP_PID
,

106 
	mP_PGID


107 } 
	tidty≥_t
;

116 
__pid_t
 
waô
 (
__WAIT_STATUS
 
__°©_loc
);

118 #ifdef 
__USE_BSD


120 
	#WAIT_ANY
 (-1Ë

	)

121 
	#WAIT_MYPGRP
 0

	)

139 
__pid_t
 
waôpid
 (__pid_à
__pid
, *
__°©_loc
, 
__›ti⁄s
);

141 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


142 
	#__√ed_sigöfo_t


	)

143 
	~<bôs/sigöfo.h
>

155 
waôid
 (
idty≥_t
 
__idty≥
, 
__id_t
 
__id
, 
sigöfo_t
 *
__öf›
,

156 
__›ti⁄s
);

159 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


162 
	grußge
;

169 
__pid_t
 
	$waô3
 (
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

170 
rußge
 * 
__ußge
Ë
__THROW
;

173 #ifde‡
__USE_BSD


175 
__pid_t
 
	$waô4
 (
__pid_t
 
__pid
, 
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

176 
rußge
 *
__ußge
Ë
__THROW
;

180 
__END_DECLS


	@/usr/include/termios.h

23 #i‚def 
_TERMIOS_H


24 
	#_TERMIOS_H
 1

	)

26 
	~<„©uªs.h
>

27 #ifde‡
__USE_UNIX98


29 
	~<bôs/ty≥s.h
>

30 #i‚de‡
__pid_t_deföed


31 
__pid_t
 
	tpid_t
;

32 
	#__pid_t_deföed


	)

36 
	g__BEGIN_DECLS


40 
	~<bôs/ãrmios.h
>

42 #ifde‡
__USE_BSD


45 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

49 
•ìd_t
 
	$cfgëo•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

52 
•ìd_t
 
	$cfgëi•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

55 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

58 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

60 #ifdef 
__USE_BSD


62 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

67 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

71 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

72 
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

75 #ifdef 
__USE_BSD


77 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

81 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

87 
	`tcdøö
 (
__fd
);

91 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

95 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

98 #ifde‡
__USE_UNIX98


100 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

104 #ifde‡
__USE_BSD


105 
	~<sys/âydeÁu…s.h
>

108 
__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #ifde‡
__USE_UNIX98


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

317 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


319 
	#L_SET
 
SEEK_SET


	)

320 
	#L_INCR
 
SEEK_CUR


	)

321 
	#L_XTND
 
SEEK_END


	)

330 #i‚de‡
__USE_FILE_OFFSET64


331 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

333 #ifde‡
__REDIRECT_NTH


334 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

335 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

336 
l£ek64
);

338 
	#l£ek
 
l£ek64


	)

341 #ifde‡
__USE_LARGEFILE64


342 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

343 
__THROW
;

350 
	`˛o£
 (
__fd
);

357 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

363 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

365 #ifde‡
__USE_UNIX98


366 #i‚de‡
__USE_FILE_OFFSET64


373 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

374 
__off_t
 
__off£t
Ë
__wur
;

381 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

382 
__off_t
 
__off£t
Ë
__wur
;

384 #ifde‡
__REDIRECT


385 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

386 
__off64_t
 
__off£t
),

387 
¥ód64
Ë
__wur
;

388 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

389 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

390 
pwrôe64
Ë
__wur
;

392 
	#¥ód
 
¥ód64


	)

393 
	#pwrôe
 
pwrôe64


	)

397 #ifde‡
__USE_LARGEFILE64


401 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

402 
__off64_t
 
__off£t
Ë
__wur
;

405 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

406 
__off64_t
 
__off£t
Ë
__wur
;

414 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

416 #ifde‡
__USE_GNU


419 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

429 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

441 
	`¶ìp
 (
__£c⁄ds
);

443 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


448 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

449 
__THROW
;

456 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

465 
	`∑u£
 ();

469 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

470 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

472 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


474 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

479 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

480 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

484 #ifde‡
__USE_ATFILE


487 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

488 
__gid_t
 
__group
, 
__Êag
)

489 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

493 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

495 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


497 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

507 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

509 #ifdef 
__USE_GNU


513 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

516 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


520 *
	$gëwd
 (*
__buf
)

521 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

526 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

529 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

531 #ifde‡
__USE_GNU


534 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

538 **
__ívú⁄
;

539 #ifde‡
__USE_GNU


540 **
ívú⁄
;

546 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

547 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

549 #ifde‡
__USE_XOPEN2K8


552 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

553 
__THROW
;

558 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

559 
__THROW
 
	`__n⁄nuŒ
 ((1));

563 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

564 
__THROW
 
	`__n⁄nuŒ
 ((1));

568 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1));

573 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

574 
__THROW
 
	`__n⁄nuŒ
 ((1));

579 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

580 
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #ifde‡
__USE_GNU


585 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

586 *
__c⁄°
 
__ívp
[])

587 
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


593 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

598 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

604 
	~<bôs/c⁄‚ame.h
>

607 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

608 
__THROW
 
	`__n⁄nuŒ
 ((1));

611 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

614 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

616 #ifdef 
__USE_POSIX2


618 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

623 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

626 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

630 #i‚de‡
__FAVOR_BSD


631 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

633 #ifde‡
__REDIRECT_NTH


634 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

636 
	#gëpgΩ
 
__gëpgid


	)

641 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

642 #ifde‡
__USE_XOPEN_EXTENDED


643 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

650 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

652 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


663 #i‚de‡
__FAVOR_BSD


667 
	$£çgΩ
 (Ë
__THROW
;

672 #ifde‡
__REDIRECT_NTH


673 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

675 
	#£çgΩ
 
£çgid


	)

684 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

686 #ifde‡
__USE_XOPEN_EXTENDED


688 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

692 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

695 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

698 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

701 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

706 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

708 #ifdef 
__USE_GNU


710 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

717 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

734 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

736 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


739 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

742 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


744 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

747 #ifde‡
__USE_GNU


750 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

751 
__THROW
;

755 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

756 
__THROW
;

760 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

761 
__THROW
;

765 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

766 
__THROW
;

773 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

775 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


780 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

786 *
	$ây«me
 (
__fd
Ë
__THROW
;

790 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

791 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

795 
	$ißây
 (
__fd
Ë
__THROW
;

797 #i‡
deföed
 
__USE_BSD
 \

798 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

801 
	$ây¶Ÿ
 (Ë
__THROW
;

806 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 #ifde‡
__USE_ATFILE


812 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

813 
__c⁄°
 *
__to
, 
__Êags
)

814 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

817 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


819 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

820 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

825 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

826 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

830 #ifde‡
__USE_ATFILE


832 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

833 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

836 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

837 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

838 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

842 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_ATFILE


846 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

847 
__THROW
 
	`__n⁄nuŒ
 ((2));

851 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

855 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

858 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

865 *
	`gëlogö
 ();

866 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


873 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

876 #ifdef 
__USE_BSD


878 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

882 #ifdef 
__USE_POSIX2


886 
	#__√ed_gë›t


	)

887 
	~<gë›t.h
>

891 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


895 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

899 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

902 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

903 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

907 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

913 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

914 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

915 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

916 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

922 
	$vh™gup
 (Ë
__THROW
;

925 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

933 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

934 
size_t
 
__off£t
, 
__sˇÀ
)

935 
__THROW
 
	`__n⁄nuŒ
 ((1));

941 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

945 *
	$gëu£rshñl
 (Ë
__THROW
;

946 
	$ídu£rshñl
 (Ë
__THROW
;

947 
	$£tu£rshñl
 (Ë
__THROW
;

953 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

957 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

960 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

964 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

968 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


973 
	`fsync
 (
__fd
);

977 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


980 
	`gëho°id
 ();

983 
	$sync
 (Ë
__THROW
;

988 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

993 
	$gëdèbÀsize
 (Ë
__THROW
;

997 #i‚de‡
__USE_FILE_OFFSET64


998 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

999 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 #ifde‡
__REDIRECT_NTH


1002 
	`__REDIRECT_NTH
 (
åunˇã
,

1003 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1004 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1006 
	#åunˇã
 
åunˇã64


	)

1009 #ifde‡
__USE_LARGEFILE64


1010 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1016 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1019 #i‚de‡
__USE_FILE_OFFSET64


1020 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1022 #ifde‡
__REDIRECT_NTH


1023 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1024 
·runˇã64
Ë
__wur
;

1026 
	#·runˇã
 
·runˇã64


	)

1029 #ifde‡
__USE_LARGEFILE64


1030 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1036 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1040 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1046 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1050 #ifde‡
__USE_MISC


1061 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1066 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1078 
	#F_ULOCK
 0

	)

1079 
	#F_LOCK
 1

	)

1080 
	#F_TLOCK
 2

	)

1081 
	#F_TEST
 3

	)

1083 #i‚de‡
__USE_FILE_OFFSET64


1084 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1086 #ifde‡
__REDIRECT


1087 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1088 
lockf64
Ë
__wur
;

1090 
	#lockf
 
lockf64


	)

1093 #ifde‡
__USE_LARGEFILE64


1094 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1099 #ifde‡
__USE_GNU


1104 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1105 (
__exãnsi⁄__
 \

1106 ({ 
__ªsu…
; \

1107 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1108 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1109 
__ªsu…
; 
	}
}))

	)

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1121 #ifdef 
__USE_XOPEN


1123 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1124 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1135 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1136 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1142 #ifde‡
__USE_XOPEN


1144 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1149 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1150 
	~<bôs/uni°d.h
>

1153 
__END_DECLS


	@/usr/include/utime.h

23 #i‚def 
_UTIME_H


24 
	#_UTIME_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


33 
	#__√ed_time_t


	)

34 
	~<time.h
>

38 
	sutimbuf


40 
__time_t
 
	ma˘ime
;

41 
__time_t
 
	mmodtime
;

46 
	$utime
 (
__c⁄°
 *
__fûe
,

47 
__c⁄°
 
utimbuf
 *
__fûe_times
)

48 
__THROW
 
	`__n⁄nuŒ
 ((1));

50 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/a.out.h

1 #i‚de‡
__A_OUT_GNU_H__


5 
	~<bôs/w‹dsize.h
>

7 #i‡
__WORDSIZE
 == 64

11 
	#__NO_A_OUT_SUPPORT
 1

	)

	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS
,

502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

504 
	m_SC_V7_ILP32_OFF32
,

505 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

506 
	m_SC_V7_ILP32_OFFBIG
,

507 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

508 
	m_SC_V7_LP64_OFF64
,

509 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

510 
	m_SC_V7_LPBIG_OFFBIG
,

511 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

513 
	m_SC_SS_REPL_MAX
,

514 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

516 
	m_SC_TRACE_EVENT_NAME_MAX
,

517 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

518 
	m_SC_TRACE_NAME_MAX
,

519 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

520 
	m_SC_TRACE_SYS_MAX
,

521 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

522 
	m_SC_TRACE_USER_EVENT_MAX
,

523 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

525 
	m_SC_XOPEN_STREAMS
,

526 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

528 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

529 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

530 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


531 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

537 
	m_CS_PATH
,

538 
	#_CS_PATH
 
_CS_PATH


	)

540 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

541 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

544 
	m_CS_GNU_LIBC_VERSION
,

545 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

546 
	m_CS_GNU_LIBPTHREAD_VERSION
,

547 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

549 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

550 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

553 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_LFS_CFLAGS
 = 1000,

558 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

559 
	m_CS_LFS_LDFLAGS
,

560 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

561 
	m_CS_LFS_LIBS
,

562 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

563 
	m_CS_LFS_LINTFLAGS
,

564 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

565 
	m_CS_LFS64_CFLAGS
,

566 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

567 
	m_CS_LFS64_LDFLAGS
,

568 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

569 
	m_CS_LFS64_LIBS
,

570 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

571 
	m_CS_LFS64_LINTFLAGS
,

572 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

575 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

577 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

579 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

593 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_LIBS
,

595 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

596 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

43 #i‡
__WORDSIZE
 == 64

57 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

58 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

59 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

62 
	#_POSIX_V7_LP64_OFF64
 1

	)

63 
	#_POSIX_V6_LP64_OFF64
 1

	)

64 
	#_XBS5_LP64_OFF64
 1

	)

70 
	#_POSIX_V7_ILP32_OFF32
 1

	)

71 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

72 
	#_POSIX_V6_ILP32_OFF32
 1

	)

73 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

74 
	#_XBS5_ILP32_OFF32
 1

	)

75 
	#_XBS5_ILP32_OFFBIG
 1

	)

92 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

93 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

94 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

95 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

96 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

97 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
__ASSEMBLER__


43 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

45 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


47 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

52 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


56 
	#EDOM
 33

	)

57 
	#EILSEQ
 84

	)

58 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

20 #i‚def 
_FCNTL_H


24 
	~<sys/ty≥s.h
>

25 
	~<bôs/w‹dsize.h
>

26 #ifde‡
__USE_GNU


27 
	~<bôs/uio.h
>

33 
	#O_ACCMODE
 0003

	)

34 
	#O_RDONLY
 00

	)

35 
	#O_WRONLY
 01

	)

36 
	#O_RDWR
 02

	)

37 
	#O_CREAT
 0100

	)

38 
	#O_EXCL
 0200

	)

39 
	#O_NOCTTY
 0400

	)

40 
	#O_TRUNC
 01000

	)

41 
	#O_APPEND
 02000

	)

42 
	#O_NONBLOCK
 04000

	)

43 
	#O_NDELAY
 
O_NONBLOCK


	)

44 
	#O_SYNC
 010000

	)

45 
	#O_FSYNC
 
O_SYNC


	)

46 
	#O_ASYNC
 020000

	)

48 #ifde‡
__USE_GNU


49 
	#O_DIRECT
 040000

	)

50 
	#O_DIRECTORY
 0200000

	)

51 
	#O_NOFOLLOW
 0400000

	)

52 
	#O_NOATIME
 01000000

	)

53 
	#O_CLOEXEC
 02000000

	)

59 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


60 
	#O_DSYNC
 
O_SYNC


	)

61 
	#O_RSYNC
 
O_SYNC


	)

64 #ifde‡
__USE_LARGEFILE64


65 #i‡
__WORDSIZE
 == 64

66 
	#O_LARGEFILE
 0

	)

68 
	#O_LARGEFILE
 0100000

	)

73 
	#F_DUPFD
 0

	)

74 
	#F_GETFD
 1

	)

75 
	#F_SETFD
 2

	)

76 
	#F_GETFL
 3

	)

77 
	#F_SETFL
 4

	)

78 #i‡
__WORDSIZE
 == 64

79 
	#F_GETLK
 5

	)

80 
	#F_SETLK
 6

	)

81 
	#F_SETLKW
 7

	)

83 
	#F_GETLK64
 5

	)

84 
	#F_SETLK64
 6

	)

85 
	#F_SETLKW64
 7

	)

87 #i‚de‡
__USE_FILE_OFFSET64


88 
	#F_GETLK
 5

	)

89 
	#F_SETLK
 6

	)

90 
	#F_SETLKW
 7

	)

92 
	#F_GETLK
 
F_GETLK64


	)

93 
	#F_SETLK
 
F_SETLK64


	)

94 
	#F_SETLKW
 
F_SETLKW64


	)

96 
	#F_GETLK64
 12

	)

97 
	#F_SETLK64
 13

	)

98 
	#F_SETLKW64
 14

	)

101 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


102 
	#F_SETOWN
 8

	)

103 
	#F_GETOWN
 9

	)

106 #ifde‡
__USE_GNU


107 
	#F_SETSIG
 10

	)

108 
	#F_GETSIG
 11

	)

109 
	#F_SETOWN_EX
 15

	)

110 
	#F_GETOWN_EX
 16

	)

113 #ifde‡
__USE_GNU


114 
	#F_SETLEASE
 1024

	)

115 
	#F_GETLEASE
 1025

	)

116 
	#F_NOTIFY
 1026

	)

117 
	#F_DUPFD_CLOEXEC
 1030

	)

122 
	#FD_CLOEXEC
 1

	)

125 
	#F_RDLCK
 0

	)

126 
	#F_WRLCK
 1

	)

127 
	#F_UNLCK
 2

	)

130 
	#F_EXLCK
 4

	)

131 
	#F_SHLCK
 8

	)

133 #ifde‡
__USE_BSD


135 
	#LOCK_SH
 1

	)

136 
	#LOCK_EX
 2

	)

137 
	#LOCK_NB
 4

	)

139 
	#LOCK_UN
 8

	)

142 #ifde‡
__USE_GNU


143 
	#LOCK_MAND
 32

	)

144 
	#LOCK_READ
 64

	)

145 
	#LOCK_WRITE
 128

	)

146 
	#LOCK_RW
 192

	)

149 #ifde‡
__USE_GNU


151 
	#DN_ACCESS
 0x00000001

	)

152 
	#DN_MODIFY
 0x00000002

	)

153 
	#DN_CREATE
 0x00000004

	)

154 
	#DN_DELETE
 0x00000008

	)

155 
	#DN_RENAME
 0x00000010

	)

156 
	#DN_ATTRIB
 0x00000020

	)

157 
	#DN_MULTISHOT
 0x80000000

	)

160 
	sÊock


162 
	ml_ty≥
;

163 
	ml_whí˚
;

164 #i‚de‡
__USE_FILE_OFFSET64


165 
__off_t
 
	ml_°¨t
;

166 
__off_t
 
	ml_Àn
;

168 
__off64_t
 
	ml_°¨t
;

169 
__off64_t
 
	ml_Àn
;

171 
__pid_t
 
	ml_pid
;

174 #ifde‡
__USE_LARGEFILE64


175 
	sÊock64


177 
	ml_ty≥
;

178 
	ml_whí˚
;

179 
__off64_t
 
	ml_°¨t
;

180 
__off64_t
 
	ml_Àn
;

181 
__pid_t
 
	ml_pid
;

185 #ifde‡
__USE_GNU


187 
	e__pid_ty≥


189 
	mF_OWNER_TID
 = 0,

190 
	mF_OWNER_PID
,

191 
	mF_OWNER_GID


195 
	sf_ow√r_ex


197 
__pid_ty≥
 
	mty≥
;

198 
__pid_t
 
	mpid
;

204 #ifdef 
__USE_BSD


205 
	#FAPPEND
 
O_APPEND


	)

206 
	#FFSYNC
 
O_FSYNC


	)

207 
	#FASYNC
 
O_ASYNC


	)

208 
	#FNONBLOCK
 
O_NONBLOCK


	)

209 
	#FNDELAY
 
O_NDELAY


	)

213 #ifde‡
__USE_XOPEN2K


214 
	#POSIX_FADV_NORMAL
 0

	)

215 
	#POSIX_FADV_RANDOM
 1

	)

216 
	#POSIX_FADV_SEQUENTIAL
 2

	)

217 
	#POSIX_FADV_WILLNEED
 3

	)

218 
	#POSIX_FADV_DONTNEED
 4

	)

219 
	#POSIX_FADV_NOREUSE
 5

	)

223 #ifde‡
__USE_GNU


225 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

228 
	#SYNC_FILE_RANGE_WRITE
 2

	)

231 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

236 
	#SPLICE_F_MOVE
 1

	)

237 
	#SPLICE_F_NONBLOCK
 2

	)

240 
	#SPLICE_F_MORE
 4

	)

241 
	#SPLICE_F_GIFT
 8

	)

245 #ifde‡
__USE_ATFILE


246 
	#AT_FDCWD
 -100

	)

249 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

250 
	#AT_REMOVEDIR
 0x200

	)

252 
	#AT_SYMLINK_FOLLOW
 0x400

	)

253 
	#AT_EACCESS
 0x200

	)

257 
	g__BEGIN_DECLS


259 #ifde‡
__USE_GNU


262 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

263 
__THROW
;

267 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__‰om
, __off64_à
__to
,

268 
__Êags
);

272 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

273 
size_t
 
__cou¡
, 
__Êags
);

276 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

277 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

278 
__Êags
);

281 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

282 
__Êags
);

285 #i‚de‡
__USE_FILE_OFFSET64


286 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

288 #ifde‡
__REDIRECT


289 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

290 
__off64_t
 
__Àn
),

291 
ÁŒoˇã64
);

293 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

296 #ifde‡
__USE_LARGEFILE64


297 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

298 
__off64_t
 
__Àn
);

302 
__END_DECLS


	@/usr/include/bits/fcntl2.h

20 #i‚def 
_FCNTL_H


26 #i‚de‡
__USE_FILE_OFFSET64


27 
	$__›í_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

28 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

29 
›í
Ë
	`__n⁄nuŒ
 ((1));

31 
	`__REDIRECT
 (
__›í_2
, (
__c⁄°
 *
__∑th
, 
__oÊag
),

32 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

33 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

34 
›í64
Ë
	`__n⁄nuŒ
 ((1));

36 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

38 
	`__îr‹de˛
 (
__›í_missög_mode
,

41 
__exã∫_Æways_ölöe
 

42 
	$›í
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

44 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

45 
	`__›í_too_m™y_¨gs
 ();

47 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

49 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

51 
	`__›í_missög_mode
 ();

52  
	`__›í_2
 (
__∑th
, 
__oÊag
);

54  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

57 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

58  
	`__›í_2
 (
__∑th
, 
__oÊag
);

60  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

61 
	}
}

64 #ifde‡
__USE_LARGEFILE64


65 
	$__›í64_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

66 
	`__REDIRECT
 (
__›í64_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
,

67 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

68 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

70 
	`__îr‹de˛
 (
__›í64_missög_mode
,

73 
__exã∫_Æways_ölöe
 

74 
	$›í64
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

76 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

77 
	`__›í64_too_m™y_¨gs
 ();

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

81 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

83 
	`__›í64_missög_mode
 ();

84  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

86  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

89 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

90  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

92  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

93 
	}
}

97 #ifde‡
__USE_ATFILE


98 #i‚de‡
__USE_FILE_OFFSET64


99 
	$__›í©_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

100 
	`__n⁄nuŒ
 ((2));

101 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

102 
__oÊag
, ...), 
›í©
)

103 
	`__n⁄nuŒ
 ((2));

105 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, 
__c⁄°
 *
__∑th
,

106 
__oÊag
), 
__›í©64_2
)

107 
	`__n⁄nuŒ
 ((2));

108 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

109 
__oÊag
, ...), 
›í©64
)

110 
	`__n⁄nuŒ
 ((2));

112 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

114 
	`__îr‹de˛
 (
__›í©_missög_mode
,

117 
__exã∫_Æways_ölöe
 

118 
	$›í©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

120 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

121 
	`__›í©_too_m™y_¨gs
 ();

123 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

125 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

127 
	`__›í©_missög_mode
 ();

128  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

130  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

133 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

134  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

136  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

137 
	}
}

140 #ifde‡
__USE_LARGEFILE64


141 
	$__›í©64_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

142 
	`__n⁄nuŒ
 ((2));

143 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

144 
__oÊag
, ...), 
›í©64
)

145 
	`__n⁄nuŒ
 ((2));

146 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

148 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

151 
__exã∫_Æways_ölöe
 

152 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

154 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

155 
	`__›í©64_too_m™y_¨gs
 ();

157 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

159 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

161 
	`__›í©64_missög_mode
 ();

162  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

164  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

167 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

168  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

170  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

171 
	}
}

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_BITS_POSIX_OPT_H


21 
	#_BITS_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

36 
	#_POSIX_FSYNC
 200809L

	)

39 
	#_POSIX_MAPPED_FILES
 200809L

	)

42 
	#_POSIX_MEMLOCK
 200809L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200809L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

92 #ifde‡
__USE_XOPEN2K8


94 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

97 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

101 
	#_POSIX_SEMAPHORES
 200809L

	)

104 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

107 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

108 
	#_POSIX_ASYNC_IO
 1

	)

110 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

112 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

115 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

118 
	#_LFS_LARGEFILE
 1

	)

119 
	#_LFS64_LARGEFILE
 1

	)

120 
	#_LFS64_STDIO
 1

	)

123 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

126 
	#_POSIX_CPUTIME
 0

	)

129 
	#_POSIX_THREAD_CPUTIME
 0

	)

132 
	#_POSIX_REGEXP
 1

	)

135 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

138 
	#_POSIX_SHELL
 1

	)

141 
	#_POSIX_TIMEOUTS
 200809L

	)

144 
	#_POSIX_SPIN_LOCKS
 200809L

	)

147 
	#_POSIX_SPAWN
 200809L

	)

150 
	#_POSIX_TIMERS
 200809L

	)

153 
	#_POSIX_BARRIERS
 200809L

	)

156 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

159 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

162 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

165 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

168 
	#_POSIX_ADVISORY_INFO
 200809L

	)

171 
	#_POSIX_IPV6
 200809L

	)

174 
	#_POSIX_RAW_SOCKETS
 200809L

	)

177 
	#_POSIX2_CHAR_TERM
 200809L

	)

180 
	#_POSIX_SPORADIC_SERVER
 -1

	)

181 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

184 
	#_POSIX_TRACE
 -1

	)

185 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

186 
	#_POSIX_TRACE_INHERIT
 -1

	)

187 
	#_POSIX_TRACE_LOG
 -1

	)

190 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

38 #ifde‡
__USE_GNU


40 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

41 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/stat.h

19 #i‚de‡
_SYS_STAT_H


24 
	#_STAT_VER_KERNEL
 0

	)

26 #i‡
__WORDSIZE
 == 32

27 
	#_STAT_VER_SVR4
 2

	)

28 
	#_STAT_VER_LINUX
 3

	)

31 
	#_MKNOD_VER_LINUX
 1

	)

32 
	#_MKNOD_VER_SVR4
 2

	)

33 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

35 
	#_STAT_VER_LINUX
 1

	)

38 
	#_MKNOD_VER_LINUX
 0

	)

41 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

43 
	s°©


45 
__dev_t
 
	m°_dev
;

46 #i‡
__WORDSIZE
 == 32

47 
	m__∑d1
;

49 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


50 
__öo_t
 
	m°_öo
;

52 
__öo_t
 
	m__°_öo
;

54 #i‡
__WORDSIZE
 == 32

55 
__mode_t
 
	m°_mode
;

56 
__∆ök_t
 
	m°_∆ök
;

58 
__∆ök_t
 
	m°_∆ök
;

59 
__mode_t
 
	m°_mode
;

61 
__uid_t
 
	m°_uid
;

62 
__gid_t
 
	m°_gid
;

63 #i‡
__WORDSIZE
 == 64

64 
	m__∑d0
;

66 
__dev_t
 
	m°_rdev
;

67 #i‡
__WORDSIZE
 == 32

68 
	m__∑d2
;

70 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


71 
__off_t
 
	m°_size
;

73 
__off64_t
 
	m°_size
;

75 
__blksize_t
 
	m°_blksize
;

76 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


77 
__blk˙t_t
 
	m°_blocks
;

79 
__blk˙t64_t
 
	m°_blocks
;

81 #ifde‡
__USE_MISC


88 
time•ec
 
	m°_©im
;

89 
time•ec
 
	m°_mtim
;

90 
time•ec
 
	m°_˘im
;

91 
	#°_©ime
 
°_©im
.
tv_£c


	)

92 
	#°_mtime
 
°_mtim
.
tv_£c


	)

93 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

95 
__time_t
 
	m°_©ime
;

96 
	m°_©imí£c
;

97 
__time_t
 
	m°_mtime
;

98 
	m°_mtimí£c
;

99 
__time_t
 
	m°_˘ime
;

100 
	m°_˘imí£c
;

102 #i‡
__WORDSIZE
 == 64

103 
	m__unu£d
[3];

105 #i‚de‡
__USE_FILE_OFFSET64


106 
	m__unu£d4
;

107 
	m__unu£d5
;

109 
__öo64_t
 
	m°_öo
;

114 #ifde‡
__USE_LARGEFILE64


116 
	s°©64


118 
__dev_t
 
	m°_dev
;

119 #i‡
__WORDSIZE
 == 64

120 
__öo64_t
 
	m°_öo
;

121 
__∆ök_t
 
	m°_∆ök
;

122 
__mode_t
 
	m°_mode
;

124 
	m__∑d1
;

125 
__öo_t
 
	m__°_öo
;

126 
__mode_t
 
	m°_mode
;

127 
__∆ök_t
 
	m°_∆ök
;

129 
__uid_t
 
	m°_uid
;

130 
__gid_t
 
	m°_gid
;

131 #i‡
__WORDSIZE
 == 64

132 
	m__∑d0
;

133 
__dev_t
 
	m°_rdev
;

134 
__off_t
 
	m°_size
;

136 
__dev_t
 
	m°_rdev
;

137 
	m__∑d2
;

138 
__off64_t
 
	m°_size
;

140 
__blksize_t
 
	m°_blksize
;

141 
__blk˙t64_t
 
	m°_blocks
;

142 #ifde‡
__USE_MISC


149 
time•ec
 
	m°_©im
;

150 
time•ec
 
	m°_mtim
;

151 
time•ec
 
	m°_˘im
;

152 
	#°_©ime
 
°_©im
.
tv_£c


	)

153 
	#°_mtime
 
°_mtim
.
tv_£c


	)

154 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

156 
__time_t
 
	m°_©ime
;

157 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
	m°_˘imí£c
;

163 #i‡
__WORDSIZE
 == 64

164 
	m__unu£d
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

205 #ifde‡
__USE_ATFILE


206 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

207 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__exã∫_Æways_ölöe
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__exã∫_Æways_ölöe
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

81 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

83 
	`__w¨n_mem£t_zîo_Àn
 ();

84  
__de°
;

86  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

87 
	}
}

89 #ifde‡
__USE_BSD


90 
__exã∫_Æways_ölöe
 

91 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__ª°ri˘
 
__§c
, *__ª°ri˘ 
__de°
,

92 
size_t
 
__Àn
))

94 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

95 
	}
}

97 
__exã∫_Æways_ölöe
 

98 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

100 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

101 
	}
}

104 
__exã∫_Æways_ölöe
 *

105 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

107  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

108 
	}
}

110 #ifde‡
__USE_GNU


111 
__exã∫_Æways_ölöe
 *

112 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

114  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

115 
	}
}

119 
__exã∫_Æways_ölöe
 *

120 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

121 
size_t
 
__Àn
))

123  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

124 
	}
}

127 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

128 
size_t
 
__de°Àn
Ë
__THROW
;

129 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

130 
__c⁄°
 *
__§c
,

131 
size_t
 
__n
), 
°≤˝y
);

133 
__exã∫_Æways_ölöe
 *

134 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

136 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

137 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

138  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

139  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

140 
	}
}

143 
__exã∫_Æways_ölöe
 *

144 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

146  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

147 
	}
}

150 
__exã∫_Æways_ölöe
 *

151 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

152 
size_t
 
__Àn
))

154  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

155 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/termios.h

21 #i‚de‡
_TERMIOS_H


25 
	tcc_t
;

26 
	t•ìd_t
;

27 
	ttcÊag_t
;

29 
	#NCCS
 32

	)

30 
	sãrmios


32 
tcÊag_t
 
	mc_iÊag
;

33 
tcÊag_t
 
	mc_oÊag
;

34 
tcÊag_t
 
	mc_cÊag
;

35 
tcÊag_t
 
	mc_lÊag
;

36 
cc_t
 
	mc_löe
;

37 
cc_t
 
	mc_cc
[
NCCS
];

38 
•ìd_t
 
	mc_i•ìd
;

39 
•ìd_t
 
	mc_o•ìd
;

40 
	#_HAVE_STRUCT_TERMIOS_C_ISPEED
 1

	)

41 
	#_HAVE_STRUCT_TERMIOS_C_OSPEED
 1

	)

45 
	#VINTR
 0

	)

46 
	#VQUIT
 1

	)

47 
	#VERASE
 2

	)

48 
	#VKILL
 3

	)

49 
	#VEOF
 4

	)

50 
	#VTIME
 5

	)

51 
	#VMIN
 6

	)

52 
	#VSWTC
 7

	)

53 
	#VSTART
 8

	)

54 
	#VSTOP
 9

	)

55 
	#VSUSP
 10

	)

56 
	#VEOL
 11

	)

57 
	#VREPRINT
 12

	)

58 
	#VDISCARD
 13

	)

59 
	#VWERASE
 14

	)

60 
	#VLNEXT
 15

	)

61 
	#VEOL2
 16

	)

64 
	#IGNBRK
 0000001

	)

65 
	#BRKINT
 0000002

	)

66 
	#IGNPAR
 0000004

	)

67 
	#PARMRK
 0000010

	)

68 
	#INPCK
 0000020

	)

69 
	#ISTRIP
 0000040

	)

70 
	#INLCR
 0000100

	)

71 
	#IGNCR
 0000200

	)

72 
	#ICRNL
 0000400

	)

73 
	#IUCLC
 0001000

	)

74 
	#IXON
 0002000

	)

75 
	#IXANY
 0004000

	)

76 
	#IXOFF
 0010000

	)

77 
	#IMAXBEL
 0020000

	)

78 
	#IUTF8
 0040000

	)

81 
	#OPOST
 0000001

	)

82 
	#OLCUC
 0000002

	)

83 
	#ONLCR
 0000004

	)

84 
	#OCRNL
 0000010

	)

85 
	#ONOCR
 0000020

	)

86 
	#ONLRET
 0000040

	)

87 
	#OFILL
 0000100

	)

88 
	#OFDEL
 0000200

	)

89 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


90 
	#NLDLY
 0000400

	)

91 
	#NL0
 0000000

	)

92 
	#NL1
 0000400

	)

93 
	#CRDLY
 0003000

	)

94 
	#CR0
 0000000

	)

95 
	#CR1
 0001000

	)

96 
	#CR2
 0002000

	)

97 
	#CR3
 0003000

	)

98 
	#TABDLY
 0014000

	)

99 
	#TAB0
 0000000

	)

100 
	#TAB1
 0004000

	)

101 
	#TAB2
 0010000

	)

102 
	#TAB3
 0014000

	)

103 
	#BSDLY
 0020000

	)

104 
	#BS0
 0000000

	)

105 
	#BS1
 0020000

	)

106 
	#FFDLY
 0100000

	)

107 
	#FF0
 0000000

	)

108 
	#FF1
 0100000

	)

111 
	#VTDLY
 0040000

	)

112 
	#VT0
 0000000

	)

113 
	#VT1
 0040000

	)

115 #ifde‡
__USE_MISC


116 
	#XTABS
 0014000

	)

120 #ifde‡
__USE_MISC


121 
	#CBAUD
 0010017

	)

123 
	#B0
 0000000

	)

124 
	#B50
 0000001

	)

125 
	#B75
 0000002

	)

126 
	#B110
 0000003

	)

127 
	#B134
 0000004

	)

128 
	#B150
 0000005

	)

129 
	#B200
 0000006

	)

130 
	#B300
 0000007

	)

131 
	#B600
 0000010

	)

132 
	#B1200
 0000011

	)

133 
	#B1800
 0000012

	)

134 
	#B2400
 0000013

	)

135 
	#B4800
 0000014

	)

136 
	#B9600
 0000015

	)

137 
	#B19200
 0000016

	)

138 
	#B38400
 0000017

	)

139 #ifde‡
__USE_MISC


140 
	#EXTA
 
B19200


	)

141 
	#EXTB
 
B38400


	)

143 
	#CSIZE
 0000060

	)

144 
	#CS5
 0000000

	)

145 
	#CS6
 0000020

	)

146 
	#CS7
 0000040

	)

147 
	#CS8
 0000060

	)

148 
	#CSTOPB
 0000100

	)

149 
	#CREAD
 0000200

	)

150 
	#PARENB
 0000400

	)

151 
	#PARODD
 0001000

	)

152 
	#HUPCL
 0002000

	)

153 
	#CLOCAL
 0004000

	)

154 #ifde‡
__USE_MISC


155 
	#CBAUDEX
 0010000

	)

157 
	#B57600
 0010001

	)

158 
	#B115200
 0010002

	)

159 
	#B230400
 0010003

	)

160 
	#B460800
 0010004

	)

161 
	#B500000
 0010005

	)

162 
	#B576000
 0010006

	)

163 
	#B921600
 0010007

	)

164 
	#B1000000
 0010010

	)

165 
	#B1152000
 0010011

	)

166 
	#B1500000
 0010012

	)

167 
	#B2000000
 0010013

	)

168 
	#B2500000
 0010014

	)

169 
	#B3000000
 0010015

	)

170 
	#B3500000
 0010016

	)

171 
	#B4000000
 0010017

	)

172 
	#__MAX_BAUD
 
B4000000


	)

173 #ifde‡
__USE_MISC


174 
	#CIBAUD
 002003600000

	)

175 
	#CMSPAR
 010000000000

	)

176 
	#CRTSCTS
 020000000000

	)

180 
	#ISIG
 0000001

	)

181 
	#ICANON
 0000002

	)

182 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


183 
	#XCASE
 0000004

	)

185 
	#ECHO
 0000010

	)

186 
	#ECHOE
 0000020

	)

187 
	#ECHOK
 0000040

	)

188 
	#ECHONL
 0000100

	)

189 
	#NOFLSH
 0000200

	)

190 
	#TOSTOP
 0000400

	)

191 #ifde‡
__USE_MISC


192 
	#ECHOCTL
 0001000

	)

193 
	#ECHOPRT
 0002000

	)

194 
	#ECHOKE
 0004000

	)

195 
	#FLUSHO
 0010000

	)

196 
	#PENDIN
 0040000

	)

198 
	#IEXTEN
 0100000

	)

201 
	#TCOOFF
 0

	)

202 
	#TCOON
 1

	)

203 
	#TCIOFF
 2

	)

204 
	#TCION
 3

	)

207 
	#TCIFLUSH
 0

	)

208 
	#TCOFLUSH
 1

	)

209 
	#TCIOFLUSH
 2

	)

212 
	#TCSANOW
 0

	)

213 
	#TCSADRAIN
 1

	)

214 
	#TCSAFLUSH
 2

	)

217 
	#_IOT_ãrmios
 \

218 
	`_IOT
 (
	`_IOTS
 (
cÊag_t
), 4, _IOTS (
cc_t
), 
NCCS
, _IOTS (
•ìd_t
), 2)

	)

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/utsname.h

19 #i‚de‡
_SYS_UTSNAME_H


24 
	#_UTSNAME_LENGTH
 65

	)

29 
	#_UTSNAME_DOMAIN_LENGTH
 
_UTSNAME_LENGTH


	)

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

95 #unde‡
__USE_ISOC99


96 #unde‡
__USE_ISOC95


97 #unde‡
__USE_POSIX


98 #unde‡
__USE_POSIX2


99 #unde‡
__USE_POSIX199309


100 #unde‡
__USE_POSIX199506


101 #unde‡
__USE_XOPEN


102 #unde‡
__USE_XOPEN_EXTENDED


103 #unde‡
__USE_UNIX98


104 #unde‡
__USE_XOPEN2K


105 #unde‡
__USE_XOPEN2K8


106 #unde‡
__USE_LARGEFILE


107 #unde‡
__USE_LARGEFILE64


108 #unde‡
__USE_FILE_OFFSET64


109 #unde‡
__USE_BSD


110 #unde‡
__USE_SVID


111 #unde‡
__USE_MISC


112 #unde‡
__USE_ATFILE


113 #unde‡
__USE_GNU


114 #unde‡
__USE_REENTRANT


115 #unde‡
__USE_FORTIFY_LEVEL


116 #unde‡
__FAVOR_BSD


117 #unde‡
__KERNEL_STRICT_NAMES


121 #i‚de‡
_LOOSE_KERNEL_NAMES


122 
	#__KERNEL_STRICT_NAMES


	)

126 
	#__USE_ANSI
 1

	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

144 #i‡
deföed
 
_BSD_SOURCE
 && \

145 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

146 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

147 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

148 
	#__FAVOR_BSD
 1

	)

152 #ifde‡
_GNU_SOURCE


153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_POSIX_SOURCE


156 
	#_POSIX_SOURCE
 1

	)

157 #unde‡
_POSIX_C_SOURCE


158 
	#_POSIX_C_SOURCE
 200809L

	)

159 #unde‡
_XOPEN_SOURCE


160 
	#_XOPEN_SOURCE
 700

	)

161 #unde‡
_XOPEN_SOURCE_EXTENDED


162 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

163 #unde‡
_LARGEFILE64_SOURCE


164 
	#_LARGEFILE64_SOURCE
 1

	)

165 #unde‡
_BSD_SOURCE


166 
	#_BSD_SOURCE
 1

	)

167 #unde‡
_SVID_SOURCE


168 
	#_SVID_SOURCE
 1

	)

169 #unde‡
_ATFILE_SOURCE


170 
	#_ATFILE_SOURCE
 1

	)

175 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

176 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

177 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

178 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

179 
	#_BSD_SOURCE
 1

	)

180 
	#_SVID_SOURCE
 1

	)

187 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

188 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

189 
	#__USE_ISOC99
 1

	)

193 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

194 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

195 
	#__USE_ISOC95
 1

	)

200 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

201 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

202 
	#_POSIX_SOURCE
 1

	)

203 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

204 
	#_POSIX_C_SOURCE
 2

	)

205 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

206 
	#_POSIX_C_SOURCE
 199506L

	)

207 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

208 
	#_POSIX_C_SOURCE
 200112L

	)

210 
	#_POSIX_C_SOURCE
 200809L

	)

212 
	#__USE_POSIX_IMPLICITLY
 1

	)

215 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


216 
	#__USE_POSIX
 1

	)

219 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


220 
	#__USE_POSIX2
 1

	)

223 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

224 
	#__USE_POSIX199309
 1

	)

227 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

228 
	#__USE_POSIX199506
 1

	)

231 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

232 
	#__USE_XOPEN2K
 1

	)

233 #unde‡
__USE_ISOC99


234 
	#__USE_ISOC99
 1

	)

237 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

238 
	#__USE_XOPEN2K8
 1

	)

239 #unde‡
_ATFILE_SOURCE


240 
	#_ATFILE_SOURCE
 1

	)

243 #ifdef 
_XOPEN_SOURCE


244 
	#__USE_XOPEN
 1

	)

245 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

246 
	#__USE_XOPEN_EXTENDED
 1

	)

247 
	#__USE_UNIX98
 1

	)

248 #unde‡
_LARGEFILE_SOURCE


249 
	#_LARGEFILE_SOURCE
 1

	)

250 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

251 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

252 
	#__USE_XOPEN2K8
 1

	)

254 
	#__USE_XOPEN2K
 1

	)

255 #unde‡
__USE_ISOC99


256 
	#__USE_ISOC99
 1

	)

259 #ifde‡
_XOPEN_SOURCE_EXTENDED


260 
	#__USE_XOPEN_EXTENDED
 1

	)

265 #ifde‡
_LARGEFILE_SOURCE


266 
	#__USE_LARGEFILE
 1

	)

269 #ifde‡
_LARGEFILE64_SOURCE


270 
	#__USE_LARGEFILE64
 1

	)

273 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

274 
	#__USE_FILE_OFFSET64
 1

	)

277 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


278 
	#__USE_MISC
 1

	)

281 #ifdef 
_BSD_SOURCE


282 
	#__USE_BSD
 1

	)

285 #ifdef 
_SVID_SOURCE


286 
	#__USE_SVID
 1

	)

289 #ifdef 
_ATFILE_SOURCE


290 
	#__USE_ATFILE
 1

	)

293 #ifdef 
_GNU_SOURCE


294 
	#__USE_GNU
 1

	)

297 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


298 
	#__USE_REENTRANT
 1

	)

301 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

302 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

303 #i‡
_FORTIFY_SOURCE
 > 1

304 
	#__USE_FORTIFY_LEVEL
 2

	)

306 
	#__USE_FORTIFY_LEVEL
 1

	)

309 
	#__USE_FORTIFY_LEVEL
 0

	)

313 
	~<bôs/¥edefs.h
>

316 
	#__STDC_ISO_10646__
 200009L

	)

324 #unde‡
__GNU_LIBRARY__


325 
	#__GNU_LIBRARY__
 6

	)

329 
	#__GLIBC__
 2

	)

330 
	#__GLIBC_MINOR__
 11

	)

332 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

333 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

336 #i‡
deföed
 
__GNUC__
 \

337 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

338 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

339 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

340 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

344 #i‚de‡
__ASSEMBLER__


345 #i‚de‡
_SYS_CDEFS_H


346 
	~<sys/cdefs.h
>

351 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


352 
	#__USE_LARGEFILE
 1

	)

353 
	#__USE_LARGEFILE64
 1

	)

359 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

360 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

361 && 
deföed
 
	g__exã∫_ölöe


362 
	#__USE_EXTERN_INLINES
 1

	)

367 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

368 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

369 && 
deföed
 
	g__exã∫_ölöe


370 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

378 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
Ë
__THROW
;

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

446 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

447 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

448 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

449 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

450 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

451 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

452 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

453 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

454 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

457 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

458 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

460 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

461 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

462 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

468 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

469 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

471 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

472 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 #ifde‡
_IO_MTSAFE_IO


476 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

477 
	#_IO_Êockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

479 
	#_IO_fu∆ockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

482 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

483 
	#_IO_Êockfûe
(
_Â
Ë

	)

484 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

485 
	#_IO_·rylockfûe
(
_Â
Ë

	)

486 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

487 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

490 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

491 
_IO_va_li°
, *
__ª°ri˘
);

492 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

493 
_IO_va_li°
);

494 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

495 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

497 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

498 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

500 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

502 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


503 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

504 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

505 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

506 #i‡
__GNUC__
 >= 2

509 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


510 
	~<shlib-com∑t.h
>

511 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

512 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

513 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

514 c⁄° 
_IO_°dö_u£d
;

515 
wók_exã∫
 (
_IO_°dö_u£d
);

518 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


519 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

523 
	#_IO_fwide
(
__Â
, 
__mode
) \

524 ({ 
__ªsu…
 = (
__mode
); \

525 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

527 i‡((
__Â
)->
_mode
 == 0) \

529 (
__Â
)->
_mode
 = -1; \

530 
__ªsu…
 = (
__Â
)->
_mode
; \

532 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

533 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

535 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

536 
__ªsu…
; })

	)

539 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

540 
_IO_va_li°
, *
__ª°ri˘
);

541 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

542 
_IO_va_li°
);

543 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

544 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

547 #ifde‡
__LDBL_COMPAT


548 
	~<bôs/libio-ldbl.h
>

551 #ifde‡
__˝lu•lus


	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

	@/usr/include/sys/resource.h

19 #i‚def 
_SYS_RESOURCE_H


20 
	#_SYS_RESOURCE_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ªsour˚.h
>

27 #i‚de‡
__id_t_deföed


28 
__id_t
 
	tid_t
;

29 
	#__id_t_deföed


	)

32 
	g__BEGIN_DECLS


38 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


39 
__æimô_ªsour˚
 
	t__æimô_ªsour˚_t
;

40 
__rußge_who
 
	t__rußge_who_t
;

41 
__¥i‹ôy_which
 
	t__¥i‹ôy_which_t
;

43 
	t__æimô_ªsour˚_t
;

44 
	t__rußge_who_t
;

45 
	t__¥i‹ôy_which_t
;

50 #i‚de‡
__USE_FILE_OFFSET64


51 
	$gëæimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

52 
æimô
 *
__æimôs
Ë
__THROW
;

54 #ifde‡
__REDIRECT_NTH


55 
	`__REDIRECT_NTH
 (
gëæimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

56 
æimô
 *
__æimôs
), 
gëæimô64
);

58 
	#gëæimô
 
gëæimô64


	)

61 #ifde‡
__USE_LARGEFILE64


62 
	$gëæimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

63 
æimô64
 *
__æimôs
Ë
__THROW
;

69 #i‚de‡
__USE_FILE_OFFSET64


70 
	$£ålimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

71 
__c⁄°
 
æimô
 *
__æimôs
Ë
__THROW
;

73 #ifde‡
__REDIRECT_NTH


74 
	`__REDIRECT_NTH
 (
£ålimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

75 
__c⁄°
 
æimô
 *
__æimôs
),

76 
£ålimô64
);

78 
	#£ålimô
 
£ålimô64


	)

81 #ifde‡
__USE_LARGEFILE64


82 
	$£ålimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

83 
__c⁄°
 
æimô64
 *
__æimôs
Ë
__THROW
;

88 
	$gërußge
 (
__rußge_who_t
 
__who
, 
rußge
 *
__ußge
Ë
__THROW
;

94 
	$gë¥i‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
Ë
__THROW
;

98 
	$£çri‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
, 
__¥io
)

99 
__THROW
;

101 
__END_DECLS


	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/asm/types.h

1 #i‚de‡
_ASM_X86_TYPES_H


2 
	#_ASM_X86_TYPES_H


	)

4 
	#dma_addr_t
 
dma_addr_t


	)

6 
	~<asm-gíîic/ty≥s.h
>

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

55 
	#__bsw≠_c⁄°™t_32
(
x
) \

56 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

57 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

59 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

60 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

61 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

62 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

63 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

64 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

65 || 
deföed
 
	g__amdÁm10__
)

68 
	#__bsw≠_32
(
x
) \

69 (
__exãnsi⁄__
 \

70 ({ 
__v
, 
__x
 = (
x
); \

71 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

72 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

74 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

75 
__v
; }))

	)

77 
	#__bsw≠_32
(
x
) \

78 (
__exãnsi⁄__
 \

79 ({ 
__v
, 
__x
 = (
x
); \

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

81 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

83 
	`__asm__
 ("rorw $8, %w0;" \

86 : "Ù" (
__v
) \

87 : "0" (
__x
) \

89 
__v
; }))

	)

92 
	#__bsw≠_32
(
x
) \

93 (
__exãnsi⁄__
 \

94 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

98 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

100 
	#__bsw≠_c⁄°™t_64
(
x
) \

101 ((((
x
) & 0xff00000000000000ull) >> 56) \

102 | (((
x
) & 0x00ff000000000000ull) >> 40) \

103 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

104 | (((
x
) & 0x000000ff00000000ull) >> 8) \

105 | (((
x
) & 0x00000000ff000000ull) << 8) \

106 | (((
x
) & 0x0000000000ff0000ull) << 24) \

107 | (((
x
) & 0x000000000000ff00ull) << 40) \

108 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

110 #i‡
__WORDSIZE
 == 64

111 
	#__bsw≠_64
(
x
) \

112 (
__exãnsi⁄__
 \

113 ({ 
__v
, 
__x
 = (
x
); \

114 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

115 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

117 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

118 
__v
; }))

	)

120 
	#__bsw≠_64
(
x
) \

121 (
__exãnsi⁄__
 \

122 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

123 
__l
[2]; } 
__w
, 
__r
; \

124 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

125 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

128 
__w
.
__Œ
 = (
x
); \

129 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

130 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

132 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/predefs.h

19 #i‚de‡
_FEATURES_H


23 #i‚de‡
_PREDEFS_H


24 
	#_PREDEFS_H


	)

27 
	#__STDC_IEC_559__
 1

	)

28 
	#__STDC_IEC_559_COMPLEX__
 1

	)

	@/usr/include/bits/resource.h

21 #i‚de‡
_SYS_RESOURCE_H


25 
	~<bôs/ty≥s.h
>

33 
	e__æimô_ªsour˚


36 
	mRLIMIT_CPU
 = 0,

37 
	#RLIMIT_CPU
 
RLIMIT_CPU


	)

40 
	mRLIMIT_FSIZE
 = 1,

41 
	#RLIMIT_FSIZE
 
RLIMIT_FSIZE


	)

44 
	mRLIMIT_DATA
 = 2,

45 
	#RLIMIT_DATA
 
RLIMIT_DATA


	)

48 
	mRLIMIT_STACK
 = 3,

49 
	#RLIMIT_STACK
 
RLIMIT_STACK


	)

52 
	mRLIMIT_CORE
 = 4,

53 
	#RLIMIT_CORE
 
RLIMIT_CORE


	)

59 
	m__RLIMIT_RSS
 = 5,

60 
	#RLIMIT_RSS
 
__RLIMIT_RSS


	)

63 
	mRLIMIT_NOFILE
 = 7,

64 
	m__RLIMIT_OFILE
 = 
RLIMIT_NOFILE
,

65 
	#RLIMIT_NOFILE
 
RLIMIT_NOFILE


	)

66 
	#RLIMIT_OFILE
 
__RLIMIT_OFILE


	)

69 
	mRLIMIT_AS
 = 9,

70 
	#RLIMIT_AS
 
RLIMIT_AS


	)

73 
	m__RLIMIT_NPROC
 = 6,

74 
	#RLIMIT_NPROC
 
__RLIMIT_NPROC


	)

77 
	m__RLIMIT_MEMLOCK
 = 8,

78 
	#RLIMIT_MEMLOCK
 
__RLIMIT_MEMLOCK


	)

81 
	m__RLIMIT_LOCKS
 = 10,

82 
	#RLIMIT_LOCKS
 
__RLIMIT_LOCKS


	)

85 
	m__RLIMIT_SIGPENDING
 = 11,

86 
	#RLIMIT_SIGPENDING
 
__RLIMIT_SIGPENDING


	)

89 
	m__RLIMIT_MSGQUEUE
 = 12,

90 
	#RLIMIT_MSGQUEUE
 
__RLIMIT_MSGQUEUE


	)

95 
	m__RLIMIT_NICE
 = 13,

96 
	#RLIMIT_NICE
 
__RLIMIT_NICE


	)

100 
	m__RLIMIT_RTPRIO
 = 14,

101 
	#RLIMIT_RTPRIO
 
__RLIMIT_RTPRIO


	)

103 
	m__RLIMIT_NLIMITS
 = 15,

104 
	m__RLIM_NLIMITS
 = 
__RLIMIT_NLIMITS


105 
	#RLIMIT_NLIMITS
 
__RLIMIT_NLIMITS


	)

106 
	#RLIM_NLIMITS
 
__RLIM_NLIMITS


	)

110 #i‚de‡
__USE_FILE_OFFSET64


111 
	#RLIM_INFINITY
 (()(~0UL))

	)

113 
	#RLIM_INFINITY
 0xffffffffffffffffuLL

	)

116 #ifde‡
__USE_LARGEFILE64


117 
	#RLIM64_INFINITY
 0xffffffffffffffffuLL

	)

121 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

122 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

126 #i‚de‡
__USE_FILE_OFFSET64


127 
__æim_t
 
	tæim_t
;

129 
__æim64_t
 
	tæim_t
;

131 #ifde‡
__USE_LARGEFILE64


132 
__æim64_t
 
	tæim64_t
;

135 
	sæimô


138 
æim_t
 
	mæim_cur
;

140 
æim_t
 
	mæim_max
;

143 #ifde‡
__USE_LARGEFILE64


144 
	sæimô64


147 
æim64_t
 
	mæim_cur
;

149 
æim64_t
 
	mæim_max
;

154 
	e__rußge_who


157 
	mRUSAGE_SELF
 = 0,

158 
	#RUSAGE_SELF
 
RUSAGE_SELF


	)

161 
	mRUSAGE_CHILDREN
 = -1

162 
	#RUSAGE_CHILDREN
 
RUSAGE_CHILDREN


	)

164 #ifde‡
__USE_GNU


167 
	mRUSAGE_THREAD
 = 1

168 
	#RUSAGE_THREAD
 
RUSAGE_THREAD


	)

170 
	#RUSAGE_LWP
 
RUSAGE_THREAD


	)

174 
	#__√ed_timevÆ


	)

175 
	~<bôs/time.h
>

178 
	srußge


181 
timevÆ
 
	mru_utime
;

183 
timevÆ
 
	mru_°ime
;

185 
	mru_maxrss
;

188 
	mru_ixrss
;

190 
	mru_idrss
;

192 
	mru_i§ss
;

195 
	mru_möÊt
;

197 
	mru_majÊt
;

199 
	mru_nsw≠
;

202 
	mru_öblock
;

204 
	mru_oublock
;

206 
	mru_msg¢d
;

208 
	mru_msgrcv
;

210 
	mru_nsig«ls
;

214 
	mru_nvcsw
;

217 
	mru_nivcsw
;

221 
	#PRIO_MIN
 -20

	)

222 
	#PRIO_MAX
 20

	)

226 
	e__¥i‹ôy_which


228 
	mPRIO_PROCESS
 = 0,

229 
	#PRIO_PROCESS
 
PRIO_PROCESS


	)

230 
	mPRIO_PGRP
 = 1,

231 
	#PRIO_PGRP
 
PRIO_PGRP


	)

232 
	mPRIO_USER
 = 2

233 
	#PRIO_USER
 
PRIO_USER


	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

60 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

61 
	#__FD_ISSET
(
d
, 
£t
) \

62 ((
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] & 
	`__FDMASK
 (d)Ë!0)

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__NFDBITS


22 
	#__NFDBITS
 (8 * ())

	)

24 #unde‡
__FD_SETSIZE


25 
	#__FD_SETSIZE
 1024

	)

27 #unde‡
__FDSET_LONGS


28 
	#__FDSET_LONGS
 (
__FD_SETSIZE
/
__NFDBITS
)

	)

30 #unde‡
__FDELT


31 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

33 #unde‡
__FDMASK


34 
	#__FDMASK
(
d
Ë(1UL << ((dË% 
__NFDBITS
))

	)

37 
	mfds_bôs
 [
__FDSET_LONGS
];

38 } 
	t__kî√l_fd_£t
;

41 (*
	t__kî√l_sigh™dÀr_t
)();

44 
	t__kî√l_key_t
;

45 
	t__kî√l_mqd_t
;

47 
	~<asm/posix_ty≥s.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

185 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

186 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

199 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

200 
	#__©åibuã__
(
xyz
Ë

	)

206 #i‡
__GNUC_PREREQ
 (2,96)

207 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

209 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (2,96)

216 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

218 
	#__©åibuã_puª__


	)

224 #i‡
__GNUC_PREREQ
 (3,1)

225 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

226 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

229 
	#__©åibuã_noölöe__


	)

233 #i‡
__GNUC_PREREQ
 (3,2)

234 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

236 
	#__©åibuã_dïªˇãd__


	)

245 #i‡
__GNUC_PREREQ
 (2,8)

246 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

248 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

255 #i‡
__GNUC_PREREQ
 (2,97)

256 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

257 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

264 #i‡
__GNUC_PREREQ
 (3,3)

265 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

267 
	#__n⁄nuŒ
(
∑øms
)

	)

272 #i‡
__GNUC_PREREQ
 (3,4)

273 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

274 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

275 #i‡
__USE_FORTIFY_LEVEL
 > 0

276 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

279 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

281 #i‚de‡
__wur


282 
	#__wur


	)

286 #i‡
__GNUC_PREREQ
 (3,2)

287 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

289 
	#__Æways_ölöe
 
__ölöe


	)

294 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

295 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


296 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

297 #i‡
__GNUC_PREREQ
 (4,3)

298 
	#__exã∫_Æways_ölöe
 \

299 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

301 
	#__exã∫_Æways_ölöe
 \

302 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

305 
	#__exã∫_ölöe
 
__ölöe


	)

306 #i‡
__GNUC_PREREQ
 (4,3)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

317 #i‡
__GNUC_PREREQ
 (4,3)

318 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

319 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

326 #i‡!
__GNUC_PREREQ
 (2,8)

327 
	#__exãnsi⁄__


	)

331 #i‡!
__GNUC_PREREQ
 (2,92)

332 
	#__ª°ri˘


	)

338 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


339 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

341 #ifde‡
__GNUC__


342 
	#__ª°ri˘_¨r


	)

344 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

345 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

348 
	#__ª°ri˘_¨r


	)

353 
	~<bôs/w‹dsize.h
>

355 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


356 
	#__LDBL_COMPAT
 1

	)

357 #ifde‡
__REDIRECT


358 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

359 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

360 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

361 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

362 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

363 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

364 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

365 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

366 
	#__LDBL_REDIR_DECL
(
«me
) \

367 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

368 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

369 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

370 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

371 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

374 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


375 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

376 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

377 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

378 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

379 
	#__LDBL_REDIR_DECL
(
«me
)

	)

380 #ifde‡
__REDIRECT


381 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

30 #i‚de‡
_IOC_SIZEBITS


31 
	#_IOC_SIZEBITS
 14

	)

34 #i‚de‡
_IOC_DIRBITS


35 
	#_IOC_DIRBITS
 2

	)

38 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

39 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

40 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

41 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

43 
	#_IOC_NRSHIFT
 0

	)

44 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

45 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

46 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

53 #i‚de‡
_IOC_NONE


54 
	#_IOC_NONE
 0U

	)

57 #i‚de‡
_IOC_WRITE


58 
	#_IOC_WRITE
 1U

	)

61 #i‚de‡
_IOC_READ


62 
	#_IOC_READ
 2U

	)

65 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

66 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

67 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

68 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

69 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

71 
	#_IOC_TYPECHECK
(
t
Ë(—))

	)

74 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

75 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

76 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

77 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

78 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

79 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

80 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

83 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

84 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

85 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

86 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

90 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

91 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

92 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

93 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

94 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/asm-generic/types.h

1 #i‚de‡
_ASM_GENERIC_TYPES_H


2 
	#_ASM_GENERIC_TYPES_H


	)

7 
	~<asm-gíîic/öt-Œ64.h
>

9 #i‚de‡
__ASSEMBLY__


11 
	tumode_t
;

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm/posix_types.h

1 #ifde‡
__i386__


2 
	~"posix_ty≥s_32.h
"

4 
	~"posix_ty≥s_64.h
"

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

38 
	~<î∫o.h
>

39 
	~<gnu/›ti⁄-groups.h
>

43 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


44 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


45 
±hªad_muãx_t
 
	t__libc_lock_t
;

46 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

48 
	t__libc_lock_t
;

49 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

51 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

52 #ifde‡
__USE_UNIX98


53 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

55 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

58 
__libc_lock_›aque__
 
	t__libc_lock_t
;

59 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

60 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

64 
±hªad_key_t
 
	t__libc_key_t
;

73 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_lock_t
 
NAME
;

	)

75 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

77 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

79 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

80 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

91 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

92 #i‡
LLL_LOCK_INITIALIZER
 == 0

93 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

94 
CLASS
 
__libc_lock_t
 
NAME
;

	)

96 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

97 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

100 #i‡
__LT_SPINLOCK_INIT
 == 0

101 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

102 
CLASS
 
__libc_lock_t
 
NAME
;

	)

104 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

105 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

109 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

110 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

114 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

115 #i‡
LLL_LOCK_INITIALIZER
 == 0

116 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

117 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

119 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

120 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

122 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

123 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

125 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

126 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

127 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

128 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

131 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

132 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

133 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

134 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

136 
	#__πld_lock_öôülize
(
NAME
) \

137 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

144 #ifde‡
__PIC__


145 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

146 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

147 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

149 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

150 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

154 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


155 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

156 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

157 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

158 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

159 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

161 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

162 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

163 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

164 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

165 
FUNC
 
ARGS


	)

171 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

172 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

174 
	#__libc_lock_öô
(
NAME
) \

175 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

177 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


180 
	#__libc_rwlock_öô
(
NAME
) \

181 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

183 
	#__libc_rwlock_öô
(
NAME
) \

184 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

188 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

189 
	#__libc_lock_öô_ªcursive
(
NAME
) \

190 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

192 
	#__libc_lock_öô_ªcursive
(
NAME
) \

194 i‡(
__±hªad_muãx_öô
 !
NULL
) \

196 
±hªad_muãx©å_t
 
__©å
; \

197 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

198 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

199 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

200 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

202 } 0)

	)

205 
	#__πld_lock_öô_ªcursive
(
NAME
) \

207 i‡(
__±hªad_muãx_öô
 !
NULL
) \

209 
±hªad_muãx©å_t
 
__©å
; \

210 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

211 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

212 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

213 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

215 } 0)

	)

220 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

221 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

223 
	#__libc_lock_föi
(
NAME
) \

224 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

226 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


227 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

229 
	#__libc_rwlock_föi
(
NAME
) \

230 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

234 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

235 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

237 
	#__libc_lock_föi_ªcursive
(
NAME
) \

238 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

242 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

243 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

247 
__libc_lock_lock_‚
 (
__libc_lock_t
 *);

248 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_‚
);

250 #i‡
__OPTION_EGLIBC_BIG_MACROS


251 
	#__libc_lock_lock
(
NAME
) \

252 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

254 
	#__libc_lock_lock
(
NAME
) \

255 
	`__libc_lock_lock_‚
 (&(
NAME
))

	)

258 
	#__libc_lock_lock
(
NAME
) \

259 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

261 
	#__libc_rwlock_rdlock
(
NAME
) \

262 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

263 
	#__libc_rwlock_wæock
(
NAME
) \

264 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

267 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

268 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

272 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

273 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

275 #i‡
__OPTION_EGLIBC_BIG_MACROS


276 
	#__libc_lock_lock_ªcursive
(
NAME
) \

278 *
£lf
 = 
THREAD_SELF
; \

279 i‡((
NAME
).
ow√r
 !
£lf
) \

281 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

282 (
NAME
).
ow√r
 = 
£lf
; \

284 ++(
NAME
).
˙t
; \

285 } 0)

	)

287 
	#__libc_lock_lock_ªcursive
(
NAME
) \

288 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

291 
	#__libc_lock_lock_ªcursive
(
NAME
) \

292 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

296 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

297 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

301 
__libc_lock_åylock_‚
 (
__libc_lock_t
 *);

302 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_‚
);

304 #i‡
__OPTION_EGLIBC_BIG_MACROS


305 
	#__libc_lock_åylock
(
NAME
) \

306 
	`Œl_åylock
 (
NAME
)

	)

308 
	#__libc_lock_åylock
(
NAME
) \

309 
	`__libc_lock_åylock_‚
 (&(
NAME
))

	)

312 
	#__libc_lock_åylock
(
NAME
) \

313 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

315 
	#__libc_rwlock_åyrdlock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

317 
	#__libc_rwlock_åywæock
(
NAME
) \

318 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

321 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

322 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

326 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

327 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

329 #i‡
__OPTION_EGLIBC_BIG_MACROS


330 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

332 
ªsu…
 = 0; \

333 *
£lf
 = 
THREAD_SELF
; \

334 i‡((
NAME
).
ow√r
 !
£lf
) \

336 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

338 (
NAME
).
ow√r
 = 
£lf
; \

339 (
NAME
).
˙t
 = 1; \

342 
ªsu…
 = 
EBUSY
; \

345 ++(
NAME
).
˙t
; \

346 
ªsu…
; \

347 })

	)

349 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

350 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

353 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

357 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

358 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

361 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

362 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

366 
__libc_lock_u∆ock_‚
 (
__libc_lock_t
 *);

367 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_‚
);

369 #i‡
__OPTION_EGLIBC_BIG_MACROS


370 
	#__libc_lock_u∆ock
(
NAME
) \

371 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

373 
	#__libc_lock_u∆ock
(
NAME
) \

374 
	`__libc_lock_u∆ock_‚
 (&(
NAME
))

	)

377 
	#__libc_lock_u∆ock
(
NAME
) \

378 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

380 
	#__libc_rwlock_u∆ock
(
NAME
) \

381 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

384 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

385 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

389 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

390 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

392 #i‡
__OPTION_EGLIBC_BIG_MACROS


394 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

396 i‡(--(
NAME
).
˙t
 == 0) \

398 (
NAME
).
ow√r
 = 
NULL
; \

399 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

401 } 0)

	)

403 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

404 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

407 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

408 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

411 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


412 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

413 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

415 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

416 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

418 
	#__πld_lock_lock_ªcursive
(
NAME
) \

419 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

421 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

422 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

424 
	#__πld_lock_lock_ªcursive
(
NAME
) \

425 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

427 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

428 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

432 #i‡
PTHREAD_ONCE_INIT
 == 0

435 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

436 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

438 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

439 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

443 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

445 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

446 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

447 
INIT_FUNCTION
)); \

448 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

449 
	`INIT_FUNCTION
 (); \

450 (
ONCE_CONTROL
) |= 2; \

452 } 0)

	)

459 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

460 (*
routöe
Ë(*), *
¨g
);

461 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

462 
execuã
);

463 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

464 (*
routöe
Ë(*), *
¨g
);

465 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

466 
execuã
);

469 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

470 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

471 
_avaû
; \

472 i‡(
DOIT
) { \

473 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

474 i‡(
_avaû
) { \

475 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

476 
ARG
)); \

478 
_buf„r
.
__routöe
 = (
FCT
); \

479 
_buf„r
.
__¨g
 = (
ARG
); \

482 
_avaû
 = 0; \

483 }

	)

486 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

487 i‡(
_avaû
) { \

488 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

489 } i‡(
DOIT
) \

490 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

491 
	}

	)
}

494 
	#__libc_˛ónup_íd
(
DOIT
) \

495 i‡(
_avaû
) { \

496 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

497 } i‡(
DOIT
) \

498 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

502 
__exã∫_ölöe
 

503 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

505 i‡(
f
->
__do_ô
)

506 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

507 
	}
}

509 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

511 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

512 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

513 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

514 .
__do_ô
 = 1 };

	)

516 
	#__libc_˛ónup_p›
(
execuã
) \

517 
__˛‰ame
.
__do_ô
 = (
execuã
); \

518 } 0)

	)

522 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

523 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

526 
	#__libc_gë•ecific
(
KEY
) \

527 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

530 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

531 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

537 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

538 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

539 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

540 (*
__∑ª¡
) (),

541 (*
__chûd
) (),

542 *
__dso_h™dÀ
);

547 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

548 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

550 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

552 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

554 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

556 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

558 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

560 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

562 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

563 
__köd
);

565 #ifde‡
__USE_UNIX98


566 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

567 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

569 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

571 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

573 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

575 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

577 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

579 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

582 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

583 (*
__de°r_fun˘i⁄
) (*));

585 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

586 
__c⁄°
 *
__poöãr
);

588 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

590 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

591 (*
__öô_routöe
) ());

593 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

594 (*
__∑ª¡
) (),

595 (*
__chûd
) ());

601 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


602 #ifde‡
wók_exã∫


603 #i‡
_LIBC


604 
	~<bp-sym.h
>

606 
	#BP_SYM
(
sym
Ë
	)
sym

608 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

609 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

610 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

611 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

612 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

613 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

614 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

615 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

616 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

617 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

618 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

619 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

620 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

621 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

622 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

623 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

624 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

625 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

626 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

627 
	$wók_exã∫
 (
__±hªad_öôülize
)

628 
	$wók_exã∫
 (
__±hªad_©f‹k
)

629 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

630 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

631 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

633 #¥agm®
wók
 
__±hªad_muãx_öô


634 #¥agm®
wók
 
__±hªad_muãx_de°roy


635 #¥agm®
wók
 
__±hªad_muãx_lock


636 #¥agm®
wók
 
__±hªad_muãx_åylock


637 #¥agm®
wók
 
__±hªad_muãx_u∆ock


638 #¥agm®
wók
 
__±hªad_muãx©å_öô


639 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


640 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


641 #¥agm®
wók
 
__±hªad_rwlock_de°roy


642 #¥agm®
wók
 
__±hªad_rwlock_rdlock


643 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


644 #¥agm®
wók
 
__±hªad_rwlock_wæock


645 #¥agm®
wók
 
__±hªad_rwlock_åywæock


646 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


647 #¥agm®
wók
 
__±hªad_key_¸óã


648 #¥agm®
wók
 
__±hªad_£t•ecific


649 #¥agm®
wók
 
__±hªad_gë•ecific


650 #¥agm®
wók
 
__±hªad_⁄˚


651 #¥agm®
wók
 
__±hªad_öôülize


652 #¥agm®
wók
 
__±hªad_©f‹k


653 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


654 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


655 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/linux/stddef.h

1 #i‚de‡
_LINUX_STDDEF_H


2 
	#_LINUX_STDDEF_H


	)

6 #unde‡
NULL


7 #i‡
deföed
(
__˝lu•lus
)

8 
	#NULL
 0

	)

10 
	#NULL
 ((*)0)

	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

55 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

56 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

61 #i‚de‡
_WINT_T


66 
	#_WINT_T


	)

67 
	twöt_t
;

71 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

72 && 
deföed
 
__WINT_TYPE__


73 
__BEGIN_NAMESPACE_STD


74 
__WINT_TYPE__
 
	twöt_t
;

75 
	g__END_NAMESPACE_STD


80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

323 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

327 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

328 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

332 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

333 
__THROW
;

336 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifde‡
__USE_GNU


342 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

343 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

344 
__THROW
;

348 
__BEGIN_NAMESPACE_STD


351 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

355 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

359 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

363 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

364 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

365 
mb°©e_t
 *
__p
Ë
__THROW
;

368 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

369 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
__END_NAMESPACE_STD


378 #ifde‡
__USE_EXTERN_INLINES


384 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

385 
__exã∫_ölöe
 
wöt_t


386 
	`__NTH
 (
	$btowc
 (
__c
))

387 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

388 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

390 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

391 
__exã∫_ölöe
 

392 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

393 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

394 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

396 
__exã∫_ölöe
 
size_t


397 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

398 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

399 {  (
__ps
 !
NULL


400 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

403 
__BEGIN_NAMESPACE_STD


406 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

407 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

408 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

412 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

413 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

414 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

415 
__END_NAMESPACE_STD


418 #ifdef 
__USE_XOPEN2K8


421 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

422 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

423 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

427 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

428 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

429 
size_t
 
__nwc
, size_à
__Àn
,

430 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

435 #ifde‡
__USE_XOPEN


437 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

441 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

445 
__BEGIN_NAMESPACE_STD


448 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

450 
__END_NAMESPACE_STD


452 #ifde‡
__USE_ISOC99


453 
__BEGIN_NAMESPACE_C99


455 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

456 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

457 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
__END_NAMESPACE_C99


463 
__BEGIN_NAMESPACE_STD


466 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

467 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

471 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

473 
__THROW
;

474 
__END_NAMESPACE_STD


476 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

477 
__BEGIN_NAMESPACE_C99


480 
__exãnsi⁄__


481 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

483 
__THROW
;

487 
__exãnsi⁄__


488 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

490 
__ba£
Ë
__THROW
;

491 
__END_NAMESPACE_C99


494 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


497 
__exãnsi⁄__


498 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

499 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

500 
__THROW
;

504 
__exãnsi⁄__


505 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

507 
__ba£
Ë
__THROW
;

510 #ifde‡
__USE_GNU


524 
	~<xloˇÀ.h
>

528 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

529 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

530 
__loˇÀ_t
 
__loc
Ë
__THROW
;

532 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

534 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

536 
__exãnsi⁄__


537 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
)

545 
__THROW
;

547 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
;

551 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
;

555 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

556 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

557 
__loˇÀ_t
 
__loc
Ë
__THROW
;

561 #ifdef 
__USE_XOPEN2K8


564 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

569 
__THROW
;

575 #ifdef 
__USE_XOPEN2K8


578 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

581 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_STD


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

648 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

649 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

650 #ifde‡
__REDIRECT


654 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

655 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

656 
__isoc99_fwsˇnf
)

658 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

659 
__isoc99_wsˇnf
)

661 
	`__REDIRECT
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

662 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

663 
__isoc99_swsˇnf
)

664 
__THROW
 ;

666 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

667 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

669 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

671 
__THROW
;

672 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

673 
	#wsˇnf
 
__isoc99_wsˇnf


	)

674 
	#swsˇnf
 
__isoc99_swsˇnf


	)

678 
__END_NAMESPACE_STD


681 #ifde‡
__USE_ISOC99


682 
__BEGIN_NAMESPACE_C99


687 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

688 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

689 
__gnuc_va_li°
 
__¨g
)

695 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

696 
__gnuc_va_li°
 
__¨g
)

699 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

700 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

702 
__THROW
 ;

704 #i‡!
deföed
 
__USE_GNU
 \

705 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

706 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

707 #ifde‡
__REDIRECT


708 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

709 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

710 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

712 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

713 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

715 
	`__REDIRECT
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

716 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

717 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

718 
__THROW
 ;

720 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

721 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
);

723 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

726 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

728 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

729 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

730 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

734 
__END_NAMESPACE_C99


738 
__BEGIN_NAMESPACE_STD


743 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

744 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

750 
wöt_t
 
	`gëwch¨
 ();

757 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

758 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

764 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

772 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

773 
__FILE
 *
__ª°ri˘
 
__°ªam
);

779 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

780 
__FILE
 *
__ª°ri˘
 
__°ªam
);

787 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

788 
__END_NAMESPACE_STD


791 #ifde‡
__USE_GNU


799 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

800 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

808 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

816 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

826 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

835 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

836 
__FILE
 *
__ª°ri˘
 
__°ªam
);

844 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

845 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
__BEGIN_NAMESPACE_C99


853 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

854 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

855 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

856 
__END_NAMESPACE_C99


858 #ifde‡
__USE_GNU


859 
	~<xloˇÀ.h
>

863 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

864 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

865 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

866 
__loˇÀ_t
 
__loc
Ë
__THROW
;

875 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


876 
	#__√ed_iswxxx


	)

877 
	~<w˘y≥.h
>

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/wch¨2.h
>

885 #ifde‡
__LDBL_COMPAT


886 
	~<bôs/wch¨-ldbl.h
>

889 
__END_DECLS


897 #unde‡
__√ed_mb°©e_t


898 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

	@/usr/include/asm-generic/int-ll64.h

8 #i‚de‡
_ASM_GENERIC_INT_LL64_H


9 
	#_ASM_GENERIC_INT_LL64_H


	)

11 
	~<asm/bô•îl⁄g.h
>

13 #i‚de‡
__ASSEMBLY__


19 
__sig√d__
 
	t__s8
;

20 
	t__u8
;

22 
__sig√d__
 
	t__s16
;

23 
	t__u16
;

25 
__sig√d__
 
	t__s32
;

26 
	t__u32
;

28 #ifde‡
__GNUC__


29 
__exãnsi⁄__
 
__sig√d__
 
	t__s64
;

30 
__exãnsi⁄__
 
	t__u64
;

32 
__sig√d__
 
	t__s64
;

33 
	t__u64
;

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

24 #ifde‡
__WCHAR_MAX__


25 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

27 
	#__WCHAR_MAX
 (2147483647)

	)

32 #ifde‡
__WCHAR_UNSIGNED__


33 
	#__WCHAR_MIN
 
L
'\0'

	)

37 #ñi‡
L
'\0' - 1 > 0

38 
	#__WCHAR_MIN
 
L
'\0'

	)

40 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

64 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

65 
size_t
 
__ns1
), 
__wmemmove_chk
)

66 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

69 
__exã∫_Æways_ölöe
 
wch¨_t
 *

70 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

71 
size_t
 
__n
))

73 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

75 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

76  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

77 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

79 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

80  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

81 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

83  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

84 
	}
}

87 #ifde‡
__USE_GNU


88 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

89 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

90 
size_t
 
__ns1
Ë
__THROW
;

91 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

92 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

93 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

94 
size_t
 
__n
), 
wmemp˝y
);

95 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

96 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

97 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

98 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

99 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

102 
__exã∫_Æways_ölöe
 
wch¨_t
 *

103 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

104 
size_t
 
__n
))

106 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

108 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

109  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

110 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

112 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

113  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

114 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

116  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

117 
	}
}

121 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

122 
size_t
 
__ns
Ë
__THROW
;

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

124 
size_t
 
__n
), 
wmem£t
);

125 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

126 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

127 
size_t
 
__ns
), 
__wmem£t_chk
)

128 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

131 
__exã∫_Æways_ölöe
 
wch¨_t
 *

132 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__ª°ri˘
 
__s
, wch¨_à
__c
, 
size_t
 
__n
))

134 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

136 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

137  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

139 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

140  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

141 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

143  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

144 
	}
}

147 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

149 
size_t
 
__n
Ë
__THROW
;

150 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

151 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

152 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

154 
__exã∫_Æways_ölöe
 
wch¨_t
 *

155 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

157 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

158  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

159  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

160 
	}
}

163 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
,

164 
size_t
 
__de°Àn
Ë
__THROW
;

165 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
, (wch¨_à*
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__§c
),

167 
w˝˝y
);

169 
__exã∫_Æways_ölöe
 
wch¨_t
 *

170 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

172 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

173  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

174  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

175 
	}
}

178 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

179 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

180 
size_t
 
__de°Àn
Ë
__THROW
;

181 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

182 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

184 
size_t
 
__n
), 
wc¢˝y
);

185 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

186 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

187 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

188 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

189 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

192 
__exã∫_Æways_ölöe
 
wch¨_t
 *

193 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__exã∫_Æways_ölöe
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__exã∫_Æways_ölöe
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

265 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

266  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

267 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

268  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

269 
	}
}

272 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

273 
__Êag
, 
size_t
 
__s_Àn
,

274 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

275 
__THROW
 ;

277 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

278 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

279 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

280 
sw¥ötf
);

282 #ifde‡
__va_¨g_∑ck


283 
__exã∫_Æways_ölöe
 

284 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

285 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

287 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

288  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

289 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

290 
__fmt
, 
	`__va_¨g_∑ck
 ());

291  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

292 
	}
}

293 #ñi‡!
deföed
 
__˝lu•lus


295 
	#sw¥ötf
(
s
, 
n
, ...) \

296 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

297 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

298 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

299 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

302 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

303 
__Êag
, 
size_t
 
__s_Àn
,

304 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

305 
__gnuc_va_li°
 
__¨g
)

306 
__THROW
 ;

308 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

309 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

310 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

311 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

313 
__exã∫_Æways_ölöe
 

314 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

315 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

317 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

318  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

319 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

320  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

321 
	}
}

324 #i‡
__USE_FORTIFY_LEVEL
 > 1

326 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

328 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

330 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

331 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__gnuc_va_li°
 
__≠
);

333 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

336 #ifde‡
__va_¨g_∑ck


337 
__exã∫_Æways_ölöe
 

338 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

340  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

341 
	}
}

343 
__exã∫_Æways_ölöe
 

344 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

346  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

347 
	`__va_¨g_∑ck
 ());

348 
	}
}

349 #ñi‡!
deföed
 
__˝lu•lus


350 
	#w¥ötf
(...) \

351 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

352 
	#fw¥ötf
(
°ªam
, ...) \

353 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

356 
__exã∫_Æways_ölöe
 

357 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

359  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

360 
	}
}

362 
__exã∫_Æways_ölöe
 

363 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

364 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

366  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

367 
	}
}

371 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

372 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

373 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

374 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

375 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

376 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

377 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

378 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

379 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

382 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

383 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

385 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

387 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

388  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

389 
__n
, 
__°ªam
);

391 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

392  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

393 
__n
, 
__°ªam
);

395  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

396 
	}
}

398 #ifde‡
__USE_GNU


399 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

400 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

401 
__wur
;

402 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

403 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

404 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

405 
__wur
;

406 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

407 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

408 
__FILE
 *
__ª°ri˘
 
__°ªam
),

409 
__fgëws_u∆ocked_chk
)

410 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

413 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

414 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

416 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

418 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

419  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

420 
__n
, 
__°ªam
);

422 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

423  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

424 
__n
, 
__°ªam
);

426  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

427 
	}
}

431 
size_t
 
	$__w¸tomb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__p
,

432 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

433 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

434 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

437 
__exã∫_Æways_ölöe
 
__wur
 
size_t


438 
	`__NTH
 (
	$w¸tomb
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__ps
))

443 
	#__WCHAR_MB_LEN_MAX
 16

	)

444 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


447 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

448  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

449  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

450 
	}
}

453 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

454 
__c⁄°
 **
__ª°ri˘
 
__§c
,

455 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

456 
size_t
 
__d°Àn
Ë
__THROW
;

457 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

458 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

459 
__c⁄°
 **
__ª°ri˘
 
__§c
,

460 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

461 
mb§towcs
);

462 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

463 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

464 
__c⁄°
 **
__ª°ri˘
 
__§c
,

465 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

466 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

467 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

470 
__exã∫_Æways_ölöe
 
size_t


471 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

472 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

474 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

476 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

477  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

478 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

480 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

481  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

485 
	}
}

488 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

489 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

490 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

491 
size_t
 
__d°Àn
Ë
__THROW
;

492 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

493 (*
__ª°ri˘
 
__d°
,

494 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

495 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

496 
wc§tombs
);

497 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

498 (*
__ª°ri˘
 
__d°
,

499 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

500 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

501 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

502 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

504 
__exã∫_Æways_ölöe
 
size_t


505 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

506 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

508 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

510 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

511  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

513 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

514  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

517 
	}
}

520 #ifde‡
__USE_GNU


521 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

522 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

523 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

524 
size_t
 
__d°Àn
Ë
__THROW
;

525 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

526 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

527 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

528 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

529 
mb¢πowcs
);

530 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

531 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

532 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

533 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

534 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

535 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

538 
__exã∫_Æways_ölöe
 
size_t


539 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

540 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

542 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

544 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

545  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

546 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

548 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

549  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

553 
	}
}

556 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

557 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

558 
size_t
 
__nwc
, size_à
__Àn
,

559 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

560 
__THROW
;

561 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

562 (*
__ª°ri˘
 
__d°
,

563 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

564 
size_t
 
__nwc
, size_à
__Àn
,

565 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

566 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

567 (*
__ª°ri˘
 
__d°
,

568 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

569 
size_t
 
__nwc
, size_à
__Àn
,

570 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

571 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

572 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

574 
__exã∫_Æways_ölöe
 
size_t


575 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

576 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

578 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

580 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

581  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

582 
	`__bos
 (
__d°
));

584 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

585  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

589 
	}
}

	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

20 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

21 
	#__OPTION_EGLIBC_ENVZ
 1

	)

22 
	#__OPTION_EGLIBC_FCVT
 1

	)

23 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

24 
	#__OPTION_EGLIBC_FSTAB
 1

	)

25 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

26 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

27 
	#__OPTION_EGLIBC_INET
 1

	)

28 
	#__OPTION_EGLIBC_LIBM
 1

	)

29 
	#__OPTION_EGLIBC_LOCALES
 1

	)

30 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

31 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

32 
	#__OPTION_EGLIBC_NIS
 1

	)

33 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

34 
	#__OPTION_EGLIBC_RCMD
 1

	)

35 
	#__OPTION_EGLIBC_SPAWN
 1

	)

36 
	#__OPTION_EGLIBC_STREAMS
 1

	)

37 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

38 
	#__OPTION_EGLIBC_UTMP
 1

	)

39 
	#__OPTION_EGLIBC_UTMPX
 1

	)

40 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

41 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

42 
	#__OPTION_POSIX_REGEXP
 1

	)

43 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

44 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	#__√ed_sig£t_t


	)

29 
	~<sig«l.h
>

30 
	~<bôs/±hªadty≥s.h
>

31 
	~<bôs/£tjmp.h
>

32 
	~<bôs/w‹dsize.h
>

38 
	mPTHREAD_CREATE_JOINABLE
,

39 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

40 
	mPTHREAD_CREATE_DETACHED


41 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

48 
	mPTHREAD_MUTEX_TIMED_NP
,

49 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

50 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

51 
	mPTHREAD_MUTEX_ADAPTIVE_NP


52 #ifde‡
__USE_UNIX98


54 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

55 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

56 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

57 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


59 #ifde‡
__USE_GNU


61 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


66 #ifde‡
__USE_XOPEN2K


70 
	mPTHREAD_MUTEX_STALLED
,

71 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

72 
	mPTHREAD_MUTEX_ROBUST
,

73 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


78 #ifde‡
__USE_UNIX98


82 
	mPTHREAD_PRIO_NONE
,

83 
	mPTHREAD_PRIO_INHERIT
,

84 
	mPTHREAD_PRIO_PROTECT


90 #i‡
__WORDSIZE
 == 64

91 
	#PTHREAD_MUTEX_INITIALIZER
 \

92 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

93 #ifde‡
__USE_GNU


94 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

98 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

102 
	#PTHREAD_MUTEX_INITIALIZER
 \

103 { { 0, 0, 0, 0, 0, { 0 } } }

	)

104 #ifde‡
__USE_GNU


105 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

109 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

110 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

116 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


119 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

120 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

121 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

122 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


126 
	#PTHREAD_RWLOCK_INITIALIZER
 \

127 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

128 #ifde‡
__USE_GNU


129 #i‡
__WORDSIZE
 == 64

130 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

132 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

134 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


135 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

136 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

137 0, 0, 0, 0 } }

	)

139 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

140 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

141 0 } }

	)

151 
	mPTHREAD_INHERIT_SCHED
,

152 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

153 
	mPTHREAD_EXPLICIT_SCHED


154 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

161 
	mPTHREAD_SCOPE_SYSTEM
,

162 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

163 
	mPTHREAD_SCOPE_PROCESS


164 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

171 
	mPTHREAD_PROCESS_PRIVATE
,

172 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

173 
	mPTHREAD_PROCESS_SHARED


174 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

180 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

184 
	s_±hªad_˛ónup_buf„r


186 (*
	m__routöe
) (*);

187 *
	m__¨g
;

188 
	m__ˇn˚…y≥
;

189 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

195 
	mPTHREAD_CANCEL_ENABLE
,

196 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

197 
	mPTHREAD_CANCEL_DISABLE


198 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

202 
	mPTHREAD_CANCEL_DEFERRED
,

203 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

204 
	mPTHREAD_CANCEL_ASYNCHRONOUS


205 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

207 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

211 
	#PTHREAD_ONCE_INIT
 0

	)

214 #ifde‡
__USE_XOPEN2K


218 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

222 
__BEGIN_DECLS


227 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

228 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

229 *(*
__°¨t_routöe
) (*),

230 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

236 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

244 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

246 #ifde‡
__USE_GNU


249 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

257 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

258 
__c⁄°
 
time•ec
 *
__ab°ime
);

265 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

269 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

272 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

280 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

283 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

284 
__THROW
 
	`__n⁄nuŒ
 ((1));

287 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

288 *
__dëach°©e
)

289 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

292 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

293 
__dëach°©e
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

299 
size_t
 *
__gu¨dsize
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

303 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

304 
size_t
 
__gu¨dsize
)

305 
__THROW
 
	`__n⁄nuŒ
 ((1));

309 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


310 
__©å
,

311 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

315 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

316 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


317 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

320 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


321 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

322 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

325 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1));

329 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


330 
__©å
, *
__ª°ri˘
 
__öhîô
)

331 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

334 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

335 
__öhîô
)

336 
__THROW
 
	`__n⁄nuŒ
 ((1));

340 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

341 *
__ª°ri˘
 
__sc›e
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

345 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

346 
__THROW
 
	`__n⁄nuŒ
 ((1));

349 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


350 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

357 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

358 *
__°ackaddr
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

362 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


363 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

364 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

369 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

370 
size_t
 
__°acksize
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1));

373 #ifde‡
__USE_XOPEN2K


375 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

376 **
__ª°ri˘
 
__°ackaddr
,

377 
size_t
 *
__ª°ri˘
 
__°acksize
)

378 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

383 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

384 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

387 #ifde‡
__USE_GNU


390 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

391 
size_t
 
__˝u£tsize
,

392 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

397 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

398 
size_t
 
__˝u£tsize
,

399 
˝u_£t_t
 *
__˝u£t
)

400 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

406 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

407 
__THROW
 
	`__n⁄nuŒ
 ((2));

415 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

416 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

417 
__THROW
 
	`__n⁄nuŒ
 ((3));

420 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

421 *
__ª°ri˘
 
__pﬁicy
,

422 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

423 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

426 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

427 
__THROW
;

430 #ifde‡
__USE_UNIX98


432 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

435 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

438 #ifde‡
__USE_GNU


443 
	$±hªad_yõld
 (Ë
__THROW
;

448 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

449 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

450 
__THROW
 
	`__n⁄nuŒ
 ((3));

453 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

454 
˝u_£t_t
 *
__˝u£t
)

455 
__THROW
 
	`__n⁄nuŒ
 ((3));

468 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

469 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

480 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

484 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

487 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

492 
	`±hªad_ã°ˇn˚l
 ();

501 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

502 
__mask_was_ßved
;

503 } 
__ˇn˚l_jmp_buf
[1];

504 *
__∑d
[4];

505 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

508 #i‚de‡
__˛ónup_f˘_©åibuã


509 
	#__˛ónup_f˘_©åibuã


	)

514 
	s__±hªad_˛ónup_‰ame


516 (*
__ˇn˚l_routöe
) (*);

517 *
__ˇn˚l_¨g
;

518 
__do_ô
;

519 
__ˇn˚l_ty≥
;

522 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


523 #ifde‡
__˝lu•lus


525 ˛as†
	c__±hªad_˛ónup_˛ass


527 (*
__ˇn˚l_routöe
) (*);

528 *
__ˇn˚l_¨g
;

529 
__do_ô
;

530 
__ˇn˚l_ty≥
;

532 
public
:

533 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

534 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

535 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

536 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

537 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

538 &
__ˇn˚l_ty≥
); 
	}
}

539 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

549 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

551 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

555 
	#±hªad_˛ónup_p›
(
execuã
) \

556 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

557 } 0)

	)

559 #ifde‡
__USE_GNU


563 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

565 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

566 
__˛‰ame
.
	`__de„r
 ()

	)

571 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

572 
__˛‰ame
.
	`__ª°‹e
 (); \

573 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

574 } 0)

	)

581 
__exã∫_ölöe
 

582 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

584 i‡(
__‰ame
->
__do_ô
)

585 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

586 
	}
}

595 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

597 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

598 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

599 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

600 .
__do_ô
 = 1 };

	)

604 
	#±hªad_˛ónup_p›
(
execuã
) \

605 
__˛‰ame
.
__do_ô
 = (
execuã
); \

606 } 0)

	)

608 #ifde‡
__USE_GNU


612 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

614 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

615 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

616 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

617 .
__do_ô
 = 1 }; \

618 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

619 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

624 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

625 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

626 
__˛‰ame
.
__do_ô
 = (
execuã
); \

627 } 0)

	)

638 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

640 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

641 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

642 *
__ˇn˚l_¨g
 = (
¨g
); \

643 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

644 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

645 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

647 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

648 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

652 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

653 dÿ{

	)

654 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

655 
__˛ónup_f˘_©åibuã
;

659 
	#±hªad_˛ónup_p›
(
execuã
) \

662 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 i‡(
execuã
) \

664 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

665 } 0)

	)

666 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

667 
__˛ónup_f˘_©åibuã
;

669 #ifde‡
__USE_GNU


673 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

675 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

676 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

677 *
__ˇn˚l_¨g
 = (
¨g
); \

678 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

679 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

680 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

682 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

683 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

687 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

688 dÿ{

	)

689 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

690 
__˛ónup_f˘_©åibuã
;

695 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

698 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

699 i‡(
execuã
) \

700 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

701 
	}
} 0)

	)

702 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

703 
__˛ónup_f˘_©åibuã
;

707 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

708 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

709 #i‚de‡
SHARED


710 
	`__©åibuã__
 ((
__wók__
))

716 
__jmp_buf_èg
;

717 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

723 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

724 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1));

728 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

729 
__THROW
 
	`__n⁄nuŒ
 ((1));

732 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

733 
__THROW
 
	`__n⁄nuŒ
 ((1));

736 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

737 
__THROW
 
	`__n⁄nuŒ
 ((1));

739 #ifde‡
__USE_XOPEN2K


741 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

742 
__c⁄°
 
time•ec
 *
__ª°ri˘


743 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

747 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

748 
__THROW
 
	`__n⁄nuŒ
 ((1));

751 #ifde‡
__USE_UNIX98


753 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

754 
__ª°ri˘
 
__muãx
,

755 *
__ª°ri˘
 
__¥io˚ûög
)

756 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

760 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

761 
__¥io˚ûög
,

762 *
__ª°ri˘
 
__ﬁd_˚ûög
)

763 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

767 #ifde‡
__USE_XOPEN2K8


769 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROW
 
	`__n⁄nuŒ
 ((1));

771 #ifde‡
__USE_GNU


772 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

773 
__THROW
 
	`__n⁄nuŒ
 ((1));

782 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

783 
__THROW
 
	`__n⁄nuŒ
 ((1));

786 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

787 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

791 
__ª°ri˘
 
__©å
,

792 *
__ª°ri˘
 
__psh¨ed
)

793 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

797 
__psh¨ed
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1));

800 #ifde‡
__USE_UNIX98


802 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


803 
__©å
, *
__ª°ri˘
 
__köd
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

809 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1));

813 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

814 
__ª°ri˘
 
__©å
,

815 *
__ª°ri˘
 
__¥Ÿocﬁ
)

816 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

820 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

821 
__¥Ÿocﬁ
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__¥io˚ûög
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__¥io˚ûög
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

836 #ifde‡
__USE_XOPEN2K


838 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

839 *
__robu°√ss
)

840 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

841 #ifde‡
__USE_GNU


842 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

843 *
__robu°√ss
)

844 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

848 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

849 
__robu°√ss
)

850 
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_GNU


852 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

853 
__robu°√ss
)

854 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


864 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

865 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


866 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

870 
__THROW
 
	`__n⁄nuŒ
 ((1));

873 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

874 
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

880 #ifde‡
__USE_XOPEN2K


882 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

883 
__c⁄°
 
time•ec
 *
__ª°ri˘


884 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

888 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

892 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1));

895 #ifde‡
__USE_XOPEN2K


897 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

898 
__c⁄°
 
time•ec
 *
__ª°ri˘


899 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

903 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

904 
__THROW
 
	`__n⁄nuŒ
 ((1));

910 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

911 
__THROW
 
	`__n⁄nuŒ
 ((1));

914 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

915 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

919 
__ª°ri˘
 
__©å
,

920 *
__ª°ri˘
 
__psh¨ed
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

924 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

925 
__psh¨ed
)

926 
__THROW
 
	`__n⁄nuŒ
 ((1));

929 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

930 
__ª°ri˘
 
__©å
,

931 *
__ª°ri˘
 
__¥ef
)

932 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

935 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

936 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

945 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


946 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

954 
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

966 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

967 
	`__n⁄nuŒ
 ((1, 2));

976 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

977 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

978 
__c⁄°
 
time•ec
 *
__ª°ri˘


979 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

984 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

989 
__THROW
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

993 
__ª°ri˘
 
__©å
,

994 *
__ª°ri˘
 
__psh¨ed
)

995 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

998 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

999 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1001 #ifde‡
__USE_XOPEN2K


1003 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1004 
__ª°ri˘
 
__©å
,

1005 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1009 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1010 
__˛ockid_t
 
__˛ock_id
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1));

1015 #ifde‡
__USE_XOPEN2K


1020 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1021 
__THROW
 
	`__n⁄nuŒ
 ((1));

1024 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1025 
__THROW
 
	`__n⁄nuŒ
 ((1));

1028 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1045 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1046 
__©å
, 
__cou¡
)

1047 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1051 
__THROW
 
	`__n⁄nuŒ
 ((1));

1054 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1064 
__THROW
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1068 
__ª°ri˘
 
__©å
,

1069 *
__ª°ri˘
 
__psh¨ed
)

1070 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1073 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1074 
__psh¨ed
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1087 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1088 (*
__de°r_fun˘i⁄
) (*))

1089 
__THROW
 
	`__n⁄nuŒ
 ((1));

1092 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1095 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1098 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1099 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1102 #ifde‡
__USE_XOPEN2K


1104 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1105 
__˛ockid_t
 *
__˛ock_id
)

1106 
__THROW
 
	`__n⁄nuŒ
 ((2));

1121 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1122 (*
__∑ª¡
) (),

1123 (*
__chûd
Ë()Ë
__THROW
;

1126 #ifde‡
__USE_EXTERN_INLINES


1128 
__exã∫_ölöe
 

1129 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1131  
__thªad1
 =
__thªad2
;

1132 
	}
}

1135 
	g__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<°ddef.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm/bitsperlong.h

1 #i‚de‡
__ASM_X86_BITSPERLONG_H


2 
	#__ASM_X86_BITSPERLONG_H


	)

4 #ifde‡
__x86_64__


5 
	#__BITS_PER_LONG
 64

	)

7 
	#__BITS_PER_LONG
 32

	)

10 
	~<asm-gíîic/bô•îl⁄g.h
>

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

35 
	~<bôs/sched.h
>

37 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

40 
__BEGIN_DECLS


43 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

44 
__THROW
;

47 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

50 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

51 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

54 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

57 
	$sched_yõld
 (Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

66 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

69 #ifde‡
__USE_GNU


71 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

72 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

73 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

74 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

75 
˝u£ç
)

	)

76 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

77 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

80 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

81 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

82 
˝u£ç
)

	)

83 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

84 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

86 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

87 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

88 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

89 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

91 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

92 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

93 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

94 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

95 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

96 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

97 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

104 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

105 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

106 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

110 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

111 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

114 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

115 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

118 
__END_DECLS


	@/usr/include/asm-generic/bitsperlong.h

1 #i‚de‡
__ASM_GENERIC_BITS_PER_LONG


2 
	#__ASM_GENERIC_BITS_PER_LONG


	)

11 #i‚de‡
__BITS_PER_LONG


12 
	#__BITS_PER_LONG
 32

	)

	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

37 #ifde‡
__USE_MISC


39 
	#CSIGNAL
 0x000000f‡

	)

40 
	#CLONE_VM
 0x00000100

	)

41 
	#CLONE_FS
 0x00000200

	)

42 
	#CLONE_FILES
 0x00000400

	)

43 
	#CLONE_SIGHAND
 0x00000800

	)

44 
	#CLONE_PTRACE
 0x00002000

	)

45 
	#CLONE_VFORK
 0x00004000

	)

47 
	#CLONE_PARENT
 0x00008000

	)

49 
	#CLONE_THREAD
 0x00010000

	)

50 
	#CLONE_NEWNS
 0x00020000

	)

51 
	#CLONE_SYSVSEM
 0x00040000

	)

52 
	#CLONE_SETTLS
 0x00080000

	)

53 
	#CLONE_PARENT_SETTID
 0x00100000

	)

55 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

57 
	#CLONE_DETACHED
 0x00400000

	)

58 
	#CLONE_UNTRACED
 0x00800000

	)

60 
	#CLONE_CHILD_SETTID
 0x01000000

	)

62 
	#CLONE_NEWUTS
 0x04000000

	)

63 
	#CLONE_NEWIPC
 0x08000000

	)

64 
	#CLONE_NEWUSER
 0x10000000

	)

65 
	#CLONE_NEWPID
 0x20000000

	)

66 
	#CLONE_NEWNET
 0x40000000

	)

67 
	#CLONE_IO
 0x80000000

	)

71 
	ssched_∑øm


73 
	m__sched_¥i‹ôy
;

76 
	g__BEGIN_DECLS


78 #ifde‡
__USE_MISC


80 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

81 
__Êags
, *
__¨g
, ...Ë
__THROW
;

84 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

87 
	$sched_gë˝u
 (Ë
__THROW
;

90 
__END_DECLS


94 #i‡!
deföed
 
__deföed_sched∑øm
 \

95 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

96 
	#__deföed_sched∑øm
 1

	)

98 
	s__sched_∑øm


100 
__sched_¥i‹ôy
;

102 #unde‡
__√ed_sched∑øm


106 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


107 
	#__˝u_£t_t_deföed


	)

109 
	#__CPU_SETSIZE
 1024

	)

110 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

113 
	t__˝u_mask
;

116 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

117 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

122 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

123 } 
	t˝u_£t_t
;

126 #i‡
	`__GNUC_PREREQ
 (2, 91)

127 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

128 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

130 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

132 
size_t
 
__i
; \

133 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

134 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

135 
__i
 = 0; __ò< 
__imax
; ++__i) \

136 
__bôs
[
__i
] = 0; \

137 
	}
} 0)

	)

139 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

140 (
__exãnsi⁄__
 \

141 ({ 
size_t
 
__˝u
 = (
˝u
); \

142 
__˝u
 < 8 * (
£tsize
) \

143 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

144 |
	`__CPUMASK
 (
__˝u
)) \

145 : 0; }))

	)

146 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

147 (
__exãnsi⁄__
 \

148 ({ 
size_t
 
__˝u
 = (
˝u
); \

149 
__˝u
 < 8 * (
£tsize
) \

150 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

151 &~
	`__CPUMASK
 (
__˝u
)) \

152 : 0; }))

	)

153 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

154 (
__exãnsi⁄__
 \

155 ({ 
size_t
 
__˝u
 = (
˝u
); \

156 
__˝u
 < 8 * (
£tsize
) \

157 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

158 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

159 : 0; }))

	)

161 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

162 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

164 #i‡
__GNUC_PREREQ
 (2, 91)

165 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

166 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

168 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

169 (
__exãnsi⁄__
 \

170 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

171 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

172 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

173 
size_t
 
__i
; \

174 
__i
 = 0; __ò< 
__imax
; ++__i) \

175 i‡(
__bôs
[
__i
] != __bits[__i]) \

177 
__i
 =
__imax
; }))

	)

180 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

181 (
__exãnsi⁄__
 \

182 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

183 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

184 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

185 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

186 
size_t
 
__i
; \

187 
__i
 = 0; __ò< 
__imax
; ++__i) \

188 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

189 
__de°
; }))

	)

191 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

192 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

193 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

194 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

196 
__BEGIN_DECLS


198 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

199 
__THROW
;

200 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

201 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

203 
__END_DECLS


	@
1
.
1
/usr/include
192
4326
fs/bitmap.c
fs/block_dev.c
fs/buffer.c
fs/char_dev.c
fs/exec.c
fs/fcntl.c
fs/file_dev.c
fs/file_table.c
fs/inode.c
fs/ioctl.c
fs/namei.c
fs/open.c
fs/pipe.c
fs/read_write.c
fs/stat.c
fs/super.c
fs/truncate.c
include/a.out.h
include/asm/io.h
include/asm/memory.h
include/asm/segment.h
include/asm/system.h
include/const.h
include/ctype.h
include/errno.h
include/fcntl.h
include/linux/config.h
include/linux/fs.h
include/linux/hdreg.h
include/linux/head.h
include/linux/kernel.h
include/linux/mm.h
include/linux/sched.h
include/linux/sys.h
include/linux/tty.h
include/signal.h
include/stdarg.h
include/stddef.h
include/string.h
include/sys/stat.h
include/sys/times.h
include/sys/types.h
include/sys/utsname.h
include/sys/wait.h
include/termios.h
include/time.h
include/unistd.h
include/utime.h
init/main.c
kernel/blk_drv/blk.h
kernel/blk_drv/floppy.c
kernel/blk_drv/hd.c
kernel/blk_drv/ll_rw_blk.c
kernel/blk_drv/ramdisk.c
kernel/chr_drv/console.c
kernel/chr_drv/serial.c
kernel/chr_drv/tty_io.c
kernel/chr_drv/tty_ioctl.c
kernel/exit.c
kernel/fork.c
kernel/math/math_emulate.c
kernel/mktime.c
kernel/panic.c
kernel/printk.c
kernel/sched.c
kernel/signal.c
kernel/sys.c
kernel/vsprintf.c
lib/_exit.c
lib/close.c
lib/ctype.c
lib/dup.c
lib/errno.c
lib/execve.c
lib/malloc.c
lib/open.c
lib/setsid.c
lib/string.c
lib/wait.c
lib/write.c
mm/memory.c
tools/build.c
/usr/include/a.out.h
/usr/include/ctype.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/linux/fdreg.h
/usr/include/linux/fs.h
/usr/include/linux/hdreg.h
/usr/include/linux/kernel.h
/usr/include/linux/sched.h
/usr/include/linux/tty.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/stat.h
/usr/include/sys/times.h
/usr/include/sys/types.h
/usr/include/sys/utsname.h
/usr/include/sys/wait.h
/usr/include/termios.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/utime.h
/usr/include/alloca.h
/usr/include/bits/a.out.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/termios.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/utsname.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/linux/ioctl.h
/usr/include/linux/limits.h
/usr/include/linux/types.h
/usr/include/sys/resource.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ttydefaults.h
/usr/include/sys/ucontext.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/ioctl.h
/usr/include/asm/types.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/predefs.h
/usr/include/bits/resource.h
/usr/include/bits/select.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/bits/wordsize.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/linux/posix_types.h
/usr/include/sys/cdefs.h
/usr/include/asm-generic/ioctl.h
/usr/include/asm-generic/types.h
/usr/include/asm/errno.h
/usr/include/asm/posix_types.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/linux/stddef.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/int-ll64.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar.h
/usr/include/bits/wchar2.h
/usr/include/gnu/option-groups.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm/bitsperlong.h
/usr/include/bits/setjmp.h
/usr/include/sched.h
/usr/include/asm-generic/bitsperlong.h
/usr/include/bits/sched.h
