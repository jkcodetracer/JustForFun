#!/usr/bin/perl

use 5.010;
use utf8;

$what = " brontosaurus seak";
$n = 3;

print "fred ate $n $wahts.\n";
print "fred ate $n ${what}s.\n";
print "fred ate $n $what"."s.\n";
print 'fred ate ' . $n . ' ' . $what . "s.\n";

$jok = " fuck ".3;

print "sdf \$jok $what \n","k4"*8 ."sdfasdf"."rr","\n";

$alef = chr(0x25D2);

print "$alef\n";

#chomp($line = <STDIN>);
$line = "\ner\n\nerrrrrrrr\n";
chomp($line);
if ($line eq "\n"){
	print "That was just a blank line!\n";
} else {
	print "That line of input was: $line";
}

$count = 0;

while($count < 10){
	$count += 2;
	$sum += $count;
	print "count is now $count, sum: $sum\n";
}
#{}竟然不影响作用域...
print "sum:...$sum\n";

#stdin流
$madonna = <STDIN>;
if(defined($madonna)) {
	print "the input was $madonna";
} else {
	print "No input available!\n";
}



$rock[0] = 'bedrock';
$rock[1] = 'slate';
$rock[2] = 'lava';
$rock[3] = 'crush rock';
$rock[99] = 'schist';

$end = $#rock;
print "$end \n";
print "$rock[$end]\n";
print "$rock[-1]\n";

#list  array

@rocks = qw /what the game/;
@rock = (@rock, @rock,@rock);

@rock = @rocks;

$count = 0;
while ($count <= $#rock){
	print "$rock[$count]\n";
	$count += 1;
}

@rocks = qw /ct joker mail/;
foreach $rock (@rocks)
{
	$rock = "\t$rock";
	$rock .= "\n";
}

print "this is ..", @rocks, " end\n";

foreach $rock (qw (ss ssf fff))
{
	print "$rock\n";
}

#foreach (..110)
#{
#	print "i can count to $_!\n"
#}
#
$_="sssff.d";
$_=qw (sf sdf sf);
print

@fred=6..10;
@barney = reverse @fred;
@wilma = reverse (4..9);
print @fred,"\n", @barney,"\n", @wilma,"\n";

@rock = qw /joker zhaoyue wang zhao ct/;
@rock = sort @rock;
print @rock;

@people = qw (fred barney joy);
@sort = sort @people;
$number = 42 + @people;

print @sort, "\n", $number , "\n";

@back = reverse qw /jok ct yue/;
$front = reverse qw /jok ct yue/;

print @back , "\n", $front, "\n";


sub marine{
	$n += 1;
	print "hallo, sailor number $n!\n";
}

&marine;
&marine;
&marine;

$fred = 3;
$barney = 4;
$whilma = &sum_of_fred_and_barney;
print "\$whilma = $whilma \n";

$betty = 3 * &sum_of_fred_and_barney;
print "\$betty is $betty .\n";

sub sum_of_fred_and_barney {
	print "Hey, you called the sum_of_fred_and_barney subroutine!\n";
	$fred + $barney;
}

sub max {
	print @_, $#_, "\n";
	if($_[0] < $_[1])
	{
		$_[1];
	}else{
		$_[0];
	}
}
print &max(23,55), "\n";

sub min{
	my($m, $n);
	($m, $n) = @_;
	if($m < $n) {$m} else {$n};   #ignore .. ok..
	print "\n";
	print #_;
	print "\n";
}

print min(123,44);

$maximum = &m_max(3,5,4,10,6);

sub m_max{
	foreach(@_)
	{
		if($_ > $max_so_far){
			$max_so_far = $_;
		}
	}
	my($jo) = @_;
	print "jo" , $jo, "\n";
	my $jo = @_;
	print "jo.." , $jo, "\n";
	$max_so_far;
}

print "m_max: ", $maximum;

running_sum(5, 6);
running_sum(1..3);
running_sum(4);

sub running_sum{
	state $sum = 0;
	state @numbers ; 

	foreach my $number (@_){
		push @numbers, $number;
		$sum += $number;
	}
	print "The sum of (@numbers) is $sum \n";
}
